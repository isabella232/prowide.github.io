{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Getting Started These online resources contain documentation and references to help you develop your application on top of Prowide libraries , including: developer guides code examples release notes The Open Source section covers the Prowide open source libraries for FIN MT and ISO 20022. The Prowide Integrator section covers the complemetary licensed libraries and tools. Other content in this section provides general information about the standards, and also references for the libraries impementation and maintenance policies.","title":"Getting Started"},{"location":"#getting-started","text":"These online resources contain documentation and references to help you develop your application on top of Prowide libraries , including: developer guides code examples release notes The Open Source section covers the Prowide open source libraries for FIN MT and ISO 20022. The Prowide Integrator section covers the complemetary licensed libraries and tools. Other content in this section provides general information about the standards, and also references for the libraries impementation and maintenance policies.","title":"Getting Started"},{"location":"deprecation/","text":"Deprecation policy","title":"Deprecation policy"},{"location":"deprecation/#deprecation-policy","text":"","title":"Deprecation policy"},{"location":"swift/","text":"About SWIFT","title":"About SWIFT"},{"location":"swift/#about-swift","text":"","title":"About SWIFT"},{"location":"integrator/cbpr/","text":"Prowide Integrator CBPR+ WIP","title":"Prowide Integrator CBPR+"},{"location":"integrator/cbpr/#prowide-integrator-cbpr","text":"WIP","title":"Prowide Integrator CBPR+"},{"location":"integrator/mule/","text":"Mule Anypoint Connector for Prowide User Manual Mule Anypoint Connector for Prowide facilitates an out-of-the-box integration of key features from the Prowide libraries in MULE applications. The key features enable validation and translation of SWIFT messages in Mule flows. Including operations for the legacy SWIFT MT standard and the ISO 20022 MX standard. Current implementation implements the following operations: Validate MT messages Validate ISO 20022 (MX) messages Validate CBPR+ messages Translate MT to ISO 20022 (MX) Translate ISO 20022 (MX) to MT Translate CBPR+ to MT Additional operations might be included in future releases. Prerequisites This document assumes that you are familiar with Mule 4, Anypoint Connectors, and Anypoint Studio. To increase your familiarity with Studio, consider completing an Anypoint Studio Tutorial. This page requires some basic knowledge of Mule Concepts, Components in a Mule Flow, and Global Elements. Hardware and Software Requirements For hardware and software requirements, please visit the Hardware and Software Requirements page . Mule Compatibility Application/Service Version Mule Runtime 4.0.1 Java 8+ Requirements The Prowide Integrator is a set of licensed Java libraries that complements the open source libraries Prowide Core and Prowide ISO 20022. Thus in order to use the Prowide Mule connector, you need to have a valid license and access to the Prowide Integrator libraries distribution. More information about the Prowide Integrator can be found in the Prowide Integrator product page. Installing the Connector You can install the connector in Anypoint Studio using the instructions in Installing a Connector from Anypoint Exchange . Maven Dependency information For Maven dependency management, include this XML snippet in pom.xml file in the Mule project. <groupId>org.mule.modules.prowide-integrator</groupId> <artifactId>mule-prowide-integrator-connector</artifactId> <version>1.0.0</version> <classifier>mule-plugin</classifier> How to configure The Prowide Mule connector requires a valid license to be able to use the Prowide Integrator libraries. The license is provided as a file in the Prowide Integrator distribution. The license file must be placed in the Mule application classpath. The Prowide Mule connector can be configured in the Mule application configuration file or in the Mule application properties file. Check the Prowide Integrator developer guides for additional information. Additional References Release notes Technical Reference","title":"Mule Anypoint Connector for Prowide"},{"location":"integrator/mule/#mule-anypoint-connector-for-prowide","text":"","title":"Mule Anypoint Connector for Prowide"},{"location":"integrator/mule/#user-manual","text":"Mule Anypoint Connector for Prowide facilitates an out-of-the-box integration of key features from the Prowide libraries in MULE applications. The key features enable validation and translation of SWIFT messages in Mule flows. Including operations for the legacy SWIFT MT standard and the ISO 20022 MX standard. Current implementation implements the following operations: Validate MT messages Validate ISO 20022 (MX) messages Validate CBPR+ messages Translate MT to ISO 20022 (MX) Translate ISO 20022 (MX) to MT Translate CBPR+ to MT Additional operations might be included in future releases.","title":"User Manual"},{"location":"integrator/mule/#prerequisites","text":"This document assumes that you are familiar with Mule 4, Anypoint Connectors, and Anypoint Studio. To increase your familiarity with Studio, consider completing an Anypoint Studio Tutorial. This page requires some basic knowledge of Mule Concepts, Components in a Mule Flow, and Global Elements.","title":"Prerequisites"},{"location":"integrator/mule/#hardware-and-software-requirements","text":"For hardware and software requirements, please visit the Hardware and Software Requirements page .","title":"Hardware and Software Requirements"},{"location":"integrator/mule/#mule-compatibility","text":"Application/Service Version Mule Runtime 4.0.1 Java 8+","title":"Mule Compatibility"},{"location":"integrator/mule/#requirements","text":"The Prowide Integrator is a set of licensed Java libraries that complements the open source libraries Prowide Core and Prowide ISO 20022. Thus in order to use the Prowide Mule connector, you need to have a valid license and access to the Prowide Integrator libraries distribution. More information about the Prowide Integrator can be found in the Prowide Integrator product page.","title":"Requirements"},{"location":"integrator/mule/#installing-the-connector","text":"You can install the connector in Anypoint Studio using the instructions in Installing a Connector from Anypoint Exchange .","title":"Installing the Connector"},{"location":"integrator/mule/#maven-dependency-information","text":"For Maven dependency management, include this XML snippet in pom.xml file in the Mule project. <groupId>org.mule.modules.prowide-integrator</groupId> <artifactId>mule-prowide-integrator-connector</artifactId> <version>1.0.0</version> <classifier>mule-plugin</classifier>","title":"Maven Dependency information"},{"location":"integrator/mule/#how-to-configure","text":"The Prowide Mule connector requires a valid license to be able to use the Prowide Integrator libraries. The license is provided as a file in the Prowide Integrator distribution. The license file must be placed in the Mule application classpath. The Prowide Mule connector can be configured in the Mule application configuration file or in the Mule application properties file. Check the Prowide Integrator developer guides for additional information.","title":"How to configure"},{"location":"integrator/mule/#additional-references","text":"Release notes Technical Reference","title":"Additional References"},{"location":"integrator/myformat/","text":"Prowide Integrator MyFormat WIP","title":"Prowide Integrator MyFormat"},{"location":"integrator/myformat/#prowide-integrator-myformat","text":"WIP","title":"Prowide Integrator MyFormat"},{"location":"integrator/overview/","text":"Prowide Integrator - Overview Prowide Integrator is a set of complementary Java libraries built on top of the open source. These libraries are licensed software, thus download and usage is restricted to licensed customers. Libraries stack The SDK is the cornerstone of the package, providing common features such as additional model classes, expanded printout, support for the SAA DataPDU envelop and LAU signature. The modules on top provide specific features for standard compliance validation, MT/MX automatic translations and conversions to proprietary formats. Then the CBPR+, SEPA, SIC and SCORE modules are optional message modules for restricted versions of the standards.","title":"Overview"},{"location":"integrator/overview/#prowide-integrator-overview","text":"Prowide Integrator is a set of complementary Java libraries built on top of the open source. These libraries are licensed software, thus download and usage is restricted to licensed customers.","title":"Prowide Integrator - Overview"},{"location":"integrator/overview/#libraries-stack","text":"The SDK is the cornerstone of the package, providing common features such as additional model classes, expanded printout, support for the SAA DataPDU envelop and LAU signature. The modules on top provide specific features for standard compliance validation, MT/MX automatic translations and conversions to proprietary formats. Then the CBPR+, SEPA, SIC and SCORE modules are optional message modules for restricted versions of the standards.","title":"Libraries stack"},{"location":"integrator/score/","text":"Prowide Integrator SCORE WIP","title":"Prowide Integrator SCORE"},{"location":"integrator/score/#prowide-integrator-score","text":"WIP","title":"Prowide Integrator SCORE"},{"location":"integrator/sdk/","text":"Prowide Integrator SDK WIP","title":"Prowide Integrator SDK"},{"location":"integrator/sdk/#prowide-integrator-sdk","text":"WIP","title":"Prowide Integrator SDK"},{"location":"integrator/sepa/","text":"Prowide Integrator SEPA WIP","title":"Prowide Integrator SEPA"},{"location":"integrator/sepa/#prowide-integrator-sepa","text":"WIP","title":"Prowide Integrator SEPA"},{"location":"integrator/sic/","text":"Prowide Integrator SIC WIP","title":"Prowide Integrator SIC"},{"location":"integrator/sic/#prowide-integrator-sic","text":"WIP","title":"Prowide Integrator SIC"},{"location":"integrator/translations/","text":"Prowide Integrator Translations WIP","title":"Prowide Integrator Translations"},{"location":"integrator/translations/#prowide-integrator-translations","text":"WIP","title":"Prowide Integrator Translations"},{"location":"integrator/validation/","text":"Prowide Integrator Validation WIP","title":"Prowide Integrator Validation"},{"location":"integrator/validation/#prowide-integrator-validation","text":"WIP","title":"Prowide Integrator Validation"},{"location":"open-source/core/","text":"Prowide Core Overview Prowide Core implements the foundation classes to manage SWIFT MT (FIN) messages in Java. The library provides a comprehensive model for all MT message categories. The API features include parsing messages from FIN format to Java, serializing Java model objects into the FIN format and the conversion between FIN messages and XML and JSON formats. For ISO 20022 (MX) see the complementary Prowide ISO 20022 library. Quick API reference TODO from current website Java model for MT messages The message model for MT messages is a set of Java classes representing the structure and content of a SWIFT MT (ISO 15022) message. The message model is a central part of the library suited for message creation, parsing and persistence. It is designed in three layers of specific use; each provides a different level of abstraction. Persistence - Lightweight Layer The upper layer is a generic representation for all messages mainly intended for message persistence. The model includes specific attributes for header and trailer information, while the body content (business payload) is kept as a single String attribute (not parsed). Since this model is generic, message objects can be instantiated without prior knowledge of the specific type of message. This design is therefore optimal for database persistence because all message types can share a simple and efficient database structure. It can be thought of as a wrapper of a swift message file. Besides message content, the model provides several metadata containers very useful for a message management application, such as a holder for message status, attached notes and extendable properties. The main classes for this layer are the AbstractSwiftMessage and MtSwiftMessage. Parse/Build - Functional Layer The middle layer is a functional view of a specific message, for example an MT103. The provided API allows you to read data from a known message easily, as well as API to build new messages. This layer provides a specific class for each message type, with getters for its inner sequences and fields. Also a specific class for each possible field of the message, for example Field32A, with methods to retrieve any internal component (subfield), for example the Calendar, Currency and Amount of Field32A. These specific classes can be thought of as a facade or view of the internal message content. The entry point for this layer is the AbstractMT and all its subclasses that represent a specific message type. Notice these objects are not intended for message modification because when you read content with a getFieldNN the returned object is detached from the underlying model. Details on how to modify a message are described later in this document. Backbone - Structure Layer The lower layer is the internal backbone of the upper one, and in most cases there is no need to use this API from an application. The message representation at this level handles the message content as simple tuples of field name and field value and implements low level handling of sequences and blocks. This model is quite simple, generic and loosely coupled to specific messages, therefore being very efficient and requiring minimal construction constraints. Messages in this layer are represented by the SwiftMessage class, with its internal name-value tuples modeled by the Tag class. This layer is also the one used for content modification.","title":"Prowide Core"},{"location":"open-source/core/#prowide-core","text":"","title":"Prowide Core"},{"location":"open-source/core/#overview","text":"Prowide Core implements the foundation classes to manage SWIFT MT (FIN) messages in Java. The library provides a comprehensive model for all MT message categories. The API features include parsing messages from FIN format to Java, serializing Java model objects into the FIN format and the conversion between FIN messages and XML and JSON formats. For ISO 20022 (MX) see the complementary Prowide ISO 20022 library.","title":"Overview"},{"location":"open-source/core/#quick-api-reference","text":"TODO from current website","title":"Quick API reference"},{"location":"open-source/core/#java-model-for-mt-messages","text":"The message model for MT messages is a set of Java classes representing the structure and content of a SWIFT MT (ISO 15022) message. The message model is a central part of the library suited for message creation, parsing and persistence. It is designed in three layers of specific use; each provides a different level of abstraction. Persistence - Lightweight Layer The upper layer is a generic representation for all messages mainly intended for message persistence. The model includes specific attributes for header and trailer information, while the body content (business payload) is kept as a single String attribute (not parsed). Since this model is generic, message objects can be instantiated without prior knowledge of the specific type of message. This design is therefore optimal for database persistence because all message types can share a simple and efficient database structure. It can be thought of as a wrapper of a swift message file. Besides message content, the model provides several metadata containers very useful for a message management application, such as a holder for message status, attached notes and extendable properties. The main classes for this layer are the AbstractSwiftMessage and MtSwiftMessage. Parse/Build - Functional Layer The middle layer is a functional view of a specific message, for example an MT103. The provided API allows you to read data from a known message easily, as well as API to build new messages. This layer provides a specific class for each message type, with getters for its inner sequences and fields. Also a specific class for each possible field of the message, for example Field32A, with methods to retrieve any internal component (subfield), for example the Calendar, Currency and Amount of Field32A. These specific classes can be thought of as a facade or view of the internal message content. The entry point for this layer is the AbstractMT and all its subclasses that represent a specific message type. Notice these objects are not intended for message modification because when you read content with a getFieldNN the returned object is detached from the underlying model. Details on how to modify a message are described later in this document. Backbone - Structure Layer The lower layer is the internal backbone of the upper one, and in most cases there is no need to use this API from an application. The message representation at this level handles the message content as simple tuples of field name and field value and implements low level handling of sequences and blocks. This model is quite simple, generic and loosely coupled to specific messages, therefore being very efficient and requiring minimal construction constraints. Messages in this layer are represented by the SwiftMessage class, with its internal name-value tuples modeled by the Tag class. This layer is also the one used for content modification.","title":"Java model for MT messages"},{"location":"open-source/iso20022/","text":"Prowide ISO20022 Overview WIP Quick API reference WIP","title":"Prowide ISO 20022"},{"location":"open-source/iso20022/#prowide-iso20022","text":"","title":"Prowide ISO20022"},{"location":"open-source/iso20022/#overview","text":"WIP","title":"Overview"},{"location":"open-source/iso20022/#quick-api-reference","text":"WIP","title":"Quick API reference"},{"location":"release-notes/changelog-cbpr/","text":"Prowide Integrator CBPR+ - CHANGELOG Model extension for Cross Border and Payments Regulation (CBPR) 2.1u3 - September 2022 Added the current SRU to the version number for consistent SRU based BOM and dependency with other Integrator artifacts 2.1u2 - April 2022 Internal schema compress to reduce jar size 2.1u1 - March 2022 Added the specific BAH v2 schema for CBPR+ along a CbprHeaderSchemaResolver util class to retrieve it (PW-863) Added support for customizable date and time adapters in the XML marshalling/unmarshalling 2.1 - January 2022 Updated implementation for the CBPR+ release 2.1 (effective in November 2022) 2.0u4 - January 2022 Added a CbprMessageFactory to create CBPR+ message objects from XML with type and variant auto detection Added CbprMessageType#of(AppHdr appHdr) to detect the type from an application header instance 2.0u3 - January 2022 Prowide Integrator SDK and Prowide Core updates 2.0u2 - December 2021 Added com.prowidesoftware.integrator.cbpr as automatic module name in the MANIFEST for JPMS support 2.0u1 - December 2021 Added a custom marshaller for date time elements to be compliant with CBPR_DateTime ('+00:00' offset instead of 'Z') 2.0 - November 2021 Updated implementation for the 17 message types in the CBPR+ release 2.0 (effective in November 2022) 1.2u2 - October 2020 Removed the CopyableTo implementation from the generated model Added a method to return the MxId and the targetNamespace in the CbprMessageType enumeration 1.2u1 - September 2020 Added phase II message types: pacs.010.001.03 and pacs.008.001.08_STP 1.2 Initial implementation for the CBPR+ releease 1.2","title":"Prowide Integrator CBPR+"},{"location":"release-notes/changelog-cbpr/#prowide-integrator-cbpr-changelog","text":"Model extension for Cross Border and Payments Regulation (CBPR)","title":"Prowide Integrator CBPR+ - CHANGELOG"},{"location":"release-notes/changelog-cbpr/#21u3-september-2022","text":"Added the current SRU to the version number for consistent SRU based BOM and dependency with other Integrator artifacts","title":"2.1u3 - September 2022"},{"location":"release-notes/changelog-cbpr/#21u2-april-2022","text":"Internal schema compress to reduce jar size","title":"2.1u2 - April 2022"},{"location":"release-notes/changelog-cbpr/#21u1-march-2022","text":"Added the specific BAH v2 schema for CBPR+ along a CbprHeaderSchemaResolver util class to retrieve it (PW-863) Added support for customizable date and time adapters in the XML marshalling/unmarshalling","title":"2.1u1 - March 2022"},{"location":"release-notes/changelog-cbpr/#21-january-2022","text":"Updated implementation for the CBPR+ release 2.1 (effective in November 2022)","title":"2.1 - January 2022"},{"location":"release-notes/changelog-cbpr/#20u4-january-2022","text":"Added a CbprMessageFactory to create CBPR+ message objects from XML with type and variant auto detection Added CbprMessageType#of(AppHdr appHdr) to detect the type from an application header instance","title":"2.0u4 - January 2022"},{"location":"release-notes/changelog-cbpr/#20u3-january-2022","text":"Prowide Integrator SDK and Prowide Core updates","title":"2.0u3 - January 2022"},{"location":"release-notes/changelog-cbpr/#20u2-december-2021","text":"Added com.prowidesoftware.integrator.cbpr as automatic module name in the MANIFEST for JPMS support","title":"2.0u2 - December 2021"},{"location":"release-notes/changelog-cbpr/#20u1-december-2021","text":"Added a custom marshaller for date time elements to be compliant with CBPR_DateTime ('+00:00' offset instead of 'Z')","title":"2.0u1 - December 2021"},{"location":"release-notes/changelog-cbpr/#20-november-2021","text":"Updated implementation for the 17 message types in the CBPR+ release 2.0 (effective in November 2022)","title":"2.0 - November 2021"},{"location":"release-notes/changelog-cbpr/#12u2-october-2020","text":"Removed the CopyableTo implementation from the generated model Added a method to return the MxId and the targetNamespace in the CbprMessageType enumeration","title":"1.2u2 - October 2020"},{"location":"release-notes/changelog-cbpr/#12u1-september-2020","text":"Added phase II message types: pacs.010.001.03 and pacs.008.001.08_STP","title":"1.2u1 - September 2020"},{"location":"release-notes/changelog-cbpr/#12","text":"Initial implementation for the CBPR+ releease 1.2","title":"1.2"},{"location":"release-notes/changelog-myformat/","text":"Prowide Integrator MyFormat - CHANGELOG 9.2.8 - September 2022 Added transformation functions logicalTerminalAddress, logicalTerminalAddressSend and logicalTerminalAddressReceive Added transformation function sum 9.2.7 - August 2022 (PW-1010) Added an automatic sanitization when converting into MT, to fix start of line characters and some missing components 9.2.6 - May 2022 (PW-813) Internal enhancement to fix CVE Deprecation API review 9.2.5 - April 2022 Minor fix in the database loader, to set the table name with the configuration name parameter Fixed mapping table validation when there are SETUP commands in the mappings Minor internal code enhancements Prowide Integrator SDK and Prowide Core updates 9.2.4 - January 2022 Prowide Integrator SDK and Prowide Core updates 9.2.3 - December 2021 Added com.prowidesoftware.integrator.myformat as automatic module name in the MANIFEST for JPMS support 9.2.2 - June 2021 Added support to read and write block 5 fields with selectors such as \"b5/CHK\" 9.2.1 - June 2021 (PW-527) Additional change in the XML and MX reader to trim indentation and trailing spaces from elements while preserving line feeds (PW-527) Changed the XML and MX reader to preserve whitespaces from elements content (PW-527) Added transformation functions wrapLinesPreserve and wrapLinesPreservePrepend 9.2.0 - May 2021 SWIFT Standard release update 2021 (live 21 November 2021) Yearly revision of deprecation phase (see http://www.prowidesoftware.com/resources/deprecation-policy) 9.1.8 - April 2021 (PW-502) Added MappingTableDatabaseLoader for more flexible data base access and querying when load the mappings 9.1.7 - March 2021 (PW-480) Fixed mapping into block 2 using whole block value as input data 9.1.6 - February 2021 Added validation of the new SETUP commands: separator, smartQuotes, smartEscapes, addFieldNames and columnNames 9.1.5 - January 2021 Fixed CSV writer with APPEND mode Added SETUP commands to the externalized mapping into CSV: separator, smartQuotes, smartEscapes, addFieldNames and columnNames 9.1.4 - January 2021 Fixed semantic of the MtReader to return null content if the MT selector targets a missing field component Fixed transformation \"rightPad\" Fixed transformation \"formatDecimal\" when input number contains decimal separator and no decimal digits (valid case in MT amounts) Fixed transformation \"fixed\" to avoud setting the default value if the input content is null (not found in source) Fixed transformations \"append\", \"prepend\", \"replaceIfEquals\" and \"wrap\" to avoid generating value if input is null Fixed transformations \"indexOf\", \"indexOfIgnoreCase\", \"lastIndexOf\" and \"lastIndexOfIgnoreCase\" when found substring is at index 0 Enhanced number parse exception handling in transformations using or expecting integers and decimal numbers 9.1.3 - December 2020 License check review 9.1.2 - November 2020 (CR-27) Added support for forced double quotes for CSVWriter (CR-27) Added support for disable smart escaping (ex: comma inside double quotes are not escaped) for CSVWriter (CR-27) Added support to generate header column with field names for CSVWriter (CR-29) Added support in the MtWriter to create internal loop (sequences without 16R and 16S boundary) present for example in MT940 (CR-28) Added support in the MtWriter to create block 1 and block 2 from whole value strings (not targeting individual fields) (CR-28) Added support in the MtReader to retrieve the whole block 1 or block 2 value with selectors \"b1\" and \"b2\" Minor fix in formatDecimal transformation when default locale has comma for decimal separator 9.1.1 - September 2020 (PW-334) Added backward compatibility support for custom(\"MyCustomTransformer\") in the mapping transformations 9.1.0 - May 2020 SWIFT Standard release update 2020 (live 22 November 2020) Yearly revision of deprecation phase (see http://www.prowidesoftware.com/resources/deprecation-policy) 9.0.1 - May 2020 Internal implementation changes to the use the new AppHdr model in the SDK 9.0.0 - May 2020 MyFormat module extracted to its own jar in the distribution, with its own version from now on 8.0.7 - May 2020 Added a CsvReader constructor parsing a whole csv where the first row is used as field definition for the mappings Fixed index in CsvFieldsDef constructor to be zero-based instead of one-based 8.0.6 - February 2020 (PW-237) Added ifMatches and IfNotMatches power functions to facilitate conditional mappings 8.0.3 - September 2019 (PW-179) Added support for custom transformations in externalized mapping tables Added support for header rows skip configuration in CsvReader 8.0.2 - August 2019 Added support in the CsvFileReader for the header offset parameter, rows are now skipped directly by the Iterator 8.0.1 - July 2019 Fixed XML and MX writer to avoid creating empty elements if the source content is null Fixed bug in MX/XML writer when creating more than 100 target elements in a rule with variables Added support for foreach when converting from MT 8.0.0 - May 2019 JRE requirement increased to Java 1.8 SWIFT Standard release update 2019 (live 17 November 2019) Yearly revision of deprecation phase (see http://www.prowidesoftware.com/resources/deprecation-policy) 7.10.9 - May 2019 Enhanced selectors for CSV with support for repetition, variables and filters. Added support for FIXED-LENGTH files as source and target message format. Added API to load the mappings from a database, providing a data source or a context name for JNDI lookup Added automatic sequence creation in conversions to MT, for example /E/E1/95Q will create E and E1 boundary fields Fixed block 3 fields order when target is MT and the writer has a pre-filled block 3 Added CONCAT function in source selector to combine the result of a list of selectors in a single rule Added wrapLinesPrepend transformation to split content in to lines, with both fixed length and a prefix Added support for FOREACH in the mappings to process a list of source elements in a single rule Added support for parameterized predicates in the selector to map repetitions from source to target message Added the token LITERAL as alternative to indicate a source content is a plain literal instead of a selector Enhanced reporting in the mapping rules validation, detail message when the selectors are invalid 7.10.8 - March 2019 Updated dependencies: apache-commons-lang 3.7 -> 3.8.1 Updated dependencies: apache-text 1.3 -> 1.6 Fixed obfuscation to keep directories in jar Added transformation: abbreviate, unwrap, wrapLines, remove and replace functions based on regex Added support for custom transformation functions When using the CsvFileReader, the iteration counter variable can be used in both target and source selectors Fixed handling of row header offset in CsvFileReader Fixed CSV selector for empty column values (consecutive split characters without values) 7.10.7 - January 2019 Added a constructor with AbstractMT in the MtWriter to initialize the writer with a pre-filled message Added MessageReaderIterator to do n to 1 translations from multiple rows in CSV to single consolidated output Added constructors to create MxWriter from existing AbstractMX message and from MxType identifier 7.10.0 - April 2018 SWIFT Standard release update 2018 JRE requirement increased to Java 1.7 Dependencies: updated apache commons-lang from 2.6 to 3.7 Yearly revision of deprecation phase (see http://www.prowidesoftware.com/resources/deprecation-policy) 7.9.7 - January 2018 Changes in the distribution package: Command line tools in the bic directory changed from jar files to wrapper scripts Dependencies directory renamed to lib Removed the BUILD id timestamp from the jar files Added constructor from stream in XlsReader 7.9.4 - November 2017 JRE requirement backported to Java 1.6 7.9 - May 2017 SWIFT Standard release update 2017 (live 19 November 2017 for MT and 18 November for MX) 7.8.9 - May 2017 Yearly revision of deprecation phase (see http://www.prowidesoftware.com/resources/deprecation-policy) 7.8.6 - November 2016 JRE requirement increased to Java 1.7 (only for Integrator SDK and modules, Core still works on 1.5) 7.8.5 - October 2016 Added out-of-the-box translation from MT300 into MxFxtr014 Added transformation to perform content replacement based on map of tuples Added transformation to create fixed values Added transformations for BIC related operations (bic8, bic11, branch, country, etc...) 7.8.3 - Jul 2016 Generic XML API moved to SDK","title":"Prowide Integrator MyFormat"},{"location":"release-notes/changelog-myformat/#prowide-integrator-myformat-changelog","text":"","title":"Prowide Integrator MyFormat - CHANGELOG"},{"location":"release-notes/changelog-myformat/#928-september-2022","text":"Added transformation functions logicalTerminalAddress, logicalTerminalAddressSend and logicalTerminalAddressReceive Added transformation function sum","title":"9.2.8 - September 2022"},{"location":"release-notes/changelog-myformat/#927-august-2022","text":"(PW-1010) Added an automatic sanitization when converting into MT, to fix start of line characters and some missing components","title":"9.2.7 - August 2022"},{"location":"release-notes/changelog-myformat/#926-may-2022","text":"(PW-813) Internal enhancement to fix CVE Deprecation API review","title":"9.2.6 - May 2022"},{"location":"release-notes/changelog-myformat/#925-april-2022","text":"Minor fix in the database loader, to set the table name with the configuration name parameter Fixed mapping table validation when there are SETUP commands in the mappings Minor internal code enhancements Prowide Integrator SDK and Prowide Core updates","title":"9.2.5 - April 2022"},{"location":"release-notes/changelog-myformat/#924-january-2022","text":"Prowide Integrator SDK and Prowide Core updates","title":"9.2.4 - January 2022"},{"location":"release-notes/changelog-myformat/#923-december-2021","text":"Added com.prowidesoftware.integrator.myformat as automatic module name in the MANIFEST for JPMS support","title":"9.2.3 - December 2021"},{"location":"release-notes/changelog-myformat/#922-june-2021","text":"Added support to read and write block 5 fields with selectors such as \"b5/CHK\"","title":"9.2.2 - June 2021"},{"location":"release-notes/changelog-myformat/#921-june-2021","text":"(PW-527) Additional change in the XML and MX reader to trim indentation and trailing spaces from elements while preserving line feeds (PW-527) Changed the XML and MX reader to preserve whitespaces from elements content (PW-527) Added transformation functions wrapLinesPreserve and wrapLinesPreservePrepend","title":"9.2.1 - June 2021"},{"location":"release-notes/changelog-myformat/#920-may-2021","text":"SWIFT Standard release update 2021 (live 21 November 2021) Yearly revision of deprecation phase (see http://www.prowidesoftware.com/resources/deprecation-policy)","title":"9.2.0 - May 2021"},{"location":"release-notes/changelog-myformat/#918-april-2021","text":"(PW-502) Added MappingTableDatabaseLoader for more flexible data base access and querying when load the mappings","title":"9.1.8 - April 2021"},{"location":"release-notes/changelog-myformat/#917-march-2021","text":"(PW-480) Fixed mapping into block 2 using whole block value as input data","title":"9.1.7 - March 2021"},{"location":"release-notes/changelog-myformat/#916-february-2021","text":"Added validation of the new SETUP commands: separator, smartQuotes, smartEscapes, addFieldNames and columnNames","title":"9.1.6 - February 2021"},{"location":"release-notes/changelog-myformat/#915-january-2021","text":"Fixed CSV writer with APPEND mode Added SETUP commands to the externalized mapping into CSV: separator, smartQuotes, smartEscapes, addFieldNames and columnNames","title":"9.1.5 - January 2021"},{"location":"release-notes/changelog-myformat/#914-january-2021","text":"Fixed semantic of the MtReader to return null content if the MT selector targets a missing field component Fixed transformation \"rightPad\" Fixed transformation \"formatDecimal\" when input number contains decimal separator and no decimal digits (valid case in MT amounts) Fixed transformation \"fixed\" to avoud setting the default value if the input content is null (not found in source) Fixed transformations \"append\", \"prepend\", \"replaceIfEquals\" and \"wrap\" to avoid generating value if input is null Fixed transformations \"indexOf\", \"indexOfIgnoreCase\", \"lastIndexOf\" and \"lastIndexOfIgnoreCase\" when found substring is at index 0 Enhanced number parse exception handling in transformations using or expecting integers and decimal numbers","title":"9.1.4 - January 2021"},{"location":"release-notes/changelog-myformat/#913-december-2020","text":"License check review","title":"9.1.3 - December 2020"},{"location":"release-notes/changelog-myformat/#912-november-2020","text":"(CR-27) Added support for forced double quotes for CSVWriter (CR-27) Added support for disable smart escaping (ex: comma inside double quotes are not escaped) for CSVWriter (CR-27) Added support to generate header column with field names for CSVWriter (CR-29) Added support in the MtWriter to create internal loop (sequences without 16R and 16S boundary) present for example in MT940 (CR-28) Added support in the MtWriter to create block 1 and block 2 from whole value strings (not targeting individual fields) (CR-28) Added support in the MtReader to retrieve the whole block 1 or block 2 value with selectors \"b1\" and \"b2\" Minor fix in formatDecimal transformation when default locale has comma for decimal separator","title":"9.1.2 - November 2020"},{"location":"release-notes/changelog-myformat/#911-september-2020","text":"(PW-334) Added backward compatibility support for custom(\"MyCustomTransformer\") in the mapping transformations","title":"9.1.1 - September 2020"},{"location":"release-notes/changelog-myformat/#910-may-2020","text":"SWIFT Standard release update 2020 (live 22 November 2020) Yearly revision of deprecation phase (see http://www.prowidesoftware.com/resources/deprecation-policy)","title":"9.1.0 - May 2020"},{"location":"release-notes/changelog-myformat/#901-may-2020","text":"Internal implementation changes to the use the new AppHdr model in the SDK","title":"9.0.1 - May 2020"},{"location":"release-notes/changelog-myformat/#900-may-2020","text":"MyFormat module extracted to its own jar in the distribution, with its own version from now on","title":"9.0.0 - May 2020"},{"location":"release-notes/changelog-myformat/#807-may-2020","text":"Added a CsvReader constructor parsing a whole csv where the first row is used as field definition for the mappings Fixed index in CsvFieldsDef constructor to be zero-based instead of one-based","title":"8.0.7 - May 2020"},{"location":"release-notes/changelog-myformat/#806-february-2020","text":"(PW-237) Added ifMatches and IfNotMatches power functions to facilitate conditional mappings","title":"8.0.6 - February 2020"},{"location":"release-notes/changelog-myformat/#803-september-2019","text":"(PW-179) Added support for custom transformations in externalized mapping tables Added support for header rows skip configuration in CsvReader","title":"8.0.3 - September 2019"},{"location":"release-notes/changelog-myformat/#802-august-2019","text":"Added support in the CsvFileReader for the header offset parameter, rows are now skipped directly by the Iterator","title":"8.0.2 - August 2019"},{"location":"release-notes/changelog-myformat/#801-july-2019","text":"Fixed XML and MX writer to avoid creating empty elements if the source content is null Fixed bug in MX/XML writer when creating more than 100 target elements in a rule with variables Added support for foreach when converting from MT","title":"8.0.1 - July 2019"},{"location":"release-notes/changelog-myformat/#800-may-2019","text":"JRE requirement increased to Java 1.8 SWIFT Standard release update 2019 (live 17 November 2019) Yearly revision of deprecation phase (see http://www.prowidesoftware.com/resources/deprecation-policy)","title":"8.0.0 - May 2019"},{"location":"release-notes/changelog-myformat/#7109-may-2019","text":"Enhanced selectors for CSV with support for repetition, variables and filters. Added support for FIXED-LENGTH files as source and target message format. Added API to load the mappings from a database, providing a data source or a context name for JNDI lookup Added automatic sequence creation in conversions to MT, for example /E/E1/95Q will create E and E1 boundary fields Fixed block 3 fields order when target is MT and the writer has a pre-filled block 3 Added CONCAT function in source selector to combine the result of a list of selectors in a single rule Added wrapLinesPrepend transformation to split content in to lines, with both fixed length and a prefix Added support for FOREACH in the mappings to process a list of source elements in a single rule Added support for parameterized predicates in the selector to map repetitions from source to target message Added the token LITERAL as alternative to indicate a source content is a plain literal instead of a selector Enhanced reporting in the mapping rules validation, detail message when the selectors are invalid","title":"7.10.9 - May 2019"},{"location":"release-notes/changelog-myformat/#7108-march-2019","text":"Updated dependencies: apache-commons-lang 3.7 -> 3.8.1 Updated dependencies: apache-text 1.3 -> 1.6 Fixed obfuscation to keep directories in jar Added transformation: abbreviate, unwrap, wrapLines, remove and replace functions based on regex Added support for custom transformation functions When using the CsvFileReader, the iteration counter variable can be used in both target and source selectors Fixed handling of row header offset in CsvFileReader Fixed CSV selector for empty column values (consecutive split characters without values)","title":"7.10.8 - March 2019"},{"location":"release-notes/changelog-myformat/#7107-january-2019","text":"Added a constructor with AbstractMT in the MtWriter to initialize the writer with a pre-filled message Added MessageReaderIterator to do n to 1 translations from multiple rows in CSV to single consolidated output Added constructors to create MxWriter from existing AbstractMX message and from MxType identifier","title":"7.10.7 - January 2019"},{"location":"release-notes/changelog-myformat/#7100-april-2018","text":"SWIFT Standard release update 2018 JRE requirement increased to Java 1.7 Dependencies: updated apache commons-lang from 2.6 to 3.7 Yearly revision of deprecation phase (see http://www.prowidesoftware.com/resources/deprecation-policy)","title":"7.10.0 - April 2018"},{"location":"release-notes/changelog-myformat/#797-january-2018","text":"Changes in the distribution package: Command line tools in the bic directory changed from jar files to wrapper scripts Dependencies directory renamed to lib Removed the BUILD id timestamp from the jar files Added constructor from stream in XlsReader","title":"7.9.7 - January 2018"},{"location":"release-notes/changelog-myformat/#794-november-2017","text":"JRE requirement backported to Java 1.6","title":"7.9.4 - November 2017"},{"location":"release-notes/changelog-myformat/#79-may-2017","text":"SWIFT Standard release update 2017 (live 19 November 2017 for MT and 18 November for MX)","title":"7.9 - May 2017"},{"location":"release-notes/changelog-myformat/#789-may-2017","text":"Yearly revision of deprecation phase (see http://www.prowidesoftware.com/resources/deprecation-policy)","title":"7.8.9 - May 2017"},{"location":"release-notes/changelog-myformat/#786-november-2016","text":"JRE requirement increased to Java 1.7 (only for Integrator SDK and modules, Core still works on 1.5)","title":"7.8.6 - November 2016"},{"location":"release-notes/changelog-myformat/#785-october-2016","text":"Added out-of-the-box translation from MT300 into MxFxtr014 Added transformation to perform content replacement based on map of tuples Added transformation to create fixed values Added transformations for BIC related operations (bic8, bic11, branch, country, etc...)","title":"7.8.5 - October 2016"},{"location":"release-notes/changelog-myformat/#783-jul-2016","text":"Generic XML API moved to SDK","title":"7.8.3 - Jul 2016"},{"location":"release-notes/changelog-score/","text":"Prowide Integrator SCORE - CHANGELOG Model extension for SWIFT for corporates messages 1.2.6 - September 2022 (PW-1058) Fix SCORE 798<767> and 798<775> B2C - field 21 is optional Added the current SRU to the version number for consistent SRU based BOM and dependency with other Integrator artifacts 1.2.5 - August 2022 (PW-1015) Added schemes for submessage types 700, 701 and 774 1.2.4 - July 2022 (PW-994) Removed NONREF qualifier to the B/20 field in scheme 1.2.3 - March 2022 (PW-882) 798_760 scheme changes to have sequence B optional (mandatory presence checked by semantic rule as necessary) 1.2.2 - January 2022 Prowide Integrator SDK and Prowide Core updates 1.2.1 - December 2021 Added com.prowidesoftware.integrator.score as automatic module name in the MANIFEST for JPMS support 1.2.0 - August 2021 Comprehensive implementation of message types 1.0.0 - February 2021 Initial version including support for Guarantee/Standby LC: request for amendment, notification of amendment, response","title":"Prowide Integrator SCORE"},{"location":"release-notes/changelog-score/#prowide-integrator-score-changelog","text":"Model extension for SWIFT for corporates messages","title":"Prowide Integrator SCORE - CHANGELOG"},{"location":"release-notes/changelog-score/#126-september-2022","text":"(PW-1058) Fix SCORE 798<767> and 798<775> B2C - field 21 is optional Added the current SRU to the version number for consistent SRU based BOM and dependency with other Integrator artifacts","title":"1.2.6 - September 2022"},{"location":"release-notes/changelog-score/#125-august-2022","text":"(PW-1015) Added schemes for submessage types 700, 701 and 774","title":"1.2.5 - August 2022"},{"location":"release-notes/changelog-score/#124-july-2022","text":"(PW-994) Removed NONREF qualifier to the B/20 field in scheme","title":"1.2.4 - July 2022"},{"location":"release-notes/changelog-score/#123-march-2022","text":"(PW-882) 798_760 scheme changes to have sequence B optional (mandatory presence checked by semantic rule as necessary)","title":"1.2.3 - March 2022"},{"location":"release-notes/changelog-score/#122-january-2022","text":"Prowide Integrator SDK and Prowide Core updates","title":"1.2.2 - January 2022"},{"location":"release-notes/changelog-score/#121-december-2021","text":"Added com.prowidesoftware.integrator.score as automatic module name in the MANIFEST for JPMS support","title":"1.2.1 - December 2021"},{"location":"release-notes/changelog-score/#120-august-2021","text":"Comprehensive implementation of message types","title":"1.2.0 - August 2021"},{"location":"release-notes/changelog-score/#100-february-2021","text":"Initial version including support for Guarantee/Standby LC: request for amendment, notification of amendment, response","title":"1.0.0 - February 2021"},{"location":"release-notes/changelog-sdk/","text":"Prowide Integrator SDK - CHANGELOG 9.2.34 - September 2022 (PW-1058) Fix SCORE 798<767> and 798<775> B2C - field 21 is optional (PW-1048) Added options in the SwiftMessageFactory to create an ACK from an MX message 9.2.33 - September 2022 (GH-119) MT566: Fixed repetitions of sequence USECU/FIA that is not repetitive 9.2.32 - September 2022 Minor fix in MT internal schemes, added some missing \"rules\" reference attributes 9.2.31 - August 2022 MT schemes refactor to decommission the need for the Rhino dependency when validating MT message structure 9.2.30 - August 2022 (PW-1010) Added helper API MtSanitizer to fix MT content charset, start of line characters and certain missing components 9.2.29 - August 2022 (PW-1015) Added field validation for fields 47E, 49D and 49F (required in SCORE MT798_774) (PW-922) MxPrintout: Added support for xsys message types SchemeXmlWriter/Reader fixed and refactored 9.2.28 - August 2022 (PW-922) Added a fallback option to the MX printout writer to handle unknown message types 9.2.27 - July 2022 Added internal loops API to MTs: 110, 201, 203, 210, 410, 412, 420, 422, 450, 456, 604, 605, 801, 920, 973 Added support for Loop selectors in MtPath, example: Loop1/58A/1 9.2.26 - July 2022 (PW-977) Fixed MT scheme 203 with inner loops instead of formal sequences 9.2.25 - July 2022 (PW-969) fixes to xml converters for fields 12E, 12K and 12R (PW-873) Added a new MxPrintoutWriter to generate a humand-frindly view of MX messages in plain text (PW-873) Added the MxLabelInfo helper class to retrieve business labels for MX message elements 9.2.24 - June 2022 MtType: enhanced the enum to implement the SchemaProvider interface, and thus return XSD schemas for MTs MtType: added a method to retrieve the MtId equivalent Added PathSchemaProvider helper class to reads the schemas from a file path 9.2.23 - June 2022 (PW-894) Fixed MT scheme 203 with inner loops instead of formal sequences (PW-895) Fixed Block4Xml to properly name anonymous sequences (LoopN) 9.2.22 - May 2022 Fixed packaging 9.2.21 - May 2022 (PW-923) Updated org.apache.santuario:xmlsec dependency to 2.3.1 (only used in LAU signing) to fix CVE-2022-23437 (PW-813) Internal enhancement to fix CVE Deprecation API review 9.2.20 - May 2022 Fixed security vulnerabilities for XML to MT Block4 parser 9.2.19 - April 2022 Fixed MT LAU sign/verify when an ACK + Msg is received 9.2.18 - April 2022 Internal schema compress to reduce jar size (PW-877) Added XmlBlock4; XML to MT Block4 conversion, with an XML structure compatible with the XSD for FIN by SWIFT Fixes to Block4ToXml (PW-810) Fix un LAU signing and verifying algorithm 9.2.17 - March 2022 (PW-877) Fixed exception in Block4Xml when not using Apache xalan 9.2.16 - March 2022 (PW-871) Fixed Block4ToXml for field 46B Added @attach feature to the MtPath, specially suited to retrieve content from the original message attached to an ACK/NAK 9.2.15 - March 2022 Added implementation for version 2.0.11 and 2.0.13 of the SAA DataPDU wrapper Added support for multiple versions of the SAA DataPDU wrapper 9.2.14 - February 2022 (PW-829) In the MT text expanded printout, line feeds are now system dependant 9.2.13 - January 2022 (PW-833) Fixed mandatory field 77E in MTn98 scheme 9.2.12 - January 2022 (PW-819-820) Fixed scheme for SCORE message MT798_760 NPE prevention in SwiftMessageFactory#toggleDirection 9.2.11 - January 2022 MT530: Fixed repetition of sequence C ADDINFO Updated dependency: gson:2.8.8 -> gson:2.8.9 9.2.10 - December 2021 Added Block4Xml; a new converter from MT Block4 into the XML structure compatible with the XSD for FIN by SWIFT Added com.prowidesoftware.integrator.sdk as automatic module name in the MANIFEST for JPMS support (PW-785) Added the original sent message content in the expanded printout of service 21 messages (ACK/NAK) 9.2.9 - November 2021 Fixed MT509 scheme: letter options in B/98a 9.2.8 - October 2021 (PW-750) Fixed MT527 scheme, invalid 94L qualifiers (CR-23) Added MOR to the expanded printout of for inbound MT messages (PW-749) Updated dependency: org.apache.santuario:xmlsec -> 2.2.3 to fix vulnerability (only used in XML v2 features) Updated dependency: Apache Commons Lang 3.8.1 -> 3.12.0 Updated dependency: Apache Commons Text 1.6 -> 1.9 Updated dependency: Gson 2.8.2 -> 2.8.8 9.2.7 - October 2021 (PW-723) Fixed LT identifier (X or default) in SwiftMessageFactory#toggleDirection (PW-719) fixed 77H qualifiers in MT 300, 304, 305 and 306 9.2.6 - October 20221 Added a SchemeXmlWriter class to serialize the MT structure structure definitions into plain XML 9.2.5 - September 2021 Added support for block 5 in the MtPath selector expressions such as b5/MRF 9.2.4 - August 2021 (PW-654) Fixed bic importer parameter path 9.2.3 - August 2021 (PW-599) MT564: Minor scheme fix, 92a TAXR and WITL can be repeated in CASHMOVE (E2) 9.2.2 - July 2021 MT548: Minor scheme fix, added letter option \"C\" in field \"98C:SCTS\" in sequence \"C1a1B1\" (PW-625) XMLv2 DataPDU: mapped Block3/103 into CopyService, and Block3/111 into ServiceLevelAgreement with default to \"001\" (PW-590) Fixed MtPath evaluator when selecting an inner sequence with no unique boundary separator, such as B1 (FIA) in MT564 9.2.1 - June 2021 Changed the generic XmlParser to preserve whitespace by default (added a new method to use the previous implementation) Minor special case fix in MtPath when the source result targets the same field/qualifier as the target expression Added sameQualifier(Field) in the MtPathExpression adn asList() in MtPathResult MT537 scheme fixed fieldset definition for 95PQR ACOW CACO in D1a1B1 MT548 scheme fixed fieldset definition for 22F TRTR, SETR in C1a1B1 Minor fixes in scheme for MT575 9.2.0 - May 2021 SWIFT Standard release update 2021 (live 21 November 2021) Yearly revision of deprecation phase (see http://www.prowidesoftware.com/resources/deprecation-policy) 9.1.11 - April 2021 (PW-460) Divided the internal schemas package into packages by category to allow trimming the jar by use (PW-500) Fixed schemes for MT565, qualifier check for field 90[F,J]:OFFR in CAINST sequence 9.1.10 - March 2021 (PW-499) Fixed schemes for MT513, MT564 and MT566: invalid qualifier in field 69D 9.1.9 - March 2021 (PW-494) Fixed schemes for MT565 (sequence B can be repeated up to 1) and MT568 (sequence B is optional, not mandatory) 9.1.8 - March 2021 (PW-493) Fixed scheme for MT671, missing :22H::PRCD//PREF in Other Details sequence 9.1.7 - March 2021 Added expanded printout support for service 21 messages (ACK and NAK) Enhanced the MTInfo implementation to be lenient on the detected message type 9.1.6 - February 2021 (PW-455) Added lenient parsing of MT headers in conversion to XML v2 9.1.5 - January 2021 Added selector b2/Direction in MtPath returning Input or Output Added valueForPath in the MtPathResult to get precise values related to the queried path 9.1.4 - December 2020 Added GpiUtils to determine if the UETR field in block 3 is mandatory for an MT Added explicit file format to model when creating messages with the AbstractSwiftMessageFactory 9.1.3 - November 2020 (PW-414) Fixed DataPDU parsing of LocalOutputTime into block2 receiver date and time fields Added API in Scheme to check if an MT Scheme contains sequences or internal loops (CR-28) Enhanced MtPath to support full-block selector expressions \"b1\" and \"b2\", returning the complete block value as a single result Added targetNamespace() method to the SchemaProvider interface and to the MxType enumeration Fixed MT537 scheme: field 19A in sequence D1a1B1 Transaction Details (PW-387) In the DataPDU parser for MT messages, the Body element is autodetected expecting either a complete MT content or only the block 4 (PW-387) DataPDUWriter: Added generation of the Message/InterfaceInfo 9.1.2 - September 2020 (PW-358) Added LAU signing and verification for FileAct (XML v2 companion files detached from actual payload) (PW-343) Added canonicalization to signed XMLv2 messages (PW-357) PrintoutWriter: Added a setter to overwrite the default BICDirectory 9.1.1 - August 2020 (PW-343) Added API in the XML v2 and LAU classes to compute and verify the binary prefix in XML v2 messages (PW-344) Fixed the XML v2 parser of MT headers when message is Output (inbound) and Body contains only block 4 (PW-316) Added LAU signature creation and verification for the XML v2 message wrapper (PW-327) Added support in the XML v2 API to parse DataPDU TransmissionReport into ACK/NACK messages (PW-324) Fixed the XML v2 parser to capture gpi fields (111 and 121) from the FINUserHeader element when present (PW-324) Updated the XML v2 DataPDU wrapper model to version SAA 2.0.7 (PW-195) Added handy methods in the BICDirectory to query by institution and country Internal refactor of generated MT Scheme classes to avoid MethodTooLargeException in runtime (PW-322) Fixed the XML v2 parser for MT Output messages with DataPDU Body containing only the block 4 9.1.0 - May 2020 SWIFT Standard release update 2020 (live 22 November 2020) Yearly revision of deprecation phase (see http://www.prowidesoftware.com/resources/deprecation-policy) 9.0.1 - May 2020 (PW-301) Minor fix in SwiftMessageFactory.toggle that was not setting sender input time in outbound to inbound conversion 9.0.0 - May 2020 Prowide Integrator fatjar split into single jars for the SDK and modules, each with its own versioning from now on 8.0.9 - May 2020 Fixed scheme for 564, typo in MET2 and MET3 qualifiers 8.0.8 - April 2020 Expanded the ISO 20022 model to include all the historic message versions, not only the latest Added a specific model library including the set of restricted ISO 20022 for CBPR+ (Cross-border Payments and Reporting Plus) release 1.2 Enhanced the PrintoutWriter to support invalid message types and invalid fields NPE prevention in BICDirectory create connection 8.0.7 - March 2020 Added a specific model library including the set of restricted ISO 20022 for SIC (Swiss RTGS) v4.6 release Added support for keywords \"sender\" and \"receiver\" in MtPath expressions to retrieve header addresses regardless of the message direction 8.0.6 - February 2020 Added parser and model classes for seev.045, seev.046, seev.047, seev.048, seev.049 8.0.5 - January 2019 (PW-235) Added SafeXmlUtils to disallow XXE in all XML parsing and validation code Added abstract message() serialization method to AbstractMessage (implemented by the AbstractMT and AbstractMX subclasses) Fixed NPE in MtPath evaluation with null blocks as parameter Added support for \"child\" axis in MtPath expressions to query direct children of sequences instead of the default \"all descendants\" behaviour BusinessHeader added factory methods to create the ISO business header or the legacy SWIFT header given a few simple parameters 8.0.4 - December 2019 Prevention of NPE in expanded printout when sender or receiver BIC are null Changed default MX serialization root element \"message\" to \"RequestPayload\" when both Document and AppHdr are present Changed default MX serialization in AbstractMX#message() to include the AppHdr when present and not just the Document Added a jaxb context cache to boost performance when parsing MX messages, this can be enabled with SdkConfiguration#setCachedJaxbContext 8.0.3 - September 2019 (PW-189) Added back message model for pain.008.001.02, pain.001.001.05 and pain.002.001.05 (PW-186) Added fallback option to load IBAN property file from different classloader Added a specific model library including all SEPA messages of the EPC 2019 v1.0 release Added the SchemaProvider interface, implemented by the MxType enum, to get the default ISO schemas for each message type 8.0.2 - August 2019 Explicit UTF-8 encoding was added where necessary to ensure portability Added fallback option to load license from different classloader 8.0.1 - July 2019 Fixed BIC Directory imported (truncation error for BIC PLus files) Fixed SwiftMessageFactory#ACK that was appending the original message to the ACK twice 8.0.0 - May 2019 JRE requirement increased to Java 1.8 SWIFT Standard release update 2019 (live 17 November 2019) Yearly revision of deprecation phase (see http://www.prowidesoftware.com/resources/deprecation-policy) 7.10.9 - May 2019 Fixed classpath in bin/*.bat scripts Added support for field repetitions in MtPath expressions, such as /A/22F[3] to select the third 22F in sequence A Fixed stack overflow exception in XmlParser#parse(Stream) Fixed SwiftMessageFactory#ACK the MUR field goes to block 4 instead of block 3 7.10.8 - March 2019 Updated dependencies: apache-commons-lang 3.7 -> 3.8.1 Updated dependencies: apache-text 1.3 -> 1.6 Fixed obfuscation to keep directories in jar Added API to sign and validate LAU signatures in MT messages Added valueDate and tradeDate to the AbstractSwiftMessage model 7.10.7 - January 2019 Fixed constructor for String or MxSwiftMessage in the MX model classes (subclasses of AbstractMX) Added support for legacy pain.002.001.03 Fixed semantic rules for MT 360 and 361 Moved MtSchemeValidator from internal package to com.prowidesoftware.swift.scheme as part of the public API 7.10.6 - November 2018 (PW-120) Added an SDK configuration option to indicate if the institution is a GPI member Added tag index information to the MtPath results when the expression targets a field or a component within a field Added a builder pattern implementation to the MtPathResult Fixed MX parser for Java 8+ to enable parsing recognized MX messages with non-standard (swift or iso) xmlns Fixed writer and parser for XML v2 (block 4 only mode): removed trailing line break in last tag Fixed writer for XML v2 (whole message mode): removed empty blocks before base64 encoding 7.10.5 - October 2018 Added checkFormat in AbstractSwiftMessageFactory to validate a raw SWIFT content against an expected format Added XmlV2Configuration to customize the behaviour of the XML v2 parser and writer API Fixed DataPDUWriter creation from AbstractMX that was not propagating the MX header 7.10.3 - July 2018 Removed deprecated Hibernate XML mappings for MT schemes (Scheme.hbm.xml, SchemeElement.hbm.xml, SchemeFieldDefaultValue.hbm.xml) 7.10.2 - July 2018 JPA annotations moved from accessors to fields Fixed com.sun.xml reference in MX marshalling Added toJson and fromJson to MX classes (AbstractMX and subclasses) 7.10.0 - April 2018 SWIFT Standard release update 2018 JRE requirement increased to Java 1.7 Dependencies: updated apache commons-lang from 2.6 to 3.7 Yearly revision of deprecation phase (see http://www.prowidesoftware.com/resources/deprecation-policy) BIC directory: added support to seamlessly import BIC Plus or BIC Directory 2018 txt files from swiftrefdata.com 7.9.7u1 - February 2018 (PW-54) New API in SwiftMessageFactory to toggle the message direction 7.9.7 - January 2018 Changes in the distribution package: Command line tools in the bic directory changed from jar files to wrapper scripts Dependencies directory renamed to lib Removed the BUILD id timestamp from the jar files Updated dependency: org.apache.derby:derby:10.10.1.1 -> org.apache.derby:derby:10.12.+ Updated dependency: com.google.code.gson:gson 1.7.1 -> com.google.code.gson:gson:2.8.2 7.9.6 - December 2017 Added isEmpty API in MtPathResult XmlNode: added support for parent steps (..) in find API 7.9.5 - December 2017 PrintoutVisitor: added onBICExpansion event to customize how BIC codes are expanded with information from the catalog PrintoutVisitor: added ACCOUNT as FieldType to customize how to render account numbers Added \"ignore whitespaces and case\" to value comparator Changed checksum fields in persistence mapping from length 30 to 32 to support uncoded MD5 hashes size Added checksumBody to persistence mapping Deprecated message relation DUPLICATE in favour of DUPLICATE OF and DUPLICATED BY 7.9.4 - November 2017 JRE requirement backported to Java 1.6 BIC directory: added all fields from the FI specification to both the importer tool and the query API Fixed MANIFEST classpath for bicimporter.jar tool 7.9.3 - October 2017 Added MtPathType in MtPathResult and MtPathExpression MtPath: enhanced support in nested queries, check javadoc for MtPath#evaluate(String path, MtPathResult source) Added attributes in MtPathResult to hold the original message and path used for the query Fixed MtPath when querying for fields within other source field block and with an expression not targeting a component New helper API to trim segments in XPath New out-of-the-box XML expanded printout for MTs (XmlPrintoutVisitor) Added comprehensive support for MX system messages (xsys category) Added API in MtPath API to query content within a specific given block Fixed city heading import in BIC directory 7.9.2 - August 2017 Added API in generic XmlNode implementation: hasAttributes(), isEmpty() and removeEmptyElements() Added schemes and model for MX cbrf category Added missing updates for MX supl XPath added API to strip predicates and to collapse parent segments XmlNode more API for siblings, enhanced path() to include predicates when element is repeated Removed commons-beanutils and dom4j dependencies Updated pom.xml for Integrator 7.9.1 - June 2017 Added customizable expanded printout for MT messages, to display MT messages in human-friendly TXT and HTML 7.9 - May 2017 SWIFT Standard release update 2017 (live 19 November 2017 for MT and 18 November for MX) 7.8.9 - May 2017 Yearly revision of deprecation phase (see http://www.prowidesoftware.com/resources/deprecation-policy) 7.8.8 - March 2017 Added helper class BICDirectoryUtils to expand BIC codes New MXInfo feature to retrieve MX messages names and description in english 7.8.7 - December 2016 New generic ValueComparator to compare field and components values with special equality condition based on exceptions Internal code clean ups (removing SRU2015 stuff) 7.8.6 - November 2016 JRE requirement increased to Java 1.7 (only for Integrator SDK and modules, Core still works on 1.5) New internal MT-XML converter New internal XSD package for MT Internal code clean ups (removing deprecated SRU2014 stuff) Updated all internal XSD schemas for MX to the latest enriched version 7.8.4 - Oct 2016 Enhanced AbstractMX parse to support namespaces with single quotes Expanded BIC directory and bicimporter to include institution name, city and country as table columns Added updateFrom AbstractMX to MxSwiftMessage Fixed MxSwiftMessage mapping to store BusinessProcess enum as simple string New AbstractSwiftMessageFactory to create messages from different source formats and objects Enhanced Mx parsing to support a wider range of XMLs, reading AppHdr and Document as partial chunks and ignoring the rest Mx reader migrated from SAX to StAX for better performance Support for SAA message wrapper (DataPDU) used in XML v2 formats for both MT and MX 7.8.3 - Jul 2016 Generic XML API migrated from MyFormat to SDK Removed invalid Mx classes generated from FIN schemas 7.8.2 - Jul 2016 Fixed schemes: definition of field 12A in FIA subsequences of MTs 54x Semantic 283 bugfix (used in MTs 307,503,504,505,506,536,537,548,578,586) 2016 June Added API Scheme.getSequenceByField Added API SchemeManager schemes loading from MT message objects Added API SchemeManager to get default scheme name for MT messages 2015 November Added API to control prefix, and XML declaration when serializing Mx headers and documents Added wrapper API, with SNL wrapper as initial implementation Added MxParserIntegrator containing generic Mx parsing (common API to parse all Mx) Fixed entity escape in serialization to XML (for example: & instead of & in the generated XML) Fixed serialization of field 11R, 11S and 32R 2015 August Fields 11R and 11S component 3 split into two independent components. 2014 December MX: Fixed attribute handling in xml event writer MX: Better XML error handling Added adhoc sequence code to MT609 SwiftTagListBlock: more consistent append api, deprecated replaced methods SwiftParser: Added a lenient version to allow partial parsing of blocks 1 and blocks 2 when the total value size is invalid 2014 June Release package includes now both checkouts of core examples and integrator examples from github Examples moved out to github repository 2014 April Added Field.is(String,String) 2014 March Added missing SwiftCharset_it.properties Added exists() to BICDirectory Added IntegratorConfiguration class Optional BIC Directory query and app to import into internal database Added a BIC directory importing command line application Added model and API for BIC Directory information 2013 September SRU 2013 update","title":"Prowide Integrator SDK"},{"location":"release-notes/changelog-sdk/#prowide-integrator-sdk-changelog","text":"","title":"Prowide Integrator SDK - CHANGELOG"},{"location":"release-notes/changelog-sdk/#9234-september-2022","text":"(PW-1058) Fix SCORE 798<767> and 798<775> B2C - field 21 is optional (PW-1048) Added options in the SwiftMessageFactory to create an ACK from an MX message","title":"9.2.34 - September 2022"},{"location":"release-notes/changelog-sdk/#9233-september-2022","text":"(GH-119) MT566: Fixed repetitions of sequence USECU/FIA that is not repetitive","title":"9.2.33 - September 2022"},{"location":"release-notes/changelog-sdk/#9232-september-2022","text":"Minor fix in MT internal schemes, added some missing \"rules\" reference attributes","title":"9.2.32 - September 2022"},{"location":"release-notes/changelog-sdk/#9231-august-2022","text":"MT schemes refactor to decommission the need for the Rhino dependency when validating MT message structure","title":"9.2.31 - August 2022"},{"location":"release-notes/changelog-sdk/#9230-august-2022","text":"(PW-1010) Added helper API MtSanitizer to fix MT content charset, start of line characters and certain missing components","title":"9.2.30 - August 2022"},{"location":"release-notes/changelog-sdk/#9229-august-2022","text":"(PW-1015) Added field validation for fields 47E, 49D and 49F (required in SCORE MT798_774) (PW-922) MxPrintout: Added support for xsys message types SchemeXmlWriter/Reader fixed and refactored","title":"9.2.29 - August 2022"},{"location":"release-notes/changelog-sdk/#9228-august-2022","text":"(PW-922) Added a fallback option to the MX printout writer to handle unknown message types","title":"9.2.28 - August 2022"},{"location":"release-notes/changelog-sdk/#9227-july-2022","text":"Added internal loops API to MTs: 110, 201, 203, 210, 410, 412, 420, 422, 450, 456, 604, 605, 801, 920, 973 Added support for Loop selectors in MtPath, example: Loop1/58A/1","title":"9.2.27 - July 2022"},{"location":"release-notes/changelog-sdk/#9226-july-2022","text":"(PW-977) Fixed MT scheme 203 with inner loops instead of formal sequences","title":"9.2.26 - July 2022"},{"location":"release-notes/changelog-sdk/#9225-july-2022","text":"(PW-969) fixes to xml converters for fields 12E, 12K and 12R (PW-873) Added a new MxPrintoutWriter to generate a humand-frindly view of MX messages in plain text (PW-873) Added the MxLabelInfo helper class to retrieve business labels for MX message elements","title":"9.2.25 - July 2022"},{"location":"release-notes/changelog-sdk/#9224-june-2022","text":"MtType: enhanced the enum to implement the SchemaProvider interface, and thus return XSD schemas for MTs MtType: added a method to retrieve the MtId equivalent Added PathSchemaProvider helper class to reads the schemas from a file path","title":"9.2.24 - June 2022"},{"location":"release-notes/changelog-sdk/#9223-june-2022","text":"(PW-894) Fixed MT scheme 203 with inner loops instead of formal sequences (PW-895) Fixed Block4Xml to properly name anonymous sequences (LoopN)","title":"9.2.23 - June 2022"},{"location":"release-notes/changelog-sdk/#9222-may-2022","text":"Fixed packaging","title":"9.2.22 - May 2022"},{"location":"release-notes/changelog-sdk/#9221-may-2022","text":"(PW-923) Updated org.apache.santuario:xmlsec dependency to 2.3.1 (only used in LAU signing) to fix CVE-2022-23437 (PW-813) Internal enhancement to fix CVE Deprecation API review","title":"9.2.21 - May 2022"},{"location":"release-notes/changelog-sdk/#9220-may-2022","text":"Fixed security vulnerabilities for XML to MT Block4 parser","title":"9.2.20 - May 2022"},{"location":"release-notes/changelog-sdk/#9219-april-2022","text":"Fixed MT LAU sign/verify when an ACK + Msg is received","title":"9.2.19 - April 2022"},{"location":"release-notes/changelog-sdk/#9218-april-2022","text":"Internal schema compress to reduce jar size (PW-877) Added XmlBlock4; XML to MT Block4 conversion, with an XML structure compatible with the XSD for FIN by SWIFT Fixes to Block4ToXml (PW-810) Fix un LAU signing and verifying algorithm","title":"9.2.18 - April 2022"},{"location":"release-notes/changelog-sdk/#9217-march-2022","text":"(PW-877) Fixed exception in Block4Xml when not using Apache xalan","title":"9.2.17 - March 2022"},{"location":"release-notes/changelog-sdk/#9216-march-2022","text":"(PW-871) Fixed Block4ToXml for field 46B Added @attach feature to the MtPath, specially suited to retrieve content from the original message attached to an ACK/NAK","title":"9.2.16 - March 2022"},{"location":"release-notes/changelog-sdk/#9215-march-2022","text":"Added implementation for version 2.0.11 and 2.0.13 of the SAA DataPDU wrapper Added support for multiple versions of the SAA DataPDU wrapper","title":"9.2.15 - March 2022"},{"location":"release-notes/changelog-sdk/#9214-february-2022","text":"(PW-829) In the MT text expanded printout, line feeds are now system dependant","title":"9.2.14 - February 2022"},{"location":"release-notes/changelog-sdk/#9213-january-2022","text":"(PW-833) Fixed mandatory field 77E in MTn98 scheme","title":"9.2.13 - January 2022"},{"location":"release-notes/changelog-sdk/#9212-january-2022","text":"(PW-819-820) Fixed scheme for SCORE message MT798_760 NPE prevention in SwiftMessageFactory#toggleDirection","title":"9.2.12 - January 2022"},{"location":"release-notes/changelog-sdk/#9211-january-2022","text":"MT530: Fixed repetition of sequence C ADDINFO Updated dependency: gson:2.8.8 -> gson:2.8.9","title":"9.2.11 - January 2022"},{"location":"release-notes/changelog-sdk/#9210-december-2021","text":"Added Block4Xml; a new converter from MT Block4 into the XML structure compatible with the XSD for FIN by SWIFT Added com.prowidesoftware.integrator.sdk as automatic module name in the MANIFEST for JPMS support (PW-785) Added the original sent message content in the expanded printout of service 21 messages (ACK/NAK)","title":"9.2.10 - December 2021"},{"location":"release-notes/changelog-sdk/#929-november-2021","text":"Fixed MT509 scheme: letter options in B/98a","title":"9.2.9 - November 2021"},{"location":"release-notes/changelog-sdk/#928-october-2021","text":"(PW-750) Fixed MT527 scheme, invalid 94L qualifiers (CR-23) Added MOR to the expanded printout of for inbound MT messages (PW-749) Updated dependency: org.apache.santuario:xmlsec -> 2.2.3 to fix vulnerability (only used in XML v2 features) Updated dependency: Apache Commons Lang 3.8.1 -> 3.12.0 Updated dependency: Apache Commons Text 1.6 -> 1.9 Updated dependency: Gson 2.8.2 -> 2.8.8","title":"9.2.8 - October 2021"},{"location":"release-notes/changelog-sdk/#927-october-2021","text":"(PW-723) Fixed LT identifier (X or default) in SwiftMessageFactory#toggleDirection (PW-719) fixed 77H qualifiers in MT 300, 304, 305 and 306","title":"9.2.7 - October 2021"},{"location":"release-notes/changelog-sdk/#926-october-20221","text":"Added a SchemeXmlWriter class to serialize the MT structure structure definitions into plain XML","title":"9.2.6 - October 20221"},{"location":"release-notes/changelog-sdk/#925-september-2021","text":"Added support for block 5 in the MtPath selector expressions such as b5/MRF","title":"9.2.5 - September 2021"},{"location":"release-notes/changelog-sdk/#924-august-2021","text":"(PW-654) Fixed bic importer parameter path","title":"9.2.4 - August 2021"},{"location":"release-notes/changelog-sdk/#923-august-2021","text":"(PW-599) MT564: Minor scheme fix, 92a TAXR and WITL can be repeated in CASHMOVE (E2)","title":"9.2.3 - August 2021"},{"location":"release-notes/changelog-sdk/#922-july-2021","text":"MT548: Minor scheme fix, added letter option \"C\" in field \"98C:SCTS\" in sequence \"C1a1B1\" (PW-625) XMLv2 DataPDU: mapped Block3/103 into CopyService, and Block3/111 into ServiceLevelAgreement with default to \"001\" (PW-590) Fixed MtPath evaluator when selecting an inner sequence with no unique boundary separator, such as B1 (FIA) in MT564","title":"9.2.2 - July 2021"},{"location":"release-notes/changelog-sdk/#921-june-2021","text":"Changed the generic XmlParser to preserve whitespace by default (added a new method to use the previous implementation) Minor special case fix in MtPath when the source result targets the same field/qualifier as the target expression Added sameQualifier(Field) in the MtPathExpression adn asList() in MtPathResult MT537 scheme fixed fieldset definition for 95PQR ACOW CACO in D1a1B1 MT548 scheme fixed fieldset definition for 22F TRTR, SETR in C1a1B1 Minor fixes in scheme for MT575","title":"9.2.1 - June 2021"},{"location":"release-notes/changelog-sdk/#920-may-2021","text":"SWIFT Standard release update 2021 (live 21 November 2021) Yearly revision of deprecation phase (see http://www.prowidesoftware.com/resources/deprecation-policy)","title":"9.2.0 - May 2021"},{"location":"release-notes/changelog-sdk/#9111-april-2021","text":"(PW-460) Divided the internal schemas package into packages by category to allow trimming the jar by use (PW-500) Fixed schemes for MT565, qualifier check for field 90[F,J]:OFFR in CAINST sequence","title":"9.1.11 - April 2021"},{"location":"release-notes/changelog-sdk/#9110-march-2021","text":"(PW-499) Fixed schemes for MT513, MT564 and MT566: invalid qualifier in field 69D","title":"9.1.10 - March 2021"},{"location":"release-notes/changelog-sdk/#919-march-2021","text":"(PW-494) Fixed schemes for MT565 (sequence B can be repeated up to 1) and MT568 (sequence B is optional, not mandatory)","title":"9.1.9 - March 2021"},{"location":"release-notes/changelog-sdk/#918-march-2021","text":"(PW-493) Fixed scheme for MT671, missing :22H::PRCD//PREF in Other Details sequence","title":"9.1.8 - March 2021"},{"location":"release-notes/changelog-sdk/#917-march-2021","text":"Added expanded printout support for service 21 messages (ACK and NAK) Enhanced the MTInfo implementation to be lenient on the detected message type","title":"9.1.7 - March 2021"},{"location":"release-notes/changelog-sdk/#916-february-2021","text":"(PW-455) Added lenient parsing of MT headers in conversion to XML v2","title":"9.1.6 - February 2021"},{"location":"release-notes/changelog-sdk/#915-january-2021","text":"Added selector b2/Direction in MtPath returning Input or Output Added valueForPath in the MtPathResult to get precise values related to the queried path","title":"9.1.5 - January 2021"},{"location":"release-notes/changelog-sdk/#914-december-2020","text":"Added GpiUtils to determine if the UETR field in block 3 is mandatory for an MT Added explicit file format to model when creating messages with the AbstractSwiftMessageFactory","title":"9.1.4 - December 2020"},{"location":"release-notes/changelog-sdk/#913-november-2020","text":"(PW-414) Fixed DataPDU parsing of LocalOutputTime into block2 receiver date and time fields Added API in Scheme to check if an MT Scheme contains sequences or internal loops (CR-28) Enhanced MtPath to support full-block selector expressions \"b1\" and \"b2\", returning the complete block value as a single result Added targetNamespace() method to the SchemaProvider interface and to the MxType enumeration Fixed MT537 scheme: field 19A in sequence D1a1B1 Transaction Details (PW-387) In the DataPDU parser for MT messages, the Body element is autodetected expecting either a complete MT content or only the block 4 (PW-387) DataPDUWriter: Added generation of the Message/InterfaceInfo","title":"9.1.3 - November 2020"},{"location":"release-notes/changelog-sdk/#912-september-2020","text":"(PW-358) Added LAU signing and verification for FileAct (XML v2 companion files detached from actual payload) (PW-343) Added canonicalization to signed XMLv2 messages (PW-357) PrintoutWriter: Added a setter to overwrite the default BICDirectory","title":"9.1.2 - September 2020"},{"location":"release-notes/changelog-sdk/#911-august-2020","text":"(PW-343) Added API in the XML v2 and LAU classes to compute and verify the binary prefix in XML v2 messages (PW-344) Fixed the XML v2 parser of MT headers when message is Output (inbound) and Body contains only block 4 (PW-316) Added LAU signature creation and verification for the XML v2 message wrapper (PW-327) Added support in the XML v2 API to parse DataPDU TransmissionReport into ACK/NACK messages (PW-324) Fixed the XML v2 parser to capture gpi fields (111 and 121) from the FINUserHeader element when present (PW-324) Updated the XML v2 DataPDU wrapper model to version SAA 2.0.7 (PW-195) Added handy methods in the BICDirectory to query by institution and country Internal refactor of generated MT Scheme classes to avoid MethodTooLargeException in runtime (PW-322) Fixed the XML v2 parser for MT Output messages with DataPDU Body containing only the block 4","title":"9.1.1 - August 2020"},{"location":"release-notes/changelog-sdk/#910-may-2020","text":"SWIFT Standard release update 2020 (live 22 November 2020) Yearly revision of deprecation phase (see http://www.prowidesoftware.com/resources/deprecation-policy)","title":"9.1.0 - May 2020"},{"location":"release-notes/changelog-sdk/#901-may-2020","text":"(PW-301) Minor fix in SwiftMessageFactory.toggle that was not setting sender input time in outbound to inbound conversion","title":"9.0.1 - May 2020"},{"location":"release-notes/changelog-sdk/#900-may-2020","text":"Prowide Integrator fatjar split into single jars for the SDK and modules, each with its own versioning from now on","title":"9.0.0 - May 2020"},{"location":"release-notes/changelog-sdk/#809-may-2020","text":"Fixed scheme for 564, typo in MET2 and MET3 qualifiers","title":"8.0.9 - May 2020"},{"location":"release-notes/changelog-sdk/#808-april-2020","text":"Expanded the ISO 20022 model to include all the historic message versions, not only the latest Added a specific model library including the set of restricted ISO 20022 for CBPR+ (Cross-border Payments and Reporting Plus) release 1.2 Enhanced the PrintoutWriter to support invalid message types and invalid fields NPE prevention in BICDirectory create connection","title":"8.0.8 - April 2020"},{"location":"release-notes/changelog-sdk/#807-march-2020","text":"Added a specific model library including the set of restricted ISO 20022 for SIC (Swiss RTGS) v4.6 release Added support for keywords \"sender\" and \"receiver\" in MtPath expressions to retrieve header addresses regardless of the message direction","title":"8.0.7 - March 2020"},{"location":"release-notes/changelog-sdk/#806-february-2020","text":"Added parser and model classes for seev.045, seev.046, seev.047, seev.048, seev.049","title":"8.0.6 - February 2020"},{"location":"release-notes/changelog-sdk/#805-january-2019","text":"(PW-235) Added SafeXmlUtils to disallow XXE in all XML parsing and validation code Added abstract message() serialization method to AbstractMessage (implemented by the AbstractMT and AbstractMX subclasses) Fixed NPE in MtPath evaluation with null blocks as parameter Added support for \"child\" axis in MtPath expressions to query direct children of sequences instead of the default \"all descendants\" behaviour BusinessHeader added factory methods to create the ISO business header or the legacy SWIFT header given a few simple parameters","title":"8.0.5 - January 2019"},{"location":"release-notes/changelog-sdk/#804-december-2019","text":"Prevention of NPE in expanded printout when sender or receiver BIC are null Changed default MX serialization root element \"message\" to \"RequestPayload\" when both Document and AppHdr are present Changed default MX serialization in AbstractMX#message() to include the AppHdr when present and not just the Document Added a jaxb context cache to boost performance when parsing MX messages, this can be enabled with SdkConfiguration#setCachedJaxbContext","title":"8.0.4 - December 2019"},{"location":"release-notes/changelog-sdk/#803-september-2019","text":"(PW-189) Added back message model for pain.008.001.02, pain.001.001.05 and pain.002.001.05 (PW-186) Added fallback option to load IBAN property file from different classloader Added a specific model library including all SEPA messages of the EPC 2019 v1.0 release Added the SchemaProvider interface, implemented by the MxType enum, to get the default ISO schemas for each message type","title":"8.0.3 - September 2019"},{"location":"release-notes/changelog-sdk/#802-august-2019","text":"Explicit UTF-8 encoding was added where necessary to ensure portability Added fallback option to load license from different classloader","title":"8.0.2 - August 2019"},{"location":"release-notes/changelog-sdk/#801-july-2019","text":"Fixed BIC Directory imported (truncation error for BIC PLus files) Fixed SwiftMessageFactory#ACK that was appending the original message to the ACK twice","title":"8.0.1 - July 2019"},{"location":"release-notes/changelog-sdk/#800-may-2019","text":"JRE requirement increased to Java 1.8 SWIFT Standard release update 2019 (live 17 November 2019) Yearly revision of deprecation phase (see http://www.prowidesoftware.com/resources/deprecation-policy)","title":"8.0.0 - May 2019"},{"location":"release-notes/changelog-sdk/#7109-may-2019","text":"Fixed classpath in bin/*.bat scripts Added support for field repetitions in MtPath expressions, such as /A/22F[3] to select the third 22F in sequence A Fixed stack overflow exception in XmlParser#parse(Stream) Fixed SwiftMessageFactory#ACK the MUR field goes to block 4 instead of block 3","title":"7.10.9 - May 2019"},{"location":"release-notes/changelog-sdk/#7108-march-2019","text":"Updated dependencies: apache-commons-lang 3.7 -> 3.8.1 Updated dependencies: apache-text 1.3 -> 1.6 Fixed obfuscation to keep directories in jar Added API to sign and validate LAU signatures in MT messages Added valueDate and tradeDate to the AbstractSwiftMessage model","title":"7.10.8 - March 2019"},{"location":"release-notes/changelog-sdk/#7107-january-2019","text":"Fixed constructor for String or MxSwiftMessage in the MX model classes (subclasses of AbstractMX) Added support for legacy pain.002.001.03 Fixed semantic rules for MT 360 and 361 Moved MtSchemeValidator from internal package to com.prowidesoftware.swift.scheme as part of the public API","title":"7.10.7 - January 2019"},{"location":"release-notes/changelog-sdk/#7106-november-2018","text":"(PW-120) Added an SDK configuration option to indicate if the institution is a GPI member Added tag index information to the MtPath results when the expression targets a field or a component within a field Added a builder pattern implementation to the MtPathResult Fixed MX parser for Java 8+ to enable parsing recognized MX messages with non-standard (swift or iso) xmlns Fixed writer and parser for XML v2 (block 4 only mode): removed trailing line break in last tag Fixed writer for XML v2 (whole message mode): removed empty blocks before base64 encoding","title":"7.10.6 - November 2018"},{"location":"release-notes/changelog-sdk/#7105-october-2018","text":"Added checkFormat in AbstractSwiftMessageFactory to validate a raw SWIFT content against an expected format Added XmlV2Configuration to customize the behaviour of the XML v2 parser and writer API Fixed DataPDUWriter creation from AbstractMX that was not propagating the MX header","title":"7.10.5 - October 2018"},{"location":"release-notes/changelog-sdk/#7103-july-2018","text":"Removed deprecated Hibernate XML mappings for MT schemes (Scheme.hbm.xml, SchemeElement.hbm.xml, SchemeFieldDefaultValue.hbm.xml)","title":"7.10.3 - July 2018"},{"location":"release-notes/changelog-sdk/#7102-july-2018","text":"JPA annotations moved from accessors to fields Fixed com.sun.xml reference in MX marshalling Added toJson and fromJson to MX classes (AbstractMX and subclasses)","title":"7.10.2 - July 2018"},{"location":"release-notes/changelog-sdk/#7100-april-2018","text":"SWIFT Standard release update 2018 JRE requirement increased to Java 1.7 Dependencies: updated apache commons-lang from 2.6 to 3.7 Yearly revision of deprecation phase (see http://www.prowidesoftware.com/resources/deprecation-policy) BIC directory: added support to seamlessly import BIC Plus or BIC Directory 2018 txt files from swiftrefdata.com","title":"7.10.0 - April 2018"},{"location":"release-notes/changelog-sdk/#797u1-february-2018","text":"(PW-54) New API in SwiftMessageFactory to toggle the message direction","title":"7.9.7u1 - February 2018"},{"location":"release-notes/changelog-sdk/#797-january-2018","text":"Changes in the distribution package: Command line tools in the bic directory changed from jar files to wrapper scripts Dependencies directory renamed to lib Removed the BUILD id timestamp from the jar files Updated dependency: org.apache.derby:derby:10.10.1.1 -> org.apache.derby:derby:10.12.+ Updated dependency: com.google.code.gson:gson 1.7.1 -> com.google.code.gson:gson:2.8.2","title":"7.9.7 - January 2018"},{"location":"release-notes/changelog-sdk/#796-december-2017","text":"Added isEmpty API in MtPathResult XmlNode: added support for parent steps (..) in find API","title":"7.9.6 - December 2017"},{"location":"release-notes/changelog-sdk/#795-december-2017","text":"PrintoutVisitor: added onBICExpansion event to customize how BIC codes are expanded with information from the catalog PrintoutVisitor: added ACCOUNT as FieldType to customize how to render account numbers Added \"ignore whitespaces and case\" to value comparator Changed checksum fields in persistence mapping from length 30 to 32 to support uncoded MD5 hashes size Added checksumBody to persistence mapping Deprecated message relation DUPLICATE in favour of DUPLICATE OF and DUPLICATED BY","title":"7.9.5 - December 2017"},{"location":"release-notes/changelog-sdk/#794-november-2017","text":"JRE requirement backported to Java 1.6 BIC directory: added all fields from the FI specification to both the importer tool and the query API Fixed MANIFEST classpath for bicimporter.jar tool","title":"7.9.4 - November 2017"},{"location":"release-notes/changelog-sdk/#793-october-2017","text":"Added MtPathType in MtPathResult and MtPathExpression MtPath: enhanced support in nested queries, check javadoc for MtPath#evaluate(String path, MtPathResult source) Added attributes in MtPathResult to hold the original message and path used for the query Fixed MtPath when querying for fields within other source field block and with an expression not targeting a component New helper API to trim segments in XPath New out-of-the-box XML expanded printout for MTs (XmlPrintoutVisitor) Added comprehensive support for MX system messages (xsys category) Added API in MtPath API to query content within a specific given block Fixed city heading import in BIC directory","title":"7.9.3 - October 2017"},{"location":"release-notes/changelog-sdk/#792-august-2017","text":"Added API in generic XmlNode implementation: hasAttributes(), isEmpty() and removeEmptyElements() Added schemes and model for MX cbrf category Added missing updates for MX supl XPath added API to strip predicates and to collapse parent segments XmlNode more API for siblings, enhanced path() to include predicates when element is repeated Removed commons-beanutils and dom4j dependencies Updated pom.xml for Integrator","title":"7.9.2 - August 2017"},{"location":"release-notes/changelog-sdk/#791-june-2017","text":"Added customizable expanded printout for MT messages, to display MT messages in human-friendly TXT and HTML","title":"7.9.1 - June 2017"},{"location":"release-notes/changelog-sdk/#79-may-2017","text":"SWIFT Standard release update 2017 (live 19 November 2017 for MT and 18 November for MX)","title":"7.9 - May 2017"},{"location":"release-notes/changelog-sdk/#789-may-2017","text":"Yearly revision of deprecation phase (see http://www.prowidesoftware.com/resources/deprecation-policy)","title":"7.8.9 - May 2017"},{"location":"release-notes/changelog-sdk/#788-march-2017","text":"Added helper class BICDirectoryUtils to expand BIC codes New MXInfo feature to retrieve MX messages names and description in english","title":"7.8.8 - March 2017"},{"location":"release-notes/changelog-sdk/#787-december-2016","text":"New generic ValueComparator to compare field and components values with special equality condition based on exceptions Internal code clean ups (removing SRU2015 stuff)","title":"7.8.7 - December 2016"},{"location":"release-notes/changelog-sdk/#786-november-2016","text":"JRE requirement increased to Java 1.7 (only for Integrator SDK and modules, Core still works on 1.5) New internal MT-XML converter New internal XSD package for MT Internal code clean ups (removing deprecated SRU2014 stuff) Updated all internal XSD schemas for MX to the latest enriched version","title":"7.8.6 - November 2016"},{"location":"release-notes/changelog-sdk/#784-oct-2016","text":"Enhanced AbstractMX parse to support namespaces with single quotes Expanded BIC directory and bicimporter to include institution name, city and country as table columns Added updateFrom AbstractMX to MxSwiftMessage Fixed MxSwiftMessage mapping to store BusinessProcess enum as simple string New AbstractSwiftMessageFactory to create messages from different source formats and objects Enhanced Mx parsing to support a wider range of XMLs, reading AppHdr and Document as partial chunks and ignoring the rest Mx reader migrated from SAX to StAX for better performance Support for SAA message wrapper (DataPDU) used in XML v2 formats for both MT and MX","title":"7.8.4 - Oct 2016"},{"location":"release-notes/changelog-sdk/#783-jul-2016","text":"Generic XML API migrated from MyFormat to SDK Removed invalid Mx classes generated from FIN schemas","title":"7.8.3 - Jul 2016"},{"location":"release-notes/changelog-sdk/#782-jul-2016","text":"Fixed schemes: definition of field 12A in FIA subsequences of MTs 54x Semantic 283 bugfix (used in MTs 307,503,504,505,506,536,537,548,578,586)","title":"7.8.2 - Jul 2016"},{"location":"release-notes/changelog-sdk/#2016-june","text":"Added API Scheme.getSequenceByField Added API SchemeManager schemes loading from MT message objects Added API SchemeManager to get default scheme name for MT messages","title":"2016 June"},{"location":"release-notes/changelog-sdk/#2015-november","text":"Added API to control prefix, and XML declaration when serializing Mx headers and documents Added wrapper API, with SNL wrapper as initial implementation Added MxParserIntegrator containing generic Mx parsing (common API to parse all Mx) Fixed entity escape in serialization to XML (for example: & instead of & in the generated XML) Fixed serialization of field 11R, 11S and 32R","title":"2015 November"},{"location":"release-notes/changelog-sdk/#2015-august","text":"Fields 11R and 11S component 3 split into two independent components.","title":"2015 August"},{"location":"release-notes/changelog-sdk/#2014-december","text":"MX: Fixed attribute handling in xml event writer MX: Better XML error handling Added adhoc sequence code to MT609 SwiftTagListBlock: more consistent append api, deprecated replaced methods SwiftParser: Added a lenient version to allow partial parsing of blocks 1 and blocks 2 when the total value size is invalid","title":"2014 December"},{"location":"release-notes/changelog-sdk/#2014-june","text":"Release package includes now both checkouts of core examples and integrator examples from github Examples moved out to github repository","title":"2014 June"},{"location":"release-notes/changelog-sdk/#2014-april","text":"Added Field.is(String,String)","title":"2014 April"},{"location":"release-notes/changelog-sdk/#2014-march","text":"Added missing SwiftCharset_it.properties Added exists() to BICDirectory Added IntegratorConfiguration class Optional BIC Directory query and app to import into internal database Added a BIC directory importing command line application Added model and API for BIC Directory information","title":"2014 March"},{"location":"release-notes/changelog-sdk/#2013-september","text":"SRU 2013 update","title":"2013 September"},{"location":"release-notes/changelog-sepa/","text":"Prowide Integrator SEPA - CHANGELOG Model extension for SEPA 2019v1.0u6 - September 2022 Added the current SRU to the version number for consistent SRU based BOM and dependency with other Integrator artifacts 2019v1.0u5 - April 2022 Internal schema compress to reduce jar size 2019v1.0u4 - January 2022 Prowide Integrator SDK and Prowide Core updates 2019v1.0u3 - December 2021 Added com.prowidesoftware.integrator.sepa as automatic module name in the MANIFEST for JPMS support 2019v1.0u2 - October 2020 Removed the CopyableTo implementation from the generated model Added a method to return the MxId and the targetNamespace in the SepaMessageType enumeration 2019v1.0u1 - June 2020 Minor change to removed some unused classes from the SEPA generated dictionary model 2019v1.0 First implementation for the Nov 2019 release","title":"Prowide Integrator SEPA"},{"location":"release-notes/changelog-sepa/#prowide-integrator-sepa-changelog","text":"Model extension for SEPA","title":"Prowide Integrator SEPA - CHANGELOG"},{"location":"release-notes/changelog-sepa/#2019v10u6-september-2022","text":"Added the current SRU to the version number for consistent SRU based BOM and dependency with other Integrator artifacts","title":"2019v1.0u6 - September 2022"},{"location":"release-notes/changelog-sepa/#2019v10u5-april-2022","text":"Internal schema compress to reduce jar size","title":"2019v1.0u5 - April 2022"},{"location":"release-notes/changelog-sepa/#2019v10u4-january-2022","text":"Prowide Integrator SDK and Prowide Core updates","title":"2019v1.0u4 - January 2022"},{"location":"release-notes/changelog-sepa/#2019v10u3-december-2021","text":"Added com.prowidesoftware.integrator.sepa as automatic module name in the MANIFEST for JPMS support","title":"2019v1.0u3 - December 2021"},{"location":"release-notes/changelog-sepa/#2019v10u2-october-2020","text":"Removed the CopyableTo implementation from the generated model Added a method to return the MxId and the targetNamespace in the SepaMessageType enumeration","title":"2019v1.0u2 - October 2020"},{"location":"release-notes/changelog-sepa/#2019v10u1-june-2020","text":"Minor change to removed some unused classes from the SEPA generated dictionary model","title":"2019v1.0u1 - June 2020"},{"location":"release-notes/changelog-sepa/#2019v10","text":"First implementation for the Nov 2019 release","title":"2019v1.0"},{"location":"release-notes/changelog-sic/","text":"Prowide Integrator SIC - CHANGELOG Model extension for SIC (Swiss RGTS) 4.6u6 - September 2022 Added the current SRU to the version number for consistent SRU based BOM and dependency with other Integrator artifacts 4.6u5 - April 2022 Internal schema compress to reduce jar size 4.6u4 - January 2022 Prowide Integrator SDK and Prowide Core updates 4.6u3 - December 2021 Added com.prowidesoftware.integrator.sic as automatic module name in the MANIFEST for JPMS support 4.6u2 - October 2020 Removed the CopyableTo implementation from the generated model Added a method to return the MxId and the targetNamespace in the SicMessageType enumeration 4.6u1 - June 2020 Fixed generated model for the Mx classes to use the restricted SIC elements 4.6 First implementation for the Nov 2019 release","title":"Prowide Integrator SIC"},{"location":"release-notes/changelog-sic/#prowide-integrator-sic-changelog","text":"Model extension for SIC (Swiss RGTS)","title":"Prowide Integrator SIC - CHANGELOG"},{"location":"release-notes/changelog-sic/#46u6-september-2022","text":"Added the current SRU to the version number for consistent SRU based BOM and dependency with other Integrator artifacts","title":"4.6u6 - September 2022"},{"location":"release-notes/changelog-sic/#46u5-april-2022","text":"Internal schema compress to reduce jar size","title":"4.6u5 - April 2022"},{"location":"release-notes/changelog-sic/#46u4-january-2022","text":"Prowide Integrator SDK and Prowide Core updates","title":"4.6u4 - January 2022"},{"location":"release-notes/changelog-sic/#46u3-december-2021","text":"Added com.prowidesoftware.integrator.sic as automatic module name in the MANIFEST for JPMS support","title":"4.6u3 - December 2021"},{"location":"release-notes/changelog-sic/#46u2-october-2020","text":"Removed the CopyableTo implementation from the generated model Added a method to return the MxId and the targetNamespace in the SicMessageType enumeration","title":"4.6u2 - October 2020"},{"location":"release-notes/changelog-sic/#46u1-june-2020","text":"Fixed generated model for the Mx classes to use the restricted SIC elements","title":"4.6u1 - June 2020"},{"location":"release-notes/changelog-sic/#46","text":"First implementation for the Nov 2019 release","title":"4.6"},{"location":"release-notes/changelog-translations/","text":"Prowide Integrator Translations - CHANGELOG SNAPSHOT 9.2.46 * (PW-1061) Revamp of the translation factory in order to enhance defaults and disambiguation * Added enum classes MtToMxTranslation and MxToMtTranslation will the supported translations 9.2.45 - September 2022 (PW-1043) CBPR+: Minor enhancements in the 192/292 to camt.056 translations (PW-1006) Changed the translation factory, to fall-back into 29 for MT target when both 19 and 29* are feasible Added generic ISO: MT103 to pacs.002.001.10 (based on CBPR+ translation) Added generic ISO: MT196 to camt.029.001.09 (based on CBPR+ translation) Added generic ISO: MT200 to pacs.009.001.08 (based on CBPR+ translation) Added generic ISO: MT202 to pacs.002.001.10 (based on CBPR+ translation) Added generic ISO: MT202 to pacs.004.001.09 (based on CBPR+ translation) Added generic ISO: MT202COV to pacs.002.001.10 (based on CBPR+ translation) Added generic ISO: MT204 to pacs.010.001.03 (based on CBPR+ translation) Added generic ISO: MT205 to pacs.002.001.10 (based on CBPR+ translation) Added generic ISO: MT205 to pacs.004.001.09 (based on CBPR+ translation) Added generic ISO: MT205 to pacs.009.001.08 (based on CBPR+ translation) Added generic ISO: MT205COV to pacs.002.001.10 (based on CBPR+ translation) Added generic ISO: MT205COV to pacs.009.001.08 (based on CBPR+ translation) Added generic ISO: MT296 to camt.029.001.09 (based on CBPR+ translation) Added generic ISO: camt.029.001.09 to MT196 (based on CBPR+ translation) Added generic ISO: camt.029.001.09 to MT296 (based on CBPR+ translation) Added generic ISO: camt.056.001.08 to MT292 (based on CBPR+ translation) Added generic ISO: camt.057.001.06 to MT210 (based on CBPR+ translation) Added generic ISO: camt.060.001.05 to MT920 (based on CBPR+ translation) Added generic ISO: pacs.002.001.10 to MT199 (based on CBPR+ translation) Added generic ISO: pacs.002.001.10 to MT299 (based on CBPR+ translation) Added generic ISO: pacs.004.001.09 to MT202 (based on CBPR+ translation) Added generic ISO: pacs.004.001.09 to MT205 (based on CBPR+ translation) Added generic ISO: pacs.009.001.08 to MT200 (based on CBPR+ translation) Added generic ISO: pacs.009.001.08 to MT205 (based on CBPR+ translation) Added generic ISO: pacs.010.001.03 to MT204 (based on CBPR+ translation) Removed unnecesary unescape in internal extractPattern function 9.2.44 - September 2022 (PW-1006) MX to MT: Added a translation coverage report to see what source elements have been read during the translation semt.020.002.01 to MT578 mapping fix for REDE/RECE => REAG semantic check compiance in the generated MT 9.2.43 - September 2022 (PW-1031) Added translation MT548 to sese.024.001.10 9.2.42 - August 2022 (PW-1012) sese.027.001.05 to MT548 mapping fixes 9.2.41 - July 2022 (PW-955) pain.001 to MT101: added truncation to the text after /RFB in field 70 9.2.40 - July 2022 Added internal loops API to MTs: 110, 201, 203, 210, 410, 412, 420, 422, 450, 456, 604, 605, 801, 920, 973 9.2.39 - July 2022 (PW-958) Enhanced the truncatino report to differentiate between truncation regular fields and reference fields 9.2.38 - June 2022 (PW-948) MX -> MT202, MT204, MT205: enhanced mapping of field 58D (PW-943) Added translation: pacs.002.001.10 positive -> MT199/MT299 (PW-932) Added translation: pacs.008.001.08 (ISO and CBPR+) -> MT103.REMIT (PW-932) Added a translation configuration parameter to disable the generation of the PDE flag 9.2.37 - June 2022 (PW-949) MX to MT: enhanced mapping of name & address fields, with truncation with evidence and having the country, when present, always at the last line (PW-948) pacs.009.01.10 -> MT202: enhanced mapping of field 58D setr.004.001.04 -> MT502: mapped the Holdings Redemption Rate into 36B::ORDR/UNIT to be compliant with semantic 258 check MT102 -> pacs.008.001.10: fixed mapping to be compliant with MX cross element checks Implementation enhancements 9.2.36 - May 2022 (PW-932) Added translation: camt.056.001.08 -> MT192 (PW-924) Added translation: camt.052.001.09 <-> MT942 (PW-924) Added translation: camt.053.001.09 <-> MT940 (PW-924) Added translation: camt.053.001.09 <-> MT950 (PW-924) Added translation: camt.054.001.09 <-> MT910 (PW-832) Added translation sese.023.001.09 -> MT540 MX to MT: Added truncation with evidence in party identificacion name fields 9.2.35 - May 2022 (PW-918) Added translation MT192/MT292 -> camt.056.001.08 (PW-908) Added translation: MT102 -> pacs.008.001.10 (PW-813) Internal enhancement to fix CVE Added getTruncatedContent() to the Translator interface Deprecation API review 9.2.34 - May 2022 (PW-915) Added translation: pacs.009.001.10 <-> MT202 (PW-915) Added translation: pacs.008.001.10 <-> MT103 (PW-908) Added translation: pacs.008.001.10 -> MT102 Mx to MT: Added a post process to sanitize with default values missing components in party fields options D, K and H 9.2.33 - May 2022 (PW-905) MX pain.001 to MT101: Added default values for charges and creditor and removed related preconditions 9.2.32 - May 2022 (PW-899) sese.027.001.05 -> MT548 added the mapping of TxDtls into SETTRAN Added CBPR+ translation: MT950 <-> camt.053.001.08 Added CBPR+ translation: MT941 <-> camt.052.001.08 Added CBPR+ translation: camt.060.001.05 -> MT920 Added CBPR+ translation: pacs.009.001.08 -> MT200 Added CBPR+ translation: MT941 <-> camt.052.001.08 9.2.31 - April 2022 Added CBPR+ translation: MT200 -> pacs.009.001.08 Added CBPR+ translation: MT942 -> camt.052.001.08 Added CBPR+ translation: MT940 -> camt.053.001.08 Added CBPR+ translation: MT204 <-> pacs.010.001.03 Added CBPR+ translation: MT103, MT202, MT205 -> pacs.004.001.09 Added CBPR+ translation: MT900 -> camt.054.001.08 Added CBPR+ translation: MT910 -> camt.054.001.08 Added CBPR+ translation: MT210 -> camt.057.001.06 Added CBPR+ translation: MT101 <-> pain.001.001.09 MT101 to pain.001: fixed mapping of fields 50F and 59F, with preference for structured postal address instead of unstructured address lines CBPR+ MT192 and MT292 to camt.056: Added mapping of mandatory CreationDateTime MT103 STP to CBPR+ pacs.008.001.08.STP: Fixed mapping of mandatory creditor account CBPR+ MT to MX: changed the mapping of GroupHeader/CreationDateTime to have a fixed dummy date instead of the current time (PW-887) MT to MX: fixed the concatenation of narrative, to use space separator or not, depending on the MT value being split by length or words (PW-887) MX to MT: added a postprocess of the created message to sanitize fields with lines starting with '-' or ':' using '.' as replacement 9.2.30 - April 2022 seev.036 and seev.037 to MT566: Fixed mapping of CADETL dates seev.036 to MT566: Fixed mapping of SECMOVE dates, CASHMOVE and 19B::WITF -> 19B::FTCA seev.035 to MT564: FIxed mapping of CADETL Added CBPR+ translation: camt.057.001.06 -> MT210 MX to MT: Fixed mapping of field 50F party identifier using code, country and identifier (no account number) 9.2.29 - April 2022 Added translations: MT196/MT296 -> CBPR+ camt.029.001.09 Added translations xsys.011.001.01 and xsys.001.001.02 -> ACK/NAK (service 21 message) Fixed MIR generation in translations from xsys.012 and xsys.003 to MT019 9.2.28 - March 2022 Added CBPR+ translation camt.029.001.09 to MT196/296 (PW-747) Added translation: MT104 -> pain.008.001.08 9.2.27 - March 2022 (PW-872) Fixed mapping of field 95Q with multiple lines of name & address Added translations: MT566 <-> seev.036.002.12 and seev.036.001.12 Added translations: MT566 <-> seev.037.002.12 and seev.037.001.12 Added translations: MT564 <-> seev.035.002.12 and seev.035.001.12 Added translations: MT564 <-> seev.044.002.10 and seev.044.001.10 9.2.26 - March 2022 Added CBPR+ translation MT103 REJT to pacs.002.001.10 Added CBPR+ translation MT202 REJT and MT202 COV REJT to pacs.002.001.10 Added CBPR+ translation MT205 REJT and MT205 COV REJT to pacs.002.001.10 (PW-865) MT540/541/542/543 to sese.023.001.09: fixed mapping of place of trade 94B Added API to the translation factories to indicate a specific message type/version output 9.2.25 - March 2022 (PW-747) Added CBPR+ translations camt.056 <-> MT192/MT292 9.2.24 - March 2022 Enhanced support for local date time offset in the mappings MX to MT: mapping review for fields 98a, with preference of 98E over 98C when possible From prowide-iso2022 update: changed the default date time serialization to local time with UTC offset 9.2.23 - March 2022 (PW-859) MT54x to sese.020 fixed mapping of fields 20C:SEME, 20C:PCTI and 20C:MITI 9.2.22 - February 2022 Added CBPR+ translation camt.052 to MT942 camt.052 to MT941/MT942 migrated to common translations hierarchy camt.052/053 to MT: Fixed mapping of pagination into 28C CBPR+ fixed translation of 72:/INS to previous instructing agent, added dummy postal address to be compliant with UG 9.2.21 - February 2022 Added translation versions MT566 to seev.036.001.12 and seev.037.001.12 Added CBPR+ translation camt.053 to MT940 Added CBPR+ translation camt.054 to MT900/MT910 Added CBPR+ translation pacs.002 negative to MT199/MT299 REJT CBPR+ MT202 to pacs.009 ADV: fixed mapping of settlement information from fields 53a and 54a in the MT CBPR+ MT103 and MT202 mapping: fixed mapping for default creditor and debtor agents camt.053 to MT940/MT950 migrated to common translations hierarchy 9.2.20 - January 2022 (PW-831) camt.052 and camt.053 to 9xx: Fixed direction toggle by configuration 9.2.19 - January 2022 Added CBPR+ translation pacs.004.001.09 to MT103 RETN Added CBPR+ translation pacs.004.001.09 to MT202 RETN Added CBPR+ translation pacs.004.001.09 to MT205 RETN Added CBPR+ translation pacs.009.001.08.ADV to MT202 Added CBPR+ translation pacs.009.001.08 to MT205 Added CBPR+ translation pacs.009.001.08.COV to MT205COV Added translation version pacs.004.001.09 to MT103 RETN (PW-747) Added translations version for pain.001.001.09 <--> MT101 (PW-831) MT9xx to camt.05x: Versions 6, 7 and 8 migrated to common translations hierarchy MT101 to pain.001.001.08: migrated to common translations hierarchy Migrated CBPR+ translations to release 2.1 9.2.18 - January 2022 (PW-798) Added translations from MT540, MT541, MT542 and MT543 to sese.020.001.06 (PW-798) Added translations from sese.027.001.05 to MT548 Added specific translation implementation classes for CBPR+ (pacs.009 --> MT202) Added a CbprTranslatorFactory to autodetect source CBPR+ messages and provide its corresponding translation implementation MT to seev: Fixed incorrect version at AppHdr/MsgDefIdr in some MT to seev translations MX to MT: Added a translation configuration option to enabled or disabled the conversion of non-SWIFT characters into '.' 9.2.17 - January 2022 Added specific translation implementation classes for CBPR+ (pacs.009 <-- MT202/MT205) MT103 and MT202 to MX: removed redundant mapping for Interbank Settlement Date to meet cross-element rule constraint MT202 to pacs.009: Added criteria selection, field 72 must not indicate message is a rejection or return MT202 to pacs.009: Versions 6, 7 and 8 migrated to common translations hierarchy MT202 to pacs.009: enhanced mapping of SttlmInf in GrpHdr according to the CBPR+ METAFCT002/METAFCT003 9.2.17 - December 2021 Added specific translation implementation classes for CBPR+ (pacs.008 <-> MT103) Added com.prowidesoftware.integrator.translations as automatic module name in the MANIFEST for JPMS support MT103 to pacs.008.001.08: minor mapping enhancements (UETR, field 13C) MT to MX: Changed default ISO date time to local time with offset (for CBPR+ compatibility) MT to MX: Changed default label for missing content from UNKNOWN to NOTPROVIDED (for CBPR+ compatibility) 9.2.16 - December 2021 (PW-781) Added translation sese.025.001.09 to MT545 and MT547 (PW-779) Added translation MT541 and MT543 to sese.023.001.09 MT103 to pacs.008: added criteria check to avoid translating RETURN messages into pacs.008 (pacs.004 should be used instead) MT to MX: BusinessApplicationHeaderV02 is now generated by default instead of BusinessApplicationHeaderV01 Added back and forth mapping between the MT priority and PDE flag and the MX AppHdr 9.2.15 - November 2021 MT103 to pacs.008: enhanced mapping of SttlmInf in GrpHdr according to the CBPR+ METAFCT001 9.2.14 - November 2021 (PW-769): Added mapping for expected trade and settlement dates (from B/98a into NewDetails dates) MT103 to pacs.008: removed redundant IntrBkSttlmDt from GrpHdr (already mapped in CdtTrfTxInf) to be compliant with cross-element rule 9.2.13 - November 2021 (PW-762) Added translation MT542 to sese.023.001.09 9.2.12 - November 2021 (PW-754) camt.054 to MT900 and MT910: fixed mapping of 13D, 32A value date, 52D, 72 and added mapping for 50F option 9.2.11 - October 2021 (PW-643) setr.010.001.04 to MT502: RSET is set from CshSttlmDt (with fallback to ReqdFutrTradDt) 9.2.10 - October 2021 (PW-643) setr.004.001.04 to MT502: RSET is set from CshSttlmDt (with fallback to ReqdFutrTradDt) 9.2.9 - October 2021 (PW-643) MT509 to setr.016.001.04: changed mapping of OrdrDtlsRpt to IndvOrdrDtlsRpt to align with the SMPG spec (PW-663) Added translation MT210 to camt.057.001.06 (PW-663) Added translation MT103 RETURN to pacs.004.001.09 9.2.8 - October 2021 (PW-709) MT54x and 578 to sese: fixed generation of empty Settlement Transaction Condition (PW-709) MT540 to sese.023.001.09: fixed mapping of Partial Settlement Indicator (PW-708) pacs.008 and pacs.004 to MT: Fixed mapping of third reimbursement agent account (PW-643) setr.004.001.04 and setr.010.001.04 to MT502: RSET is set from CshSttlmDt (with fallback to ReqdFutrTradDt) 9.2.7 - September 2021 (JR-613) pacs.009 to MT202: Avoid redundant codewords in field 72 lines 9.2.6 - September 2021 (PW-662) pacs.009.001.08 to MT202[COV]: added mapping for PaymentIdentification/UETR into Block3/121 with fallback to autogenerated UETR (PW-643) MT515 to setr.012 and setr.006: added mapping for 95a::ALTE and removed related precondition check 9.2.5 - August 2021 (PW-643) MT515 into setr.012: enhanced mapping of InvstmtAcctDtls/AcctId to avoid precondition on INVE/BUYR parties (PW-643) MT515 into setr.006.001.04 and setr.012.001.04: fixed mapping of 35B when ISIN is not present (CUSIP, SEDOL, etc...) (PW-643) setr into MT502: TILI indicator defaults to GTCA (good until canceled) License check fix when source MX does not contain AppHdr 9.2.4 - August 2021 (PW-626) sese.024.001 and sese.025.001 to MT: mapped AppHdr/CreDt into 98C:PREP (PW-623) MT566 to seev036: removed unnecessary precondition check and enhanced mapping of the ADDB indicator, amount and rates (PW-613) pacs.009 to MT202 and MT202COV: Enhanced mapping of field 72 Added API to set default amount, unit and currency; when it is mandatory in a target element/field and not present in the source message 9.2.3 - August 2021 (PW-642) sese.025.001.09 to MT: fixed PlcOfTrad into 94B:EXCH mapping, fixed FctvSttlmDt into 98C:ESET mapping (PW-643) setr.004.001.04 and setr.010.001.04 to MT502: multiple mapping enhancements (PW-643) setr.004, setr.006, setr.010, setr.012, setr.015: enhanced mapping into 35B without ISIN, including corresponding prefixes (PW-569) pacs.008 and pacs.009 to MT: enhanced heuristic to attempt mapping into 50F and 59F instead of 50K and 59 pacs.008 and pacs.009 to MT: minor bugfix translating into field 50F when StrtNm and BldgNb concatenation exceeds the line limit in field 50F (PW-605) MT to MX: avoid split of DSS into Issr and SchmeNm elements if the Issr alone in the MX has enough length for the DSS value (PW-591-598, 600-604, 607-612, 614, 616, 618) Mapping fixes in MT564 to seev.031.001.10 9.2.2 - July 2021 (PW-626) sese.024.001.10 to MT548: several mapping fixes (PW-572) pacs.008 to MT103: avoid the /REC/ in field 72 if the InstrForNxtAgt already contains and instruction code (PW-569) pacs.009 to MT202COV: added mapping of structured beneficiary data into field 59F option (PW-567) pacs.008.001.08 to MT103: added mapping for PaymentIdentification/UETR into Block3/121 with fallback to autogenerated UETR Added translation sese.025.001.09 to MT546 (PW-569) pacs.008 to MT103: added mapping of structured beneficiary data into field 59F option (PW-568) pacs.008 to MT103: fixed mapping of CtgyPurp/Cd with \"INTC\" or \"CORT\" into 23E (PW-617) MT502, MT504, MT515, MT564 and MT566 to MX: fixed mapping of 98E with offset into ISO date time (PW-580-582-585-586-588-589-590) Mapping fixes in MT564 to seev.031.001.10 (PW-581) MT to MX: Preserve starting and trailing spaces when narrative field content is mapped into multiple lines of a single XML element (PW-568) pacs.008 to MT103: mapped special use case of CtgyPurp/Prtry with \"INTC CORT\" into respective 23E instances with \"INTC\" and \"CORT\" (PW-567) pacs.008 to MT103: avoid propagation of useless EndToEndId with \"NOTPROVIDED\" to field 70:/ROC/NOTPROVIDED MT856 translations: fixed mapping for sequence B6b Added translation setr.004.001.04 to MT502 Added translation setr.010.001.04 to MT502 (PW-579) MT564 to seev.031 added mapping for 70E::OFFO into Offerr elements (PW-577) MT564 to seev.031.001.10 added mapping for 25D with DSS into processing status sese and semt to MT: fixed mapping for SETPRTY 97A::SAFE when type and name was present besides the account identifier MX to MT: general fix in field 20C mapping that could occasionally generate more than 16 characters Added translation MT540 to sese.023.001.09 Added translation sese.024.001.10 to MT548 Added translation sese.025.001.09 to MT544 9.2.1 - June 2021 Added translation MT509 to setr.016.001.04 Added translation MT515 to setr.006.001.04 Added translation MT515 to setr.012.001.04 Added translation seev.035.001.03 to MT564 Added translation seev.039.001.03 to MT564 Added translation seev.044.001.03 to MT564 setr.017 to MT509: OrdrRef reverted change, mapped back to TRRF instead of RELA MX to MT: preserve line breaks in MT fields when translated from MX narrative content Added translation seev.038.001.03 to MT568 (PW-551) seev.031 to MT564: fixed 90K PRPP and 90L OFFR field mapping into cash movement details (PW-550) MT564 to seev.035, MT565 to seev.033, MT566 to seev.036: fixed mapping of field 90J currency component (PW-549) seev.031.001.10 to MT564: fixed mapping of MACI MICI and MMCI into the corporate action option details (PW-548) seev.031 to MT564: fixed mapping of 90F, 90J and 90L OFFR into the securities movement details (PW-547) seev.031 to MT564: added mapping for 90s option L into the maximum and minimum price details with 'PRCT' as default code (PW-546) seev.031 to MT564: fixed mapping of price details in SctiesMvmntDtls (PW-545) seev.031.001.03 to MT564: fixed mapping of certification breakdown flags (PW-544) MT564 to seev.031: fixed mapping of indicator flags in CADETL and CAOPTN (PW-543) seev.031.001.03 to MT564: fixed ISIN mapping (PW-542) MT564 to seev.031.001.10: fixed mapping of repetitive 70E content (PW-541) MT564 to seev.031.001.10: added missing mapping for 92D:WAPA into WarrantParity (PW-537) MT to MX: fixed mapping of face amount, that in some cases was propagated as 1.0 instead of the actual value (PW-535) MT564 to seev.031.001.10: mapping fixes in the cash movement details (PW-533) Added translation from seev.031.001.09 to MT564 MX pacs.008 and pacs.004 to MT103: fixed calculation of total charges in field 71G when the ChrgsInf is repeated in the MX Mapping fixes in setr.006.001.04, setr.012.001.04 and setr.015.001.04 to MT515 Mapping fix in MT103 to pacs.008 when multiple sender charges are present (PW-521) MT564 to seev.031.001.10: reviewed mapping of rate and amount details setr016 and setr.017 to MT509: OrdrRef is mapped into RELA instead of TRRF 9.2.0 - May 2021 SWIFT Standard release update 2021 (live 21 November 2021) Yearly revision of deprecation phase (see http://www.prowidesoftware.com/resources/deprecation-policy) 9.1.12 - April 2021 (PW-518) More flexible check of licensed BIC codes extracted from the translated MT headers xsys.012 to MT019: minor fix in target message fields order 9.1.11 - February 2021 (CR-34) Added seev.031.001.001.03 to MT564 and MT568 translations (CR-34) Added MT564 and MT568 to seev.031.001.10 translations Fixed seev.031 to 564/568 invalid codewords MIEX and MILT in translation into field 36B Fixed generation of 20C:SEME when BAH is not present, in translations from seev.031/033/034/037/038/044 Fixed generation of LINK in translations from: seev.031/032/033/034/035/036/037, semt.016, sese.023/026/033/037 9.1.10 - January 2021 (PW-438) Further enhancements in the setr.016 to MT509 when status is suspended 9.1.9 - January 2021 (PW-438) Fixed setr.016 to MT509 when status is suspended with proprietary reason code 9.1.8 - December 2020 Added translation from camt.053.001.02 to MT940 Added a one to many special translation for camt.053.001.02 to list of MT940 License check review 9.1.7 - November 2020 (PW-368) setr.015.001, setr.006.001 and setr.012.001 to MT515: Fixed mapping of transfer agent into 95Q from RltdPtyDtls with code TRAG (PW-368) setr.015 to MT515: added mapping for :22H::CAOP from Income Preference in the MX (PW-368) setr.015 to MT515: changed the mapping of InvstmtAcctDtls/AcctId into 95Q SELL/BUYR instead of 97A:SAFE setr.015.001 MT515: enhanced mapping for 35B when identification is not an ISIN setr.015.001 to MT515: removed no longer necessary precondition checks 30, 31 and 34 setr.006.001 to MT515: removed no longer necessary precondition checks 25 Fixed option to set sender/receiver from configuration in MX to MT940, MT941, MT942, MT900 and MT910 translations 9.1.6 - November 2020 (PW-368) setr.012.001 to MT515: removed no longer necessary precondition checks 6 (PW-368) setr.015.001 to MT515: removed no longer necessary precondition checks 5 (PW-368) setr.006.001 to MT515: removed no longer necessary precondition checks 5, 19 and 36 (PW-368) setr.006.001 and setr.012.001 to to 515: Mapped amount with codeword SWIT into amount with OTHR in the MT since SWIT is not accepted (PW-368) setr.006.001 and setr.012.001 to MT515: enhanced mapping for 35B when identification is not an ISIN (PW-368) setr.006.001 and setr.012.001 to MT515: fixed mapping for 95P when source message party information contains a BIC code semt, sese and setr into MT: fixed mapping into fields 19A and 90B when source message has too many decimal digits setr into MT: fixed mapping into field 95R from when source uses a proprietary identification 9.1.5 - November 2020 (PW-368) setr.016.001 to MT509: enhanced mapping for /Extension content (PW-368) setr.017.001 to MT509: enhanced mapping for /Extension content (PW-368) setr.017.001 to MT509: references and status mapping review (PW-368) setr.006.001 to MT515: more lenient precondition, and enhanced amounts mapping (PW-368) setr.012.001 to MT515: more lenient precondition, and enhanced amounts mapping (PW-368) setr.015.001 to MT515: more lenient precondition, and enhanced amounts mapping (PW-368) setr.016.001 to MT509: added mapping for the Extension into the Reason narrative 70D (PW-395) Added translation for MT567 to seev.041.001.10 corporate action cancellation status 9.1.4 - October 2020 (PW-368) Enhanced the setr.016.001 to MT509 translation to support all code and reason structures in the source MX (PW-374) Added a one to many special translation for pacs.001 to list of MT101 (PW-374) Added sender, receiver and direction to the optional TranslatorConfiguration (PW-368) Added global preventive check in MX to MT translations to avoid propagating tab characters into MT fields (PW-368) setr to MT515: added fallback mappings for mandatory fields 98a:SETT and 95:SELL or 95:BUYR in MT515 (PW-377) pacs.001 to MT101 added a fallback mapping from CdtTrfTxInf/PmtId/EndToEndId into field 21 when CdtTrfTxInf/PmtId/InstrId is not present (PW-377) pacs.001 to MT101 added a fallback mapping to create the optional field 23E with value OTHR if no other 23E field is created MT to MX: General fix for 35B ISIN mapping into MX identification of security elements 9.1.3 - August 2020 (PW-368) MX to MT: enhanced mapping of references (field 20 or 20C:SEME) with fallback to reference from AppHdr and truncation if necessary setr.016 to MT509: fixed mapping of mandatory field 24B 9.1.2 - August 2020 (PW-320) Replaced legacy default translations DSS name 'STRS' by 'COEX' (Coexistence global DSS from ISO 20022) Added version 8 translation between pacs.009 and MT202 Added version 8 translation between pacs.008 and MT103 Added version 8 translation between camt.053 and MT940 Added version 8 translation between camt.053 and MT950 Added version 8 translation between camt.054 and MT900 Added version 8 translation between camt.054 and MT910 In pacs.009 to 202 fixed precondition check for the CdtTrfTxInf[1]/PrvsInstgAgt Minor Fix in MX to MT time with offset mapping, offset was not propagated properly in some use cases Minor fix in logical criteria exception messages Added pacs.004.001.02 to MT 103 RETURN translation (for both ISO and SIC versions) Added pacs.002.001.03 to ACK/NAK translation (for both ISO and SIC versions) MX to MT: Added a parameter in the TranslatorConfiguration to optionally set a ClearingSystemMemberIdToBic function implementation SIC: MT to MX, trimmed spaces from reference to be compliant with SIC restriction SIC: MT103 to pacs.008 instructed agent mapped from 56A when present in the MT SIC: MT202 to pacs.009 instructed agent mapped from 57A when present in the MT 9.1.1 - Jun 2020 MT103 to pacs.008 fixed mapping of fields 70 and 72 MT101 to pacs.008 fixed mapping of fields 70 and 72 MT202 to pacs.009 fixed mapping of fields 70 and 72 MT202 to pacs.009 fixed precondition checking the format of the CLSTIME MT to MX: general enhancements in mapping of field 50F when line numbers are repeated MT502 to to setr.004 and setr.010: enhanced mapping for fields 70E and 70C MT564 to seev.031 enhanced mapping for field 94G MT565 to seev.033 enhanced mapping for fields 70E and 95G MT568 to seev.031 enhanced mapping for field 70E 9.1.0 - May 2020 SWIFT Standard release update 2020 (live 22 November 2020) Yearly revision of deprecation phase (see http://www.prowidesoftware.com/resources/deprecation-policy) 9.0.1 - May 2020 Internal implementation changes to the use the new AppHdr model in the SDK 9.0.0 - May 2020 Translations module extracted to its own jar in the distribution, with its own version from now on (PW-286) Fixed ISO datetime conversions into MT variants 8.0.8 - April 2020 Fixed logical message criteria for camt.054 into 900 or 910 depending on the entry debit/credit indicator Fixed translator factory finder for pacs.008.001.06 to 103 and seev to 566 Change in preconditions from camt.053 to MT to make them more flexible 8.0.7 - March 2020 Added specific translations for SIC (SWISS RTGS): between 202 and pacs.009 Added specific translations for SIC (SWISS RTGS): between 103 and pacs.008 In MX to MT: fixed extra slash when mapping clearing system codes or account numbers into party fields pacs.008 to 103 and pacs.009 to 202: field 20 now is mapped from CdtTrfTxInf/PmtId/TxId instead of GrpHdr/MsgId 103 to pacs.008: when present, the block 3 MUR is mapped into GrpHdr/MsgId instead of the reference field 20 8.0.6 - February 2020 Added translation from setr.006.001.04 redemption order confirmation to MT515 Added translation from setr.012.001.04 subscription order confirmation to MT515 Added translation from setr.016.001.04 order instruction status report to MT509 Added translation from setr.015.001.04 switch order confirmation into MT515 redemption and subscription leg messages Added translation between setr.017.001.04 order cancellation status report and MT509 (back and forth) Added a truncation report in translator classes and a '+' as last character of truncated data in the target message In MT to MX; header data is propagated to the AppHdr, including sender, receiver, reference, message type, and also PDE flag if present in the MT trailer In MX to MT; if the source MX contains an ISO header with the possible duplicate flag set to true, the created MT will have a PDE trailer flag MT103 to pacs.008 added mapping from 32A date into the group header settlement date Added a remove spaces transformation when mapping IBAN numbers from MT to MX 8.0.5 - January 2019 MT202 and MT202COV to MX, added mapping for sender correspondent field 53B location into group header instructing agent postal address (PW-225) MT202 and MT202COV to MX, removed the precondition requiring a mandatory party identifier in the sender correspondent field 53B 8.0.4 - December 2019 MT103 to MX, added mapping for sender correspondent field 53B location into group header instructing agent postal address (PW-225) MT103 to MX, removed the precondition requiring a mandatory party identifier in the sender correspondent field 53B (PW-225) MT103 to MX, removed the precondition requiring the same currency In semt to MT translations when Document/*/Id/Id is not found in MX the 20C:SEME is generated from AppHdr/BizMsgIdr Enhanced mapping of field 35B description of security when the ISIN is not present 8.0.3 - September 2019 Fixed mapping for field 36E in translations from MX to MT Added version 6, 7, 8 and 9 for translations between MT566 and seev.036 and seev.037 8.0.2 - August 2019 Added version 6, 7, 8 and 9 for translations between MT566 and seev.036 and seev.037 Fixed mapping for field 36E in translations from MX to MT Fixed bin/translator CLI app that stopped reading input on the first line break 8.0.1 - July 2019 Added a TranslatorFactory to enable automatic translator selection based on the source message Added a CLI to run automatic translation of files in the command line 8.0.0 - May 2019 JRE requirement increased to Java 1.8 SWIFT Standard release update 2019 (live 17 November 2019) Yearly revision of deprecation phase (see http://www.prowidesoftware.com/resources/deprecation-policy) 7.10.8 - March 2019 Updated dependencies: apache-commons-lang 3.7 -> 3.8.1 Updated dependencies: apache-text 1.3 -> 1.6 Fixed obfuscation to keep directories in jar Fixed mapping of Field70 to EndToEndId 7.10.7 - January 2019 Added alternative translate call in translation implementation classes to run the process without precondition checks Added translations between pacs.001.001.08 and MT101 Fixed translations for fields 50F and 77B Fixed precondition check for MX pain.001.001.03 to MT101 translation Fixed translation MX pain.001.001.03 to MT101 when multiple PmtInf and CdtTrfTxInf combinations are present 7.10.0 - April 2018 SWIFT Standard release update 2018 JRE requirement increased to Java 1.7 Dependencies: updated apache commons-lang from 2.6 to 3.7 Yearly revision of deprecation phase (see http://www.prowidesoftware.com/resources/deprecation-policy) Added 103 and 103 STP to pacs.008.001.07 Added 202 and 202 COV to pacs.009.001.07 Added 900 to camt.054.001.07 Added 910 to camt.054.001.07 Added 940 to camt.053.001.07 Added 941 to camt.052.001.07 Added 942 to camt.052.001.07 Added 950 to camt.053.001.07 Added pacs.008.001.07 to 103 Added pacs.009.001.07 to 202 and 202 COV Added camt.052.001.07 to 941 and 942 Added camt.053.001.07 to 940 and 950 Added camt.054.001.07 to 900 and 910 7.9.8 - April 2018 MT to MX: fixed decimal separator in amount format to avoid locale dependant issues 7.9.7 - January 2018 Changes in the distribution package |-> Command line tools in the bic directory changed from jar files to wrapper scripts |-> Dependencies directory renamed to lib |-> Removed the BUILD id timestamp from the jar files * MT to MX: sender and receiver address from header blocks mapped according to message direction 7.9.6 - December 2017 Added camt.054.001.06 to MT900 and MT910 Added camt.053.001.06 to MT940 and MT950 Added camt.052.001.06 to MT941 and MT942 Added pacs.009.001.06 to MT202 and MT202 COV Added pacs.008.001.06 to MT103 Added xsys.003.001.01 to MT019 Added xsys.012.001.01 to MT019 Added MT300 to fxtr.014.001.03 Performance enhancement: comprehensive use of relative paths to optimize content selection. Performance enhancement: mappings migrated from docname to xml to avoid paths conversion in engine. MX to MT: Fixed generation of fields with letter option D (such as 52D) when only name & address was present as content Added plugable PathAdapter to customize MX paths used in translations 7.9.5 - December 2017 Performance enhancement: static methods for internal processing, reduced path conversion Individual precondition checks made private in favor of the global preconditionsChecks API 7.9.4 - November 2017 JRE requirement backported to Java 1.6 Added xsys.002.001.01 to MT012 7.9.3 - October 2017 Fixed MT548 to MX: fixed mappings for ProcessingStatus Fixed MT586 to MX: mappings with invalid amounts sequence B5c changed to B5b MT564 and 566 to MX: fixed mapping for currency component in field 92J Added MT568 to seev.031.002.06 Added MT564 to seev.031.002.06 and seev.039.002.06 Added MT019 to xsys.003.001.01 and xsys.012.001.01 Added MT012 to xsys.002.001.01 Added MT202 and MT202 COV to pacs.009.001.06 Added MT103 and MT103 STP to pacs.008.001.06 MT to MX: fixed mapping header for sender and receiver addresses in output (incoming) messages MT to MX: replaced fixed data in message creation date time with current ISO time stamp MT940 to camt.053 and MT941/MT942 to camt.052: fixed translation for field 86 repetitions into additional entries information MT101 to pain.001: fixed translation for field 23E repetitions MT900 and MT910 to camt.054: fixed translation for field 72 repetitions Added MT941 and MT942 to camt.052.001.06 Added MT940 and MT950 to camt.053.001.06 Added MT900 and MT910 to camt.054.001.06 7.9.2 - August 2017 semt.020.02.01 to MTs 508, 545, 547, 578: changed default amount XXX99999999999999 to locale currency and 0 sese.020.002.01 and semt.013.002.01 to MT524 fixed generation of LINK sequences seev, semt, sese, setr to MT5xx: fixed generation of field 36B with quantity of financial instrument semt.020.002.01 to MT578: changed translation to generate the alleged instruction indicator (:22H::PAYM) in sequence B with codeword FREE instead of APMT to be compliant with MT semantic 283 pain.001.001.03 to MT101: fixed mapping for multiline field 77B and fixed MX paths when checking the available payment information instances setr.006.002.01 and setr.012.002.01 to MT515: fixed mapping for multiline field 70C semt and sese to MTs 544, 545, 546, 547 and 548: added link sequence with RELA to be compliant with MT semantic rules 73 semt.020.002.01 to MTs 535, 536, 537, 538 and 586: changed translations to set Activity Flag (field :17B:ACTI) to 'N' to be compliant with MT semantic rules 256, 266 and 267 semt.020.002.01 to MT508 and sese.020.002.01 to 524: changed translations to be compliant with MT semantic rule 281 MX to MT: fixed collapsing data in output MT, due to bug in handling repeat predicates from MX path MX to MT: fixed generic bug when creating fieldset with multiple letter options MX to MT: general mappings fixes for MX categories seev, semt, sese and setr Generic fix for proper handling of repetitive fields/elements in target message MX to MT: fixed bug when creating fieldset with multiple letter options MX to MT: fixed mappings translations for seev, semt, sese and setr 7.9 - May 2017 SWIFT Standard release update 2017 (live 19 November 2017 for MT and 18 November for MX) Removed false positive warning for invalid namespace in header when the header was actually empty 7.8.9 - May 2017 Yearly revision of deprecation phase (see http://www.prowidesoftware.com/resources/deprecation-policy) 7.8.3 - Jul 2016 If GrpHdr is present when converting from MX to MT, header BICs are set from it Internal migration from MxNode to XmlNode from SDK","title":"Prowide Integrator Translations"},{"location":"release-notes/changelog-translations/#prowide-integrator-translations-changelog","text":"SNAPSHOT 9.2.46 * (PW-1061) Revamp of the translation factory in order to enhance defaults and disambiguation * Added enum classes MtToMxTranslation and MxToMtTranslation will the supported translations","title":"Prowide Integrator Translations - CHANGELOG"},{"location":"release-notes/changelog-translations/#9245-september-2022","text":"(PW-1043) CBPR+: Minor enhancements in the 192/292 to camt.056 translations (PW-1006) Changed the translation factory, to fall-back into 29 for MT target when both 19 and 29* are feasible Added generic ISO: MT103 to pacs.002.001.10 (based on CBPR+ translation) Added generic ISO: MT196 to camt.029.001.09 (based on CBPR+ translation) Added generic ISO: MT200 to pacs.009.001.08 (based on CBPR+ translation) Added generic ISO: MT202 to pacs.002.001.10 (based on CBPR+ translation) Added generic ISO: MT202 to pacs.004.001.09 (based on CBPR+ translation) Added generic ISO: MT202COV to pacs.002.001.10 (based on CBPR+ translation) Added generic ISO: MT204 to pacs.010.001.03 (based on CBPR+ translation) Added generic ISO: MT205 to pacs.002.001.10 (based on CBPR+ translation) Added generic ISO: MT205 to pacs.004.001.09 (based on CBPR+ translation) Added generic ISO: MT205 to pacs.009.001.08 (based on CBPR+ translation) Added generic ISO: MT205COV to pacs.002.001.10 (based on CBPR+ translation) Added generic ISO: MT205COV to pacs.009.001.08 (based on CBPR+ translation) Added generic ISO: MT296 to camt.029.001.09 (based on CBPR+ translation) Added generic ISO: camt.029.001.09 to MT196 (based on CBPR+ translation) Added generic ISO: camt.029.001.09 to MT296 (based on CBPR+ translation) Added generic ISO: camt.056.001.08 to MT292 (based on CBPR+ translation) Added generic ISO: camt.057.001.06 to MT210 (based on CBPR+ translation) Added generic ISO: camt.060.001.05 to MT920 (based on CBPR+ translation) Added generic ISO: pacs.002.001.10 to MT199 (based on CBPR+ translation) Added generic ISO: pacs.002.001.10 to MT299 (based on CBPR+ translation) Added generic ISO: pacs.004.001.09 to MT202 (based on CBPR+ translation) Added generic ISO: pacs.004.001.09 to MT205 (based on CBPR+ translation) Added generic ISO: pacs.009.001.08 to MT200 (based on CBPR+ translation) Added generic ISO: pacs.009.001.08 to MT205 (based on CBPR+ translation) Added generic ISO: pacs.010.001.03 to MT204 (based on CBPR+ translation) Removed unnecesary unescape in internal extractPattern function","title":"9.2.45 - September 2022"},{"location":"release-notes/changelog-translations/#9244-september-2022","text":"(PW-1006) MX to MT: Added a translation coverage report to see what source elements have been read during the translation semt.020.002.01 to MT578 mapping fix for REDE/RECE => REAG semantic check compiance in the generated MT","title":"9.2.44 - September 2022"},{"location":"release-notes/changelog-translations/#9243-september-2022","text":"(PW-1031) Added translation MT548 to sese.024.001.10","title":"9.2.43 - September 2022"},{"location":"release-notes/changelog-translations/#9242-august-2022","text":"(PW-1012) sese.027.001.05 to MT548 mapping fixes","title":"9.2.42 - August 2022"},{"location":"release-notes/changelog-translations/#9241-july-2022","text":"(PW-955) pain.001 to MT101: added truncation to the text after /RFB in field 70","title":"9.2.41 - July 2022"},{"location":"release-notes/changelog-translations/#9240-july-2022","text":"Added internal loops API to MTs: 110, 201, 203, 210, 410, 412, 420, 422, 450, 456, 604, 605, 801, 920, 973","title":"9.2.40 - July 2022"},{"location":"release-notes/changelog-translations/#9239-july-2022","text":"(PW-958) Enhanced the truncatino report to differentiate between truncation regular fields and reference fields","title":"9.2.39 - July 2022"},{"location":"release-notes/changelog-translations/#9238-june-2022","text":"(PW-948) MX -> MT202, MT204, MT205: enhanced mapping of field 58D (PW-943) Added translation: pacs.002.001.10 positive -> MT199/MT299 (PW-932) Added translation: pacs.008.001.08 (ISO and CBPR+) -> MT103.REMIT (PW-932) Added a translation configuration parameter to disable the generation of the PDE flag","title":"9.2.38 - June 2022"},{"location":"release-notes/changelog-translations/#9237-june-2022","text":"(PW-949) MX to MT: enhanced mapping of name & address fields, with truncation with evidence and having the country, when present, always at the last line (PW-948) pacs.009.01.10 -> MT202: enhanced mapping of field 58D setr.004.001.04 -> MT502: mapped the Holdings Redemption Rate into 36B::ORDR/UNIT to be compliant with semantic 258 check MT102 -> pacs.008.001.10: fixed mapping to be compliant with MX cross element checks Implementation enhancements","title":"9.2.37 - June 2022"},{"location":"release-notes/changelog-translations/#9236-may-2022","text":"(PW-932) Added translation: camt.056.001.08 -> MT192 (PW-924) Added translation: camt.052.001.09 <-> MT942 (PW-924) Added translation: camt.053.001.09 <-> MT940 (PW-924) Added translation: camt.053.001.09 <-> MT950 (PW-924) Added translation: camt.054.001.09 <-> MT910 (PW-832) Added translation sese.023.001.09 -> MT540 MX to MT: Added truncation with evidence in party identificacion name fields","title":"9.2.36 - May 2022"},{"location":"release-notes/changelog-translations/#9235-may-2022","text":"(PW-918) Added translation MT192/MT292 -> camt.056.001.08 (PW-908) Added translation: MT102 -> pacs.008.001.10 (PW-813) Internal enhancement to fix CVE Added getTruncatedContent() to the Translator interface Deprecation API review","title":"9.2.35 - May 2022"},{"location":"release-notes/changelog-translations/#9234-may-2022","text":"(PW-915) Added translation: pacs.009.001.10 <-> MT202 (PW-915) Added translation: pacs.008.001.10 <-> MT103 (PW-908) Added translation: pacs.008.001.10 -> MT102 Mx to MT: Added a post process to sanitize with default values missing components in party fields options D, K and H","title":"9.2.34 - May 2022"},{"location":"release-notes/changelog-translations/#9233-may-2022","text":"(PW-905) MX pain.001 to MT101: Added default values for charges and creditor and removed related preconditions","title":"9.2.33 - May 2022"},{"location":"release-notes/changelog-translations/#9232-may-2022","text":"(PW-899) sese.027.001.05 -> MT548 added the mapping of TxDtls into SETTRAN Added CBPR+ translation: MT950 <-> camt.053.001.08 Added CBPR+ translation: MT941 <-> camt.052.001.08 Added CBPR+ translation: camt.060.001.05 -> MT920 Added CBPR+ translation: pacs.009.001.08 -> MT200 Added CBPR+ translation: MT941 <-> camt.052.001.08","title":"9.2.32 - May 2022"},{"location":"release-notes/changelog-translations/#9231-april-2022","text":"Added CBPR+ translation: MT200 -> pacs.009.001.08 Added CBPR+ translation: MT942 -> camt.052.001.08 Added CBPR+ translation: MT940 -> camt.053.001.08 Added CBPR+ translation: MT204 <-> pacs.010.001.03 Added CBPR+ translation: MT103, MT202, MT205 -> pacs.004.001.09 Added CBPR+ translation: MT900 -> camt.054.001.08 Added CBPR+ translation: MT910 -> camt.054.001.08 Added CBPR+ translation: MT210 -> camt.057.001.06 Added CBPR+ translation: MT101 <-> pain.001.001.09 MT101 to pain.001: fixed mapping of fields 50F and 59F, with preference for structured postal address instead of unstructured address lines CBPR+ MT192 and MT292 to camt.056: Added mapping of mandatory CreationDateTime MT103 STP to CBPR+ pacs.008.001.08.STP: Fixed mapping of mandatory creditor account CBPR+ MT to MX: changed the mapping of GroupHeader/CreationDateTime to have a fixed dummy date instead of the current time (PW-887) MT to MX: fixed the concatenation of narrative, to use space separator or not, depending on the MT value being split by length or words (PW-887) MX to MT: added a postprocess of the created message to sanitize fields with lines starting with '-' or ':' using '.' as replacement","title":"9.2.31 - April 2022"},{"location":"release-notes/changelog-translations/#9230-april-2022","text":"seev.036 and seev.037 to MT566: Fixed mapping of CADETL dates seev.036 to MT566: Fixed mapping of SECMOVE dates, CASHMOVE and 19B::WITF -> 19B::FTCA seev.035 to MT564: FIxed mapping of CADETL Added CBPR+ translation: camt.057.001.06 -> MT210 MX to MT: Fixed mapping of field 50F party identifier using code, country and identifier (no account number)","title":"9.2.30 - April 2022"},{"location":"release-notes/changelog-translations/#9229-april-2022","text":"Added translations: MT196/MT296 -> CBPR+ camt.029.001.09 Added translations xsys.011.001.01 and xsys.001.001.02 -> ACK/NAK (service 21 message) Fixed MIR generation in translations from xsys.012 and xsys.003 to MT019","title":"9.2.29 - April 2022"},{"location":"release-notes/changelog-translations/#9228-march-2022","text":"Added CBPR+ translation camt.029.001.09 to MT196/296 (PW-747) Added translation: MT104 -> pain.008.001.08","title":"9.2.28 - March 2022"},{"location":"release-notes/changelog-translations/#9227-march-2022","text":"(PW-872) Fixed mapping of field 95Q with multiple lines of name & address Added translations: MT566 <-> seev.036.002.12 and seev.036.001.12 Added translations: MT566 <-> seev.037.002.12 and seev.037.001.12 Added translations: MT564 <-> seev.035.002.12 and seev.035.001.12 Added translations: MT564 <-> seev.044.002.10 and seev.044.001.10","title":"9.2.27 - March 2022"},{"location":"release-notes/changelog-translations/#9226-march-2022","text":"Added CBPR+ translation MT103 REJT to pacs.002.001.10 Added CBPR+ translation MT202 REJT and MT202 COV REJT to pacs.002.001.10 Added CBPR+ translation MT205 REJT and MT205 COV REJT to pacs.002.001.10 (PW-865) MT540/541/542/543 to sese.023.001.09: fixed mapping of place of trade 94B Added API to the translation factories to indicate a specific message type/version output","title":"9.2.26 - March 2022"},{"location":"release-notes/changelog-translations/#9225-march-2022","text":"(PW-747) Added CBPR+ translations camt.056 <-> MT192/MT292","title":"9.2.25 - March 2022"},{"location":"release-notes/changelog-translations/#9224-march-2022","text":"Enhanced support for local date time offset in the mappings MX to MT: mapping review for fields 98a, with preference of 98E over 98C when possible From prowide-iso2022 update: changed the default date time serialization to local time with UTC offset","title":"9.2.24 - March 2022"},{"location":"release-notes/changelog-translations/#9223-march-2022","text":"(PW-859) MT54x to sese.020 fixed mapping of fields 20C:SEME, 20C:PCTI and 20C:MITI","title":"9.2.23 - March 2022"},{"location":"release-notes/changelog-translations/#9222-february-2022","text":"Added CBPR+ translation camt.052 to MT942 camt.052 to MT941/MT942 migrated to common translations hierarchy camt.052/053 to MT: Fixed mapping of pagination into 28C CBPR+ fixed translation of 72:/INS to previous instructing agent, added dummy postal address to be compliant with UG","title":"9.2.22 - February 2022"},{"location":"release-notes/changelog-translations/#9221-february-2022","text":"Added translation versions MT566 to seev.036.001.12 and seev.037.001.12 Added CBPR+ translation camt.053 to MT940 Added CBPR+ translation camt.054 to MT900/MT910 Added CBPR+ translation pacs.002 negative to MT199/MT299 REJT CBPR+ MT202 to pacs.009 ADV: fixed mapping of settlement information from fields 53a and 54a in the MT CBPR+ MT103 and MT202 mapping: fixed mapping for default creditor and debtor agents camt.053 to MT940/MT950 migrated to common translations hierarchy","title":"9.2.21 - February 2022"},{"location":"release-notes/changelog-translations/#9220-january-2022","text":"(PW-831) camt.052 and camt.053 to 9xx: Fixed direction toggle by configuration","title":"9.2.20 - January 2022"},{"location":"release-notes/changelog-translations/#9219-january-2022","text":"Added CBPR+ translation pacs.004.001.09 to MT103 RETN Added CBPR+ translation pacs.004.001.09 to MT202 RETN Added CBPR+ translation pacs.004.001.09 to MT205 RETN Added CBPR+ translation pacs.009.001.08.ADV to MT202 Added CBPR+ translation pacs.009.001.08 to MT205 Added CBPR+ translation pacs.009.001.08.COV to MT205COV Added translation version pacs.004.001.09 to MT103 RETN (PW-747) Added translations version for pain.001.001.09 <--> MT101 (PW-831) MT9xx to camt.05x: Versions 6, 7 and 8 migrated to common translations hierarchy MT101 to pain.001.001.08: migrated to common translations hierarchy Migrated CBPR+ translations to release 2.1","title":"9.2.19 - January 2022"},{"location":"release-notes/changelog-translations/#9218-january-2022","text":"(PW-798) Added translations from MT540, MT541, MT542 and MT543 to sese.020.001.06 (PW-798) Added translations from sese.027.001.05 to MT548 Added specific translation implementation classes for CBPR+ (pacs.009 --> MT202) Added a CbprTranslatorFactory to autodetect source CBPR+ messages and provide its corresponding translation implementation MT to seev: Fixed incorrect version at AppHdr/MsgDefIdr in some MT to seev translations MX to MT: Added a translation configuration option to enabled or disabled the conversion of non-SWIFT characters into '.'","title":"9.2.18 - January 2022"},{"location":"release-notes/changelog-translations/#9217-january-2022","text":"Added specific translation implementation classes for CBPR+ (pacs.009 <-- MT202/MT205) MT103 and MT202 to MX: removed redundant mapping for Interbank Settlement Date to meet cross-element rule constraint MT202 to pacs.009: Added criteria selection, field 72 must not indicate message is a rejection or return MT202 to pacs.009: Versions 6, 7 and 8 migrated to common translations hierarchy MT202 to pacs.009: enhanced mapping of SttlmInf in GrpHdr according to the CBPR+ METAFCT002/METAFCT003","title":"9.2.17 - January 2022"},{"location":"release-notes/changelog-translations/#9217-december-2021","text":"Added specific translation implementation classes for CBPR+ (pacs.008 <-> MT103) Added com.prowidesoftware.integrator.translations as automatic module name in the MANIFEST for JPMS support MT103 to pacs.008.001.08: minor mapping enhancements (UETR, field 13C) MT to MX: Changed default ISO date time to local time with offset (for CBPR+ compatibility) MT to MX: Changed default label for missing content from UNKNOWN to NOTPROVIDED (for CBPR+ compatibility)","title":"9.2.17 - December 2021"},{"location":"release-notes/changelog-translations/#9216-december-2021","text":"(PW-781) Added translation sese.025.001.09 to MT545 and MT547 (PW-779) Added translation MT541 and MT543 to sese.023.001.09 MT103 to pacs.008: added criteria check to avoid translating RETURN messages into pacs.008 (pacs.004 should be used instead) MT to MX: BusinessApplicationHeaderV02 is now generated by default instead of BusinessApplicationHeaderV01 Added back and forth mapping between the MT priority and PDE flag and the MX AppHdr","title":"9.2.16 - December 2021"},{"location":"release-notes/changelog-translations/#9215-november-2021","text":"MT103 to pacs.008: enhanced mapping of SttlmInf in GrpHdr according to the CBPR+ METAFCT001","title":"9.2.15 - November 2021"},{"location":"release-notes/changelog-translations/#9214-november-2021","text":"(PW-769): Added mapping for expected trade and settlement dates (from B/98a into NewDetails dates) MT103 to pacs.008: removed redundant IntrBkSttlmDt from GrpHdr (already mapped in CdtTrfTxInf) to be compliant with cross-element rule","title":"9.2.14 - November 2021"},{"location":"release-notes/changelog-translations/#9213-november-2021","text":"(PW-762) Added translation MT542 to sese.023.001.09","title":"9.2.13 - November 2021"},{"location":"release-notes/changelog-translations/#9212-november-2021","text":"(PW-754) camt.054 to MT900 and MT910: fixed mapping of 13D, 32A value date, 52D, 72 and added mapping for 50F option","title":"9.2.12 - November 2021"},{"location":"release-notes/changelog-translations/#9211-october-2021","text":"(PW-643) setr.010.001.04 to MT502: RSET is set from CshSttlmDt (with fallback to ReqdFutrTradDt)","title":"9.2.11 - October 2021"},{"location":"release-notes/changelog-translations/#9210-october-2021","text":"(PW-643) setr.004.001.04 to MT502: RSET is set from CshSttlmDt (with fallback to ReqdFutrTradDt)","title":"9.2.10 - October 2021"},{"location":"release-notes/changelog-translations/#929-october-2021","text":"(PW-643) MT509 to setr.016.001.04: changed mapping of OrdrDtlsRpt to IndvOrdrDtlsRpt to align with the SMPG spec (PW-663) Added translation MT210 to camt.057.001.06 (PW-663) Added translation MT103 RETURN to pacs.004.001.09","title":"9.2.9 - October 2021"},{"location":"release-notes/changelog-translations/#928-october-2021","text":"(PW-709) MT54x and 578 to sese: fixed generation of empty Settlement Transaction Condition (PW-709) MT540 to sese.023.001.09: fixed mapping of Partial Settlement Indicator (PW-708) pacs.008 and pacs.004 to MT: Fixed mapping of third reimbursement agent account (PW-643) setr.004.001.04 and setr.010.001.04 to MT502: RSET is set from CshSttlmDt (with fallback to ReqdFutrTradDt)","title":"9.2.8 - October 2021"},{"location":"release-notes/changelog-translations/#927-september-2021","text":"(JR-613) pacs.009 to MT202: Avoid redundant codewords in field 72 lines","title":"9.2.7 - September 2021"},{"location":"release-notes/changelog-translations/#926-september-2021","text":"(PW-662) pacs.009.001.08 to MT202[COV]: added mapping for PaymentIdentification/UETR into Block3/121 with fallback to autogenerated UETR (PW-643) MT515 to setr.012 and setr.006: added mapping for 95a::ALTE and removed related precondition check","title":"9.2.6 - September 2021"},{"location":"release-notes/changelog-translations/#925-august-2021","text":"(PW-643) MT515 into setr.012: enhanced mapping of InvstmtAcctDtls/AcctId to avoid precondition on INVE/BUYR parties (PW-643) MT515 into setr.006.001.04 and setr.012.001.04: fixed mapping of 35B when ISIN is not present (CUSIP, SEDOL, etc...) (PW-643) setr into MT502: TILI indicator defaults to GTCA (good until canceled) License check fix when source MX does not contain AppHdr","title":"9.2.5 - August 2021"},{"location":"release-notes/changelog-translations/#924-august-2021","text":"(PW-626) sese.024.001 and sese.025.001 to MT: mapped AppHdr/CreDt into 98C:PREP (PW-623) MT566 to seev036: removed unnecessary precondition check and enhanced mapping of the ADDB indicator, amount and rates (PW-613) pacs.009 to MT202 and MT202COV: Enhanced mapping of field 72 Added API to set default amount, unit and currency; when it is mandatory in a target element/field and not present in the source message","title":"9.2.4 - August 2021"},{"location":"release-notes/changelog-translations/#923-august-2021","text":"(PW-642) sese.025.001.09 to MT: fixed PlcOfTrad into 94B:EXCH mapping, fixed FctvSttlmDt into 98C:ESET mapping (PW-643) setr.004.001.04 and setr.010.001.04 to MT502: multiple mapping enhancements (PW-643) setr.004, setr.006, setr.010, setr.012, setr.015: enhanced mapping into 35B without ISIN, including corresponding prefixes (PW-569) pacs.008 and pacs.009 to MT: enhanced heuristic to attempt mapping into 50F and 59F instead of 50K and 59 pacs.008 and pacs.009 to MT: minor bugfix translating into field 50F when StrtNm and BldgNb concatenation exceeds the line limit in field 50F (PW-605) MT to MX: avoid split of DSS into Issr and SchmeNm elements if the Issr alone in the MX has enough length for the DSS value (PW-591-598, 600-604, 607-612, 614, 616, 618) Mapping fixes in MT564 to seev.031.001.10","title":"9.2.3 - August 2021"},{"location":"release-notes/changelog-translations/#922-july-2021","text":"(PW-626) sese.024.001.10 to MT548: several mapping fixes (PW-572) pacs.008 to MT103: avoid the /REC/ in field 72 if the InstrForNxtAgt already contains and instruction code (PW-569) pacs.009 to MT202COV: added mapping of structured beneficiary data into field 59F option (PW-567) pacs.008.001.08 to MT103: added mapping for PaymentIdentification/UETR into Block3/121 with fallback to autogenerated UETR Added translation sese.025.001.09 to MT546 (PW-569) pacs.008 to MT103: added mapping of structured beneficiary data into field 59F option (PW-568) pacs.008 to MT103: fixed mapping of CtgyPurp/Cd with \"INTC\" or \"CORT\" into 23E (PW-617) MT502, MT504, MT515, MT564 and MT566 to MX: fixed mapping of 98E with offset into ISO date time (PW-580-582-585-586-588-589-590) Mapping fixes in MT564 to seev.031.001.10 (PW-581) MT to MX: Preserve starting and trailing spaces when narrative field content is mapped into multiple lines of a single XML element (PW-568) pacs.008 to MT103: mapped special use case of CtgyPurp/Prtry with \"INTC CORT\" into respective 23E instances with \"INTC\" and \"CORT\" (PW-567) pacs.008 to MT103: avoid propagation of useless EndToEndId with \"NOTPROVIDED\" to field 70:/ROC/NOTPROVIDED MT856 translations: fixed mapping for sequence B6b Added translation setr.004.001.04 to MT502 Added translation setr.010.001.04 to MT502 (PW-579) MT564 to seev.031 added mapping for 70E::OFFO into Offerr elements (PW-577) MT564 to seev.031.001.10 added mapping for 25D with DSS into processing status sese and semt to MT: fixed mapping for SETPRTY 97A::SAFE when type and name was present besides the account identifier MX to MT: general fix in field 20C mapping that could occasionally generate more than 16 characters Added translation MT540 to sese.023.001.09 Added translation sese.024.001.10 to MT548 Added translation sese.025.001.09 to MT544","title":"9.2.2 - July 2021"},{"location":"release-notes/changelog-translations/#921-june-2021","text":"Added translation MT509 to setr.016.001.04 Added translation MT515 to setr.006.001.04 Added translation MT515 to setr.012.001.04 Added translation seev.035.001.03 to MT564 Added translation seev.039.001.03 to MT564 Added translation seev.044.001.03 to MT564 setr.017 to MT509: OrdrRef reverted change, mapped back to TRRF instead of RELA MX to MT: preserve line breaks in MT fields when translated from MX narrative content Added translation seev.038.001.03 to MT568 (PW-551) seev.031 to MT564: fixed 90K PRPP and 90L OFFR field mapping into cash movement details (PW-550) MT564 to seev.035, MT565 to seev.033, MT566 to seev.036: fixed mapping of field 90J currency component (PW-549) seev.031.001.10 to MT564: fixed mapping of MACI MICI and MMCI into the corporate action option details (PW-548) seev.031 to MT564: fixed mapping of 90F, 90J and 90L OFFR into the securities movement details (PW-547) seev.031 to MT564: added mapping for 90s option L into the maximum and minimum price details with 'PRCT' as default code (PW-546) seev.031 to MT564: fixed mapping of price details in SctiesMvmntDtls (PW-545) seev.031.001.03 to MT564: fixed mapping of certification breakdown flags (PW-544) MT564 to seev.031: fixed mapping of indicator flags in CADETL and CAOPTN (PW-543) seev.031.001.03 to MT564: fixed ISIN mapping (PW-542) MT564 to seev.031.001.10: fixed mapping of repetitive 70E content (PW-541) MT564 to seev.031.001.10: added missing mapping for 92D:WAPA into WarrantParity (PW-537) MT to MX: fixed mapping of face amount, that in some cases was propagated as 1.0 instead of the actual value (PW-535) MT564 to seev.031.001.10: mapping fixes in the cash movement details (PW-533) Added translation from seev.031.001.09 to MT564 MX pacs.008 and pacs.004 to MT103: fixed calculation of total charges in field 71G when the ChrgsInf is repeated in the MX Mapping fixes in setr.006.001.04, setr.012.001.04 and setr.015.001.04 to MT515 Mapping fix in MT103 to pacs.008 when multiple sender charges are present (PW-521) MT564 to seev.031.001.10: reviewed mapping of rate and amount details setr016 and setr.017 to MT509: OrdrRef is mapped into RELA instead of TRRF","title":"9.2.1 - June 2021"},{"location":"release-notes/changelog-translations/#920-may-2021","text":"SWIFT Standard release update 2021 (live 21 November 2021) Yearly revision of deprecation phase (see http://www.prowidesoftware.com/resources/deprecation-policy)","title":"9.2.0 - May 2021"},{"location":"release-notes/changelog-translations/#9112-april-2021","text":"(PW-518) More flexible check of licensed BIC codes extracted from the translated MT headers xsys.012 to MT019: minor fix in target message fields order","title":"9.1.12 - April 2021"},{"location":"release-notes/changelog-translations/#9111-february-2021","text":"(CR-34) Added seev.031.001.001.03 to MT564 and MT568 translations (CR-34) Added MT564 and MT568 to seev.031.001.10 translations Fixed seev.031 to 564/568 invalid codewords MIEX and MILT in translation into field 36B Fixed generation of 20C:SEME when BAH is not present, in translations from seev.031/033/034/037/038/044 Fixed generation of LINK in translations from: seev.031/032/033/034/035/036/037, semt.016, sese.023/026/033/037","title":"9.1.11 - February 2021"},{"location":"release-notes/changelog-translations/#9110-january-2021","text":"(PW-438) Further enhancements in the setr.016 to MT509 when status is suspended","title":"9.1.10 - January 2021"},{"location":"release-notes/changelog-translations/#919-january-2021","text":"(PW-438) Fixed setr.016 to MT509 when status is suspended with proprietary reason code","title":"9.1.9 - January 2021"},{"location":"release-notes/changelog-translations/#918-december-2020","text":"Added translation from camt.053.001.02 to MT940 Added a one to many special translation for camt.053.001.02 to list of MT940 License check review","title":"9.1.8 - December 2020"},{"location":"release-notes/changelog-translations/#917-november-2020","text":"(PW-368) setr.015.001, setr.006.001 and setr.012.001 to MT515: Fixed mapping of transfer agent into 95Q from RltdPtyDtls with code TRAG (PW-368) setr.015 to MT515: added mapping for :22H::CAOP from Income Preference in the MX (PW-368) setr.015 to MT515: changed the mapping of InvstmtAcctDtls/AcctId into 95Q SELL/BUYR instead of 97A:SAFE setr.015.001 MT515: enhanced mapping for 35B when identification is not an ISIN setr.015.001 to MT515: removed no longer necessary precondition checks 30, 31 and 34 setr.006.001 to MT515: removed no longer necessary precondition checks 25 Fixed option to set sender/receiver from configuration in MX to MT940, MT941, MT942, MT900 and MT910 translations","title":"9.1.7 - November 2020"},{"location":"release-notes/changelog-translations/#916-november-2020","text":"(PW-368) setr.012.001 to MT515: removed no longer necessary precondition checks 6 (PW-368) setr.015.001 to MT515: removed no longer necessary precondition checks 5 (PW-368) setr.006.001 to MT515: removed no longer necessary precondition checks 5, 19 and 36 (PW-368) setr.006.001 and setr.012.001 to to 515: Mapped amount with codeword SWIT into amount with OTHR in the MT since SWIT is not accepted (PW-368) setr.006.001 and setr.012.001 to MT515: enhanced mapping for 35B when identification is not an ISIN (PW-368) setr.006.001 and setr.012.001 to MT515: fixed mapping for 95P when source message party information contains a BIC code semt, sese and setr into MT: fixed mapping into fields 19A and 90B when source message has too many decimal digits setr into MT: fixed mapping into field 95R from when source uses a proprietary identification","title":"9.1.6 - November 2020"},{"location":"release-notes/changelog-translations/#915-november-2020","text":"(PW-368) setr.016.001 to MT509: enhanced mapping for /Extension content (PW-368) setr.017.001 to MT509: enhanced mapping for /Extension content (PW-368) setr.017.001 to MT509: references and status mapping review (PW-368) setr.006.001 to MT515: more lenient precondition, and enhanced amounts mapping (PW-368) setr.012.001 to MT515: more lenient precondition, and enhanced amounts mapping (PW-368) setr.015.001 to MT515: more lenient precondition, and enhanced amounts mapping (PW-368) setr.016.001 to MT509: added mapping for the Extension into the Reason narrative 70D (PW-395) Added translation for MT567 to seev.041.001.10 corporate action cancellation status","title":"9.1.5 - November 2020"},{"location":"release-notes/changelog-translations/#914-october-2020","text":"(PW-368) Enhanced the setr.016.001 to MT509 translation to support all code and reason structures in the source MX (PW-374) Added a one to many special translation for pacs.001 to list of MT101 (PW-374) Added sender, receiver and direction to the optional TranslatorConfiguration (PW-368) Added global preventive check in MX to MT translations to avoid propagating tab characters into MT fields (PW-368) setr to MT515: added fallback mappings for mandatory fields 98a:SETT and 95:SELL or 95:BUYR in MT515 (PW-377) pacs.001 to MT101 added a fallback mapping from CdtTrfTxInf/PmtId/EndToEndId into field 21 when CdtTrfTxInf/PmtId/InstrId is not present (PW-377) pacs.001 to MT101 added a fallback mapping to create the optional field 23E with value OTHR if no other 23E field is created MT to MX: General fix for 35B ISIN mapping into MX identification of security elements","title":"9.1.4 - October 2020"},{"location":"release-notes/changelog-translations/#913-august-2020","text":"(PW-368) MX to MT: enhanced mapping of references (field 20 or 20C:SEME) with fallback to reference from AppHdr and truncation if necessary setr.016 to MT509: fixed mapping of mandatory field 24B","title":"9.1.3 - August 2020"},{"location":"release-notes/changelog-translations/#912-august-2020","text":"(PW-320) Replaced legacy default translations DSS name 'STRS' by 'COEX' (Coexistence global DSS from ISO 20022) Added version 8 translation between pacs.009 and MT202 Added version 8 translation between pacs.008 and MT103 Added version 8 translation between camt.053 and MT940 Added version 8 translation between camt.053 and MT950 Added version 8 translation between camt.054 and MT900 Added version 8 translation between camt.054 and MT910 In pacs.009 to 202 fixed precondition check for the CdtTrfTxInf[1]/PrvsInstgAgt Minor Fix in MX to MT time with offset mapping, offset was not propagated properly in some use cases Minor fix in logical criteria exception messages Added pacs.004.001.02 to MT 103 RETURN translation (for both ISO and SIC versions) Added pacs.002.001.03 to ACK/NAK translation (for both ISO and SIC versions) MX to MT: Added a parameter in the TranslatorConfiguration to optionally set a ClearingSystemMemberIdToBic function implementation SIC: MT to MX, trimmed spaces from reference to be compliant with SIC restriction SIC: MT103 to pacs.008 instructed agent mapped from 56A when present in the MT SIC: MT202 to pacs.009 instructed agent mapped from 57A when present in the MT","title":"9.1.2 - August 2020"},{"location":"release-notes/changelog-translations/#911-jun-2020","text":"MT103 to pacs.008 fixed mapping of fields 70 and 72 MT101 to pacs.008 fixed mapping of fields 70 and 72 MT202 to pacs.009 fixed mapping of fields 70 and 72 MT202 to pacs.009 fixed precondition checking the format of the CLSTIME MT to MX: general enhancements in mapping of field 50F when line numbers are repeated MT502 to to setr.004 and setr.010: enhanced mapping for fields 70E and 70C MT564 to seev.031 enhanced mapping for field 94G MT565 to seev.033 enhanced mapping for fields 70E and 95G MT568 to seev.031 enhanced mapping for field 70E","title":"9.1.1 - Jun 2020"},{"location":"release-notes/changelog-translations/#910-may-2020","text":"SWIFT Standard release update 2020 (live 22 November 2020) Yearly revision of deprecation phase (see http://www.prowidesoftware.com/resources/deprecation-policy)","title":"9.1.0 - May 2020"},{"location":"release-notes/changelog-translations/#901-may-2020","text":"Internal implementation changes to the use the new AppHdr model in the SDK","title":"9.0.1 - May 2020"},{"location":"release-notes/changelog-translations/#900-may-2020","text":"Translations module extracted to its own jar in the distribution, with its own version from now on (PW-286) Fixed ISO datetime conversions into MT variants","title":"9.0.0 - May 2020"},{"location":"release-notes/changelog-translations/#808-april-2020","text":"Fixed logical message criteria for camt.054 into 900 or 910 depending on the entry debit/credit indicator Fixed translator factory finder for pacs.008.001.06 to 103 and seev to 566 Change in preconditions from camt.053 to MT to make them more flexible","title":"8.0.8 - April 2020"},{"location":"release-notes/changelog-translations/#807-march-2020","text":"Added specific translations for SIC (SWISS RTGS): between 202 and pacs.009 Added specific translations for SIC (SWISS RTGS): between 103 and pacs.008 In MX to MT: fixed extra slash when mapping clearing system codes or account numbers into party fields pacs.008 to 103 and pacs.009 to 202: field 20 now is mapped from CdtTrfTxInf/PmtId/TxId instead of GrpHdr/MsgId 103 to pacs.008: when present, the block 3 MUR is mapped into GrpHdr/MsgId instead of the reference field 20","title":"8.0.7 - March 2020"},{"location":"release-notes/changelog-translations/#806-february-2020","text":"Added translation from setr.006.001.04 redemption order confirmation to MT515 Added translation from setr.012.001.04 subscription order confirmation to MT515 Added translation from setr.016.001.04 order instruction status report to MT509 Added translation from setr.015.001.04 switch order confirmation into MT515 redemption and subscription leg messages Added translation between setr.017.001.04 order cancellation status report and MT509 (back and forth) Added a truncation report in translator classes and a '+' as last character of truncated data in the target message In MT to MX; header data is propagated to the AppHdr, including sender, receiver, reference, message type, and also PDE flag if present in the MT trailer In MX to MT; if the source MX contains an ISO header with the possible duplicate flag set to true, the created MT will have a PDE trailer flag MT103 to pacs.008 added mapping from 32A date into the group header settlement date Added a remove spaces transformation when mapping IBAN numbers from MT to MX","title":"8.0.6 - February 2020"},{"location":"release-notes/changelog-translations/#805-january-2019","text":"MT202 and MT202COV to MX, added mapping for sender correspondent field 53B location into group header instructing agent postal address (PW-225) MT202 and MT202COV to MX, removed the precondition requiring a mandatory party identifier in the sender correspondent field 53B","title":"8.0.5 - January 2019"},{"location":"release-notes/changelog-translations/#804-december-2019","text":"MT103 to MX, added mapping for sender correspondent field 53B location into group header instructing agent postal address (PW-225) MT103 to MX, removed the precondition requiring a mandatory party identifier in the sender correspondent field 53B (PW-225) MT103 to MX, removed the precondition requiring the same currency In semt to MT translations when Document/*/Id/Id is not found in MX the 20C:SEME is generated from AppHdr/BizMsgIdr Enhanced mapping of field 35B description of security when the ISIN is not present","title":"8.0.4 - December 2019"},{"location":"release-notes/changelog-translations/#803-september-2019","text":"Fixed mapping for field 36E in translations from MX to MT Added version 6, 7, 8 and 9 for translations between MT566 and seev.036 and seev.037","title":"8.0.3 - September 2019"},{"location":"release-notes/changelog-translations/#802-august-2019","text":"Added version 6, 7, 8 and 9 for translations between MT566 and seev.036 and seev.037 Fixed mapping for field 36E in translations from MX to MT Fixed bin/translator CLI app that stopped reading input on the first line break","title":"8.0.2 - August 2019"},{"location":"release-notes/changelog-translations/#801-july-2019","text":"Added a TranslatorFactory to enable automatic translator selection based on the source message Added a CLI to run automatic translation of files in the command line","title":"8.0.1 - July 2019"},{"location":"release-notes/changelog-translations/#800-may-2019","text":"JRE requirement increased to Java 1.8 SWIFT Standard release update 2019 (live 17 November 2019) Yearly revision of deprecation phase (see http://www.prowidesoftware.com/resources/deprecation-policy)","title":"8.0.0 - May 2019"},{"location":"release-notes/changelog-translations/#7108-march-2019","text":"Updated dependencies: apache-commons-lang 3.7 -> 3.8.1 Updated dependencies: apache-text 1.3 -> 1.6 Fixed obfuscation to keep directories in jar Fixed mapping of Field70 to EndToEndId","title":"7.10.8 - March 2019"},{"location":"release-notes/changelog-translations/#7107-january-2019","text":"Added alternative translate call in translation implementation classes to run the process without precondition checks Added translations between pacs.001.001.08 and MT101 Fixed translations for fields 50F and 77B Fixed precondition check for MX pain.001.001.03 to MT101 translation Fixed translation MX pain.001.001.03 to MT101 when multiple PmtInf and CdtTrfTxInf combinations are present","title":"7.10.7 - January 2019"},{"location":"release-notes/changelog-translations/#7100-april-2018","text":"SWIFT Standard release update 2018 JRE requirement increased to Java 1.7 Dependencies: updated apache commons-lang from 2.6 to 3.7 Yearly revision of deprecation phase (see http://www.prowidesoftware.com/resources/deprecation-policy) Added 103 and 103 STP to pacs.008.001.07 Added 202 and 202 COV to pacs.009.001.07 Added 900 to camt.054.001.07 Added 910 to camt.054.001.07 Added 940 to camt.053.001.07 Added 941 to camt.052.001.07 Added 942 to camt.052.001.07 Added 950 to camt.053.001.07 Added pacs.008.001.07 to 103 Added pacs.009.001.07 to 202 and 202 COV Added camt.052.001.07 to 941 and 942 Added camt.053.001.07 to 940 and 950 Added camt.054.001.07 to 900 and 910","title":"7.10.0 - April 2018"},{"location":"release-notes/changelog-translations/#798-april-2018","text":"MT to MX: fixed decimal separator in amount format to avoid locale dependant issues","title":"7.9.8 - April 2018"},{"location":"release-notes/changelog-translations/#797-january-2018","text":"Changes in the distribution package |-> Command line tools in the bic directory changed from jar files to wrapper scripts |-> Dependencies directory renamed to lib |-> Removed the BUILD id timestamp from the jar files * MT to MX: sender and receiver address from header blocks mapped according to message direction","title":"7.9.7 - January 2018"},{"location":"release-notes/changelog-translations/#796-december-2017","text":"Added camt.054.001.06 to MT900 and MT910 Added camt.053.001.06 to MT940 and MT950 Added camt.052.001.06 to MT941 and MT942 Added pacs.009.001.06 to MT202 and MT202 COV Added pacs.008.001.06 to MT103 Added xsys.003.001.01 to MT019 Added xsys.012.001.01 to MT019 Added MT300 to fxtr.014.001.03 Performance enhancement: comprehensive use of relative paths to optimize content selection. Performance enhancement: mappings migrated from docname to xml to avoid paths conversion in engine. MX to MT: Fixed generation of fields with letter option D (such as 52D) when only name & address was present as content Added plugable PathAdapter to customize MX paths used in translations","title":"7.9.6 - December 2017"},{"location":"release-notes/changelog-translations/#795-december-2017","text":"Performance enhancement: static methods for internal processing, reduced path conversion Individual precondition checks made private in favor of the global preconditionsChecks API","title":"7.9.5 - December 2017"},{"location":"release-notes/changelog-translations/#794-november-2017","text":"JRE requirement backported to Java 1.6 Added xsys.002.001.01 to MT012","title":"7.9.4 - November 2017"},{"location":"release-notes/changelog-translations/#793-october-2017","text":"Fixed MT548 to MX: fixed mappings for ProcessingStatus Fixed MT586 to MX: mappings with invalid amounts sequence B5c changed to B5b MT564 and 566 to MX: fixed mapping for currency component in field 92J Added MT568 to seev.031.002.06 Added MT564 to seev.031.002.06 and seev.039.002.06 Added MT019 to xsys.003.001.01 and xsys.012.001.01 Added MT012 to xsys.002.001.01 Added MT202 and MT202 COV to pacs.009.001.06 Added MT103 and MT103 STP to pacs.008.001.06 MT to MX: fixed mapping header for sender and receiver addresses in output (incoming) messages MT to MX: replaced fixed data in message creation date time with current ISO time stamp MT940 to camt.053 and MT941/MT942 to camt.052: fixed translation for field 86 repetitions into additional entries information MT101 to pain.001: fixed translation for field 23E repetitions MT900 and MT910 to camt.054: fixed translation for field 72 repetitions Added MT941 and MT942 to camt.052.001.06 Added MT940 and MT950 to camt.053.001.06 Added MT900 and MT910 to camt.054.001.06","title":"7.9.3 - October 2017"},{"location":"release-notes/changelog-translations/#792-august-2017","text":"semt.020.02.01 to MTs 508, 545, 547, 578: changed default amount XXX99999999999999 to locale currency and 0 sese.020.002.01 and semt.013.002.01 to MT524 fixed generation of LINK sequences seev, semt, sese, setr to MT5xx: fixed generation of field 36B with quantity of financial instrument semt.020.002.01 to MT578: changed translation to generate the alleged instruction indicator (:22H::PAYM) in sequence B with codeword FREE instead of APMT to be compliant with MT semantic 283 pain.001.001.03 to MT101: fixed mapping for multiline field 77B and fixed MX paths when checking the available payment information instances setr.006.002.01 and setr.012.002.01 to MT515: fixed mapping for multiline field 70C semt and sese to MTs 544, 545, 546, 547 and 548: added link sequence with RELA to be compliant with MT semantic rules 73 semt.020.002.01 to MTs 535, 536, 537, 538 and 586: changed translations to set Activity Flag (field :17B:ACTI) to 'N' to be compliant with MT semantic rules 256, 266 and 267 semt.020.002.01 to MT508 and sese.020.002.01 to 524: changed translations to be compliant with MT semantic rule 281 MX to MT: fixed collapsing data in output MT, due to bug in handling repeat predicates from MX path MX to MT: fixed generic bug when creating fieldset with multiple letter options MX to MT: general mappings fixes for MX categories seev, semt, sese and setr Generic fix for proper handling of repetitive fields/elements in target message MX to MT: fixed bug when creating fieldset with multiple letter options MX to MT: fixed mappings translations for seev, semt, sese and setr","title":"7.9.2 - August 2017"},{"location":"release-notes/changelog-translations/#79-may-2017","text":"SWIFT Standard release update 2017 (live 19 November 2017 for MT and 18 November for MX) Removed false positive warning for invalid namespace in header when the header was actually empty","title":"7.9 - May 2017"},{"location":"release-notes/changelog-translations/#789-may-2017","text":"Yearly revision of deprecation phase (see http://www.prowidesoftware.com/resources/deprecation-policy)","title":"7.8.9 - May 2017"},{"location":"release-notes/changelog-translations/#783-jul-2016","text":"If GrpHdr is present when converting from MX to MT, header BICs are set from it Internal migration from MxNode to XmlNode from SDK","title":"7.8.3 - Jul 2016"},{"location":"release-notes/changelog-validation/","text":"Prowide Integrator Validation - CHANGELOG 9.2.42 - September 2022 Added support for MUG validations (CLSB and AU/PDS) 9.2.41 - September 2022 MT structure validation: enhanced report of missing required fields, adding the path of sequences when applicable MT structure validation: enhanced report of unexpected fields, when the possible cause is the fields ordering 9.2.40 - August 2022 MT structure validation refactor to decommission the need for the Rhino dependency 9.2.39 - August 2022 (PW-1015) Added validation for submessage types 700, 701 and 774 (SCORE) 9.2.38 - August 2022 (PW-1007) Changed the AppHdr message definition against Document namespace validation to be more flexible, allowing subtypes such as \"CORE\" 9.2.37 - July 2022 Implemented cross-element rules for pacs.004.001.10 and 11 Implemented cross-element rules for pain.001.001.10 and 11 Implemented cross-element rules for pain.002.001.10, 11 and 12 Implemented cross-element rules for camt.029.001.10 and 11 9.2.36 - July 2022 Added internal loops API to MTs: 110, 201, 203, 210, 410, 412, 420, 422, 450, 456, 604, 605, 801, 920, 973 9.2.35 - July 2022 (PW-968) Field 72: fixed validation of optional text after INSTR codes, that cannot be a complete set of blanks 9.2.34 - June 2022 (PW-963) Fixes message length validation rule to compute also CRLF characters (PW-867) Enhanced validation of party fields starting with /C/ or /D/ to avoid false negative errors on /D /C prefixes in the account Implemented cross-element rules for newer versions of camt.052 Implemented cross-element rules for newer versions of camt.053 Implemented cross-element rules for newer versions of camt.054 Implemented cross-element rules for newer versions of camt.056 Implemented cross-element rules for newer versions of camt.057 Implemented cross-element rules for newer versions of camt.060 Implemented cross-element rules for newer versions of pacs.010 9.2.33 - June 2022 Implemented cross-element rules for: Pacs.008 v9 & v10 (standard and STP), pacs.009 v9 & v10 MT semantic validations minor fixes and enhancements 9.2.32 - May 2022 (PW-931) Added a field check for unexpected slash separator, in fields having an optional second component separated by slash 9.2.31 - May 2022 (PW-813) Internal enhancement to fix CVE Deprecation API review 9.2.30 - May 2022 MT semantic rules review and minor fixes MX cross-element checks review and enhancements 9.2.29 - May 2022 MX cross-element checks review and enhancements 9.2.28 - April 2022 Fixed MX cross-element checks Changed the ValidationResult to have the valid flag as transient field, set dynamically depending on the problems list size Added missing validations for CBPR+ pacs.009 9.2.27 - April 2022 CBPR+ UG validation fixes 9.2.26 - March 2022 (PW-882) SCORE 798_760 fixed validation of sequence B which is optional if purpose of message is ICCO or ISCO MT104: Fixed validation problem description in semantic rule 96 9.2.25 - March 2022 CBPR+ validation: apply schema from Document namespace when AppHdr message type does not match pacs.002.001.10: Implemented cross-element rules, and CBPR+ UG rules pain.002.001.10: Implemented cross-element rules, and CBPR+ UG rules 9.2.24 - March 2022 pacs.010.001.03: Implemented cross-element rules, and CBPR+ UG rules camt.060.001.05: Implemented cross-element rules, and CBPR+ UG rules pain.001.001.09: Implemented cross-element rules, and CBPR+ UG rules 9.2.23 - March 2022 Fixed error description in MX validation (cross element checks and CBPR+ rules) MX cross element validation fixes (X00420) 9.2.22 - March 2022 Enhanced the CBPR+ AppHdr validation with constraints from CBPR+ restricted BAH v2 schema 9.2.21 - March 2022 (PW-861) Fixed validation of fields 23X, 21H, 77B (MT734) and 98K that was too strict; slash character is allowed in the component using x character set 9.2.20 - February 2022 (PW-856) GPI: Fixed misleading error description in field 111 validation (PW-835) GPI: Field 111 is optional in MT199 even for GPI members Fixed inconsistency in the ValidationResult valid flag returned by the CbprValidationEngine Fixed MX cross-element validations when too elements cannot be present together, but may both be absent 9.2.19 - February 2022 Updated the default ISO 20022 external code set XSD to the February 2022 update camt.029.001.09: Implemented cross-element rules, and CBPR+ UG rules camt.052.001.08: Implemented cross-element rules, and CBPR+ UG rules camt.053._001.08: Implemented cross-element rules, and CBPR+ UG rules camt.056.001.08: Implemented cross-element rules, and CBPR+ UG rules camt.057.001.06: Implemented cross-element rules, and CBPR+ UG rules pacs.002.001.10: Implemented cross-element rules, and CBPR+ UG rules pacs.004.001.09: Implemented cross-element rules, and CBPR+ UG rules Completed UG rules for CBPR+ pacs.008 and pacs.009 variants (COV, STP, ADV) 9.2.18 - February 2022 (PW-837) In MT message length validation, remove line CRLF when computing the message size 9.2.17 - January 2022 (PW-835) Fixed validation of GPI field 111 (block3) expected values per message type 9.2.16 - January 2022 (PW-833) Fixed mandatory field 77E in MTn98 Added UG implementation for CBPR+ pacs.008 STP and pacs.009 ADV/COV 9.2.15 - January 2022 SCORE messages semantic validations review 9.2.14 - January 2022 (PW-819-820) SCORE message MT798_760 validation fixes Added UG implementation for CBPR+ camt.054 Implemented cross-element rules for camt.054.001.08 Added validation for MX match between AppHdr message identifier and Document namespace 9.2.13 - January 2022 (PW-815) Fixed validation of field 12H (SCORE) where narrative is optional MT530 validation: Fixed semantic 237 rule, where subsequence C1 is repetitive Added UG implementation for CBPR+ pacs.009 Implemented cross-element rules for pacs.009.001.08 9.2.12 - December 2021 Added a specific CbprValidationEngine class to validate CBPR+ messages Added UG implementation for CBPR+ pacs.008 Implemented cross-element rules for pacs.008.001.08 Added com.prowidesoftware.integrator.validation as automatic module name in the MANIFEST for JPMS support 9.2.11 - December 2021 (PW-799) fixed validation of semantic rule 199 in MT564 9.2.10 - December 2021 (PW-780) Added ValidationConfiguration#setGpiMember to override the general static SdkConfiguration#setGpiMember (PW-764) Fixed error description in field 119 (block 3) validation 9.2.9 - November 2021 (PW-772) Enable empty lines in MT568 field 70F as it is exceptionally allowed in the ISO 15022 usage guidelines In Mx IBAN validation added specific error code D00003 9.2.8 - November 2021 (PW-764) Reviewed validation of field 119 (block 3) (PW-703) Clearer validation results for MT block 2 with invalid identifier Added IBAN validation (including local account format) for MX elements containing IBAN numbers Added optional IBAN validation for MT messages, for specific fields where IBAN validation is explicitly requested by configuration MX validation: renamed proprietary error codes for invalid currency and country codes by standard codes D00004 and D00005 Fixed validation of letter options in B/98a 9.2.7 - October 2021 Added validation of block 2 Output (only Input was validated before, while Output was ignored) Fixed validation of value for Field 26A ( ) 9.2.6 - October 2021 (PW-705) Added validation of mandatory CHK in block 5 when the trailer block is present (PW-703) More verbose MT headers validation (PW-677) MT670, MT671: fixed implementation of semantic check 112 (D12) 9.2.4 - September 2021 (PW-664) Parser enhancement to detect LF before block identifier as validation problem (not exception) 9.2.3 - August 2021 Added german translation for validation problems 9.2.2 - August 2021 (PW-599) MT564: Minor scheme fix, 92a TAXR and WITL can be repeated in CASHMOVE (E2) MT548: Minor scheme fix, added letter option \"C\" in field \"98C:SCTS\" in sequence \"C1a1B1\" (PW-578) Fixed SAX logging with misleading parse errors 9.2.1 - June 2021 (PW-536) Replaced deprecated API in the MX validation (PW-536) Fixed misleading typo in semantic E94 error description (PW-517) Removed the actual licensed BICs information from the unlicensed error description in the validator 9.2.0 - May 2021 SWIFT Standard release update 2021 (live 21 November 2021) Yearly revision of deprecation phase (see http://www.prowidesoftware.com/resources/deprecation-policy) More accurate structure problems reporting, with a customizable lookahead for sequence resynchronization after a field partial match Enhanced unexpected fields problem reporting, in some situations it used to trigger also misleading errors about the unexpected field repetitions 9.1.16 - April 2021 Added support for ISO 20022 external code set validations Externalized the validation engine configuration into a ValidationConfiguration class (PW-517) Removed the actual licensed BICs information from the unlicensed error description in the validator 9.1.15 - April 2021 (PW-460) Divided the internal schemas package into packages by category to allow trimming the jar by use 9.1.14 - April 2021 (PW-500) Fixed validation of qualifiers when the component is optional Fixed qualifier error reporting in fields 41A and 41D Replaced generic error code KNN with specific code for each field, such as K41, K23, K92 9.1.13 - April 2021 (PW-508) Fixed validator pattern in field 98K 9.1.12 - April 2021 Enhanced MT structure error detection and reporting (missing and unexpected fields) Fixed validation of fields 12 and 27A in MT SCORE messages 9.1.11 - March 2021 Added semantic validation for available SCORE messages (PW-499) Fixed schemes for MT513, MT564 and MT566: invalid qualifier in field 69D 9.1.10 - March 2021 (PW-494) Fixed schemes for MT565 (sequence B can be repeated up to 1) and MT568 (sequence B is optional, not mandatory) 9.1.9 - March 2021 (PW-493) Fixed scheme for MT671, missing :22H::PRCD//PREF in Other Details sequence Added mtInSequenceResyncLookAhead parameter in the ValidationEngine#Configuration to control the error reporting accuracy Added mtEnhancedRepetitionProblemReportingMode parameter in the ValidationEngine#Configuration to switch off redundant field repetition related errors Removed T13 rule from MTn98 proprietary messages validation (only kept for n92, n95 and n96) Changed default toString in ValidationProblem to use the human-friendly error description 9.1.8 - December 2020 (PW-424) Fixed validation of mandatory field 111 (PW-398) Added check for expected values in field 111 (U14 error code) 9.1.7 - December 2020 License check review 9.1.6 - November 2020 Field validation changes in 83J, 86J, 50F and 59F are now parked until SRU2021 (only cat 5 changes are in force in SRU2020) 9.1.5 - November 2020 (PW-413) 564 added qualifier option SRDC in field 17B in sequence D 530 added qualifiers options BYIY and BDEF in field 22 in sequence B 530 added optional fields 90[A,B] and 19A BCAM in sequence C 565 minor fix in conditional qualifier check in field 92K in sequence C 9.1.4 - September 2020 In MTs 300, 305, 306, 320, 330, 340, 341 and 350 added a missing network rule validating the reference number in fields 22 and 22C against the message rate field Added internal BIC validation skip for SWIFT special BIC codes such as: TRCKCHZZ (GPI) and TRGTXEPM (Target) Fixed semantic check 254 to handle 23E field repetitions properly 9.1.3 - September 2020 Minor fix in semantic 204, 209 and 210 checks when the party identifier is only slashes 9.1.2 - August 2020 (PW-325) Added ValidationEngine.Configuration#addRegisteredBic to programmatically register valid BICs not available in the embedded BIC directory (PW-325) Enhanced de BIC directory validation to avoid false error for Test & Training BIC codes (query will match any equivalent production BIC) 9.1.1 - Jun 2020 Removed a false positive deprecation warning when configuring ignored validation codes 9.1.0 - May 2020 SWIFT Standard release update 2020 (live 22 November 2020) Yearly revision of deprecation phase (see http://www.prowidesoftware.com/resources/deprecation-policy) 9.0.2 - May 2020 Added validation of ISO business header version 2 (head.001.001.02) when found in a message Added a configuration in the ValidationEngine.Configuration to optionally disable ERI validation Added validation for ERI in fields 61, 72, 77A, 79 and 86, when ERI is present and depending on the message type Fixed amount validation when the whole number part is not present 9.0.1 - May 2020 Fixed validation of field 72 in MT760 9.0.0 - May 2020 Validation module extracted to its own jar in the distribution, with its own version from now on 8.0.9 - May 2020 Fixed scheme for 564, typo in MET2 and MET3 qualifiers 8.0.8 - April 2020 Fixed validation of field 50F party line, was accepting up to 34 characters instead of the 35 allowed limit for the field Enabled presence of field 121 in all payment messages (category 1 and 2) Added support to validate restricted ISO20022 for CBPR+ (PW-259) Fixed semantic 157 check, when amount is zero with decimals Fixed schemes for MT537 adn 458, in sequence PENDET required field is 99A and not 99B Enhanced error reporting for semantic checks: 41, 131, 132, 146 and 147 8.0.7 - March 2020 Added support to validate restricted ISO20022 for SIC (Swiss RTGS) MT548: Fixed repetitions of field 94 in sequence C1a1A1 MT537: Fixed structure for D1a1A1 MT537: Fixed sequence B2b where field 98 option EXSE is mandatory Fixed semantic check 256 affecting validation for message 535 and 536 8.0.6 - February 2020 Fixed T96 check in SB-LC function (affecting fields 22 and 22C) where alphanumeric order must give precedence to letters over numbers 8.0.4 - December 2019 Fixed resource bundle for MX messages when retrieved for specific locale Added convenient toJson with preformatted validaiton problem messages, to the ValidationResult DTO Fixed detection of invalid trailing empty lines in MT field values 8.0.3 - September 2019 (PW-185) Replaced custom error codes with SWIFT standard FIN error codes such as Hnn and Tnn Added new validation entry points for MX messages to use specific XSD schemas (useful to validate SEPA messages) Added missing field validations: T14, T49, T70, T75, T88 Fixed validation of conditional qualifier in field 93C in MT566 8.0.2 - August 2019 Fixed validation of conditional qualifier in field 93C in MT566 Fixed bin/validator CLI app that stopped reading input on the first line break Fixed occasional BIC truncation validating large MX messages 8.0.1 - July 2019 Enhanced the configuration to enable ignoring validation problems by specific key, by name or by type Fixed validation of BIC codes in MX when the BIC directory is disabled Fixed BIC not registered error reporting when validating MX messages Fixed semantic check 196 affecting MTs 362 8.0.0 - May 2019 JRE requirement increased to Java 1.8 SWIFT Standard release update 2019 (live 17 November 2019) Yearly revision of deprecation phase (see http://www.prowidesoftware.com/resources/deprecation-policy) Fixed semantic check 157 affecting MTs 320, 330 adn 620 7.10.9 - May 2019 Fixed SB-LC validation, affecting fields 22 and 22C (common reference); added the missing alphabetic sort check in the parties code and location Fixed lines count check in multiline fields with optional party identifier in first line (ex: 58D) 7.10.8 - March 2019 Updated dependencies: apache-commons-lang 3.7 -> 3.8.1 Updated dependencies: apache-text 1.3 -> 1.6 Fixed obfuscation to keep directories in jar 7.10.7 - January 2019 Added missing path when reporting invalid country code in MX Fixed duplicated error reporting when validating MX messages Added the XsdRegistry interface to allow overwriting the default schemas when validating MX messages Enhanced the MX error reporting to include the repetitive element index in the validation problem xPath Added support for custom MX validation rules Enhanced validation and error reporting for fields 50F and 59F Minor performance enhancement for validation process with exit on first error Added support in MX validation to optionally ignore XSD ERROR 7.10.6 - November 2018 Added ISO country code validation for CountryCode elements in MX messages Fixed GPI validation to NAK non-GPI messages with fields 121 or 111 Fixed GPI validation to NAK GPI-message with field 111 when the institution is not a GPI member Fixed error description for structure validation problem TOO_BIG Enabled the UETR validation for any message type, it is still mandatory for GPI messages only though (PW-103) Activated the UETR format validation also for output messages (received from SWIFT) Fixed semantic validation 201 affecting MT564 7.10.4 - September 2018 Bugfix validating empty first line in fields value Enhanced error reporting in BIC validation, including details of the BIC subfield where the validation problem is found Enhanced the BIC validation checking the country code within the BIC is a valid ISO country MX: Added BIC validation using the BIC directory (optional by configuration) for elements containing BIC codes MT: Added BIC validation using the BIC directory (optional by configuration) for the sender and receiver address in the headers 7.10.3 - July 2018 Added a specific PARSE_ERROR validation problem to report when the message has an invalid block structure Prevention of IllegalArgumentException when the hyphen is missing in the closing bracket of block 4 Added MX currency validation using ISO currencies from ISOUtils 7.10.2 - July 2018 Fixed spanish description of semantic E45 check Fixed component size check in validation of Field 59F 7.10.1 - May 2018 Added field 434 in block 3 validation 7.10.0 - April 2018 SWIFT Standard release update 2018 JRE requirement increased to Java 1.7 Dependencies: updated apache commons-lang from 2.6 to 3.7 Yearly revision of deprecation phase (see http://www.prowidesoftware.com/resources/deprecation-policy) 7.9.8 - April 2018 Enhanced validation of IBAN numbers verifying the check digits and the custom account number per country (BBAN) MT306: message scheme fix, added the missing 57 ADJ optional field at the end of sequence L Minor fixes in semantic validation rule 40 and rule 122 7.9.7 - January 2018 Changes in the distribution package: Command line tools in the bic directory changed from jar files to wrapper scripts Dependencies directory renamed to lib Removed the BUILD id timestamp from the jar files Removed the BaseTestCase class from the public API to avoid Junit dependency Added ValidationProblem#printout to generate a human friendly printout of a validation problem list Updated dependency: org.mozilla:rhino:1.7R4 -> org.mozilla:rhino:1.7.7.2 7.9.6 - December 2017 Minor fix in semantic27 affecting malformed MT942 7.9.4 - November 2017 JRE requirement backported to Java 1.6 Fixed validation for field 77J: 50x[\u2019CRLF\u201950x]0-69 7.9.3 - October 2017 Added support to validate MX system messages (xsys category) Fixed currency validation (T52) in fields 60F, 62F, 64, 65 and 33B 7.9.2 - August 2017 Fixed T26 validation in fields 13B, 22W, 94B, 95a and 98K MT537 fixed qualifier validation for field 98a in transaction details sequence (C2) MT524 fixed implementation for rule 208 when several LINK sequences are present in the message MT545 and MT547: fixed validation for field set 98a in Trade Details sequence (B), qualifier ESET is mandatory while SETT is optional Fixed error code and message throw by semantic rule 267 Added more details when reporting semantic rule 266 errors. Added IsoUtils singleton to allow customization and exceptions for currency and country codes validation Currency and Country codes validation is now implemented using data from Java Currency and Locale Validation of maximum fraction digits per currency (semantic rule 3) is now implemented using data from Java Currency 7.9.1 - June 2017 Fixed semantic 167 for MT103 plan (not STP and not REMIT) MT801 first loop can be repeated Fixed semantic 282 affecting MT535 Fixed scheme for MT940 field 60[F,M] is now required 7.9 - May 2017 SWIFT Standard release update 2017 (live 19 November 2017 for MT and 18 November for MX) MT536: fixed false positive semantic 252 check, fixed qualifiers check in field 98a (sequence B1a2) MT575: transaction details sequence C2, field 98 with SETT or TRAD set as optional MT537: fixed false positive semantic 285 check MT576: additional information sequence C set as optional Fixed semantic rule 259 affecting MT517 link sequence check MT569: fixed incorrect definitions in sequence C1a1 (valuation details) MT506, 569 and 575: field 28E mandatory MT513; sequence A added TRAD qualifier to field 22F, sequence B1 (partial fill details) fields 98 and 94 are optional MT513 and 514: fixed letter option from H to F in field 22F:SETR in settlement details 7.8.9 - May 2017 Yearly revision of deprecation phase (see http://www.prowidesoftware.com/resources/deprecation-policy) Fixed validation of fields 72 and 79 of a Rejected/Return message Renamed FieldProblem.REJT_RETN_0n to more specific errors: REJT_RETN_LINE_n, REJT_RETN_REASON_CODE, REJT_RETN_MREF, REJT_RETN_TREF, REJT_RETN_CHGS, REJT_RETN_TEXT Enhanced validation of user block 3, checking all fields are expected for the message type and checking fields order. Fixed NPE in semantic 119 affecting MTs 102 and 103 STP when IBAN component was not present Added a common type ValidationProblemKey implemented by all problem key enumerations Fixed false positive error validating field 59F when multiple address lines (line label 2) are defined Fixed false positive restriction field 37a second component Fixed scheme for MT505, added missing field 98A:AGRE in sequence A1 Enhanced MX validation to allow MX messages with bank-to-bank namespace declaration Fixed false positive semantic 293 validation for MT507 when sequence B1a1 was not present Fixed letter option in scheme for MT506, sequence D (Collateral Details) field 19 A -> B Fixed qualifier in scheme for MT506, sequence D (Collateral Details) DEAL-> COLL Fixed scheme for MT506, sequence B (Summary) field 95 is mandatory and field 19B only mandatory with qualifier COVA Fixed Semantic 82 implementation affecting MT104 and MT107 Fixed false positive case in Semantic 75, affecting MT104 Fixed validation of leading characters, colon (':') not allowed in second and subsequent lines except for fields 77E and 77T Fixed semantic 103 affecting MT535 7.8.8 - March 2017 Added support for nested Document elements when validating MX messages Removed invalid fields following linkages in GENL sequence Cleaner log in semantic rule 3 validation 7.8.7 - December 2016 Added check for validation flag (STP, REMIT, COV) in user header block Fixed missing semantic associations to MTs 700, 705, 707, 710, 720, 730, 732, 734, 740, 742, 747, 750, 752, 754, 756, 768, 768, 769, 800, 801, 802, 824 MT518 fixed fieldset for Field 70 MT330 fixed qualifier in Field 22 MT513 and MT514 Field 11 moved outside previous fieldset MT541 to MT547 Field 90[A,B] changed to fieldset. MT564 fixed fieldset items in Field93[B,C] MT565 to MT567 Sequence D, fixed field 13 MT609 and MT798_763 fixed qualifiers in Field 29 7.8.6 - November 2016 JRE requirement increased to Java 1.7 (only for Integrator SDK and modules, Core still works on 1.5) semantic 175 minnor fix affecting MT104 and MT107 when multiple sequence B are present 7.8.5 - October 2016 Minor fixes in semantic validations: 206 (used in MTs: 103, 564, 566), 279 (used in MTs: 549, 564, 565) MT564: Minor fixes in semantic validations: 199, 211, 224 MT564: field 93 UNBA instead of UMBA MT564: CAOPT sequence, field 92 INTP, missing conditional qualifier NILP MT564: SECMOVE sequence, field 90 PRPP, missing letter option K MT564: SECMOVE sequence, field 92 NEWO, missing letter option M MT564: CASHMOVE sequence, field 92 ESOF, missing letter options F and M MT564: CASHMOVE sequence, field 92 TXIN, missing letter option F MT564: CASHMOVE sequence, field 92 WITL, missing letter option R and its conditional qualifier eval MT564: fixed field 92J subfield ACTU INDI validation MT565: CAINST sequence, field 90 OFFR, missing letter option L MT566: CADETL sequence, field 92 BIDI missing letter option P MT566:CACONF sequence, field 69, removed invalid letter option J MT566: Fixed qualifier in field 13a to allow UNS MT566:SECMOVE sequence, field 90 OFFR, missing letter option L MT566:SECMOVE sequence, field 90 PRPP, missing letter option K MT566:SECMOVE sequence, field 92 NEWO, missing letter option M MT566:SECMOVE sequence, field 92 TAXC, removed invalid letter option K MT566:CASHMOVE sequence, field 92 TXIN, missing letter option F MT566:CASHMOVE sequence, field 90 PRPP, missing letter option K MT566:fixed field 92J subfield ACTU INDI validation MT567: CADETL sequence, field 35B, removed invalid qualifier check SAFE MT567: field19 changed to fieldset 7.8.4 - Oct 2016 Fixed JS expression in schemes for 564, 565, 566 and 620 Important enhancement in MX validation problem reporting, including full XPATH, line and column of errors. Fixed semantic 291 (affecting 540, 541, 544, 545) Fixed semantic 112 (affecting MTs 670 and 671) Fixed semantic 113 (affecting MTs 380, 381, 503, 504, 506, 670, 671) 7.8.3 - Jul 2016 Added support for changed currency in Belorussia from 974 (BYR) to 933 (BYN). Fixed semantic 210 affecting messages 103, 102, 104 and 107 7.8.2 - Jul 2016 Fixed schemes: definition of field 12A in FIA subsequences of MTs 54x Semantic 283 bugfix (used in MTs 307,503,504,505,506,536,537,548,578,586) 2016 June Added field repetition validation in block 3 2016 April Added detection of extra data in message content or blocks when validating a message 2016 February Fixed validation of min and max repetition in fieldsets, when the attributes are set only in the items 2016 January Fixed scheme 307, typo in semantic rules attribute Added API in SchemeField to retrieve qualifiers information from parsed scripting expressions 2015 December Fixed schemes for 600, 601, 604, 605, 606, 607, 608, 609, 620, wrong qualifier for field 26C 2015 November Fixed validation of repetitive sequence in MT940 2015 October Fixed validation for fields 129, 12A, 13B, 20E, 23A, 26N, 26P, 92C and 94D; removed restriction on amount of slashes because components use charset x where slash is allowed Fixed validation for fields 14G, 27A, 27, 28[D,E], 29[L,N], 38[G,H], 39[A,P], 68C, 69C, 70[C,D,E,G], 90F, 92R, 93B, 94E, 94G 95[Q,T,U,V] and 98F; added restriction on amount of slashes 2015 September Fixed scheme for MT567, removed invalid 25D field in sequence A 2015 August Fixed qualifiers validation scripting in xml schemas for MTs: 306, 360, 361, 362, 364, 365, 500, 501, 535, 564, 565, 566 Enhanced validation patterns naming for better consistency 2015 April Enhanced structure validation error reporting, when JS expressions are used to check conditional qualifiers. The new scheme validation rule generates a proper message indicating the expected and found qualifiers instead of a generic fail expression error. 2015 March Bugfix Field validations, new restriction, start of line character cannot be '-'. Bugfix MT535 subsequence B1a, it can be at most one and the scheme was allowing multiple repetitions 2015 February ValidationEngine enhancement in the default scheme to use, detecting automatically if a 102/103 is STP or if a 202/205 is COV Fixed validation for field 22S, was requiring a 35 characters fixed length for component 2, while the correct validation is up to 35 characters (not fixed) Added more restrictive party field validation when a slash is followed by a blank content, affecting fields 42a, 50a, 51a, 52a, 53a, 54a, 55a, 56a, 57a, 58a, 59a, 81a, 82a 83a, 84a, 85a, 86a, 87a, 88a, 89a, 91a, 96a SchemeValidationRule version 2: new version of structure validation for MT, with several enhancements and bug fixes over the previous version. Important performance enhancement in MT structure validation (30% in average, reaching a 60% for some message structures). Important enhancement in structure error reporting, errors are now more specific and detailed with more details. Better error localization, avoiding duplicated error field validation in some situations. Improvement in scheme's scripting validations, isolating script compile errors from unsatisfied logic conditions. Fixed scheme validation for MT300 that was throwing a false problems for some combination of subsequences E, E1 and E1a. 2015 January RuleManager: fixed loading of field rules, that was skipping incorrectly field validation to fields derived from fieldsets 2014 December Better error message format in BaseTestCase Fixed error message for E73 Review of semantic rules 85,86,198 ValidationEngine: Added API to validate from AbstractMT ValidationEngine: Added exclusive API to use when validating messages in strings or files (with swift format, not parsed objects) therefore detecting more error conditions AbstractTagValidationRule: Fixed validation that had a bug in special conditions, Output messages (received from swift) and with sender and receiver within the same institution 2014 November Bugfix in schemas 515, 536 Enhanced MT expression validation reporting, diferenciating invalid expressions, from runtime errors or failed expression evaluation. Bugfix. Fixed expressions in schemes xml for MT576 and MT568, replacing deprecated function call addQuaifiers by qualifier Bugfix. Added validation of T13 rule to MTs n98 2014 September Bugfix. Missing resource bundle for invalid BIC validation problem Added addVariable method to ValidationProblem Bugfix. Fields 95Q and 70C were restricted to maximum 3 lines, while 4 lines are compliant as well. Bugfix. Fixed XML for MT537, field 22H conditional qualifier STAN changed to STAT 2014 July Enhanced structure validation incorporating special field exceptions and required code words (standard PIII Fields Chapter 4) directly into the xml schemes configurations. Affected MTs: 102 STP, 103, 103 STP, 300, 303, 304, 305, 306, 320, 340, 341, 350, 360, 361, 362, 364, 365, 600, 601, 620, 920, 973 Enhanced structure validation error messages to separate unexpected fields problems reporting, from field qualifier problems or expression evaluation problems Enhanced field validation to avoid repetitive checks for empty content and/or empty lines Bugfix. MT306 optional field 12G changed to 12D and added missing field class Bugfix. SchemeXmlReader to properly set fieldset items' qualifiers and letter options when inherited from container fieldset Bugfix. Added null controls to several semantic validations to prevent NPE that would previously arise when applying semantic checks to messages with specific invalid structures Bugfix. Fixed XML for MT540, field 90 changed to fieldset 90 to allow qualifier validation for items Review and code clean of semantic rule 24, 52 SRU 2014. Affected MTs: 300, 304, 305, 306, 340, 341, 360, 361, 380, 381, 502, 506, 508, 509, 513, 514, 515, 518, 527, 530, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 558, 564, 565, 566, 567, 568, 569, 575, 600, 601, 942 Added description and release attributes to Scheme Minor fix in MT300 sequences structure, B1 and B2 inside B, and named D's subsequence as D1 Bugfix. MT300 optional field 17A changed to optional field 77A (field number was wrong) Bugfix. MT514 fixed missing mandatory fields 36B and 35B between end of sequence B1 and start of sequence B2 Bugfix. MT515 fixed field 90[A,B] with qualifier DEAL at sequence C, changed from optional to mandatory (minRepetition was wrong) 2014 May Review and code clean of semantic rule 184 Review and code clean of semantic rule 176 Review and code clean of semantic rule 152, 153, 154 Performance enhancements: execution speed reduced by approx 71% measured in global test suite 2014 April Review and code clean of semantic rule 131, 253, 133, 135 Fixed semantic 116 rule incorrectly interpreting sequence C absence for MT306 2014 March MT564: Added missing option K to field 90 in sequence E2 cash movements Review and code clean of semantic rule 92, 95 Review and code clean of semantic rule 66, 67, 68 ,78, 84, 93 Review and code clean of semantic rule 61, 57, 58, 62 Added validation problems translation to Italian. Bugfix. Fixed invalid check for X in 8th position for logical terminals without A, B, C identifier Bugfix. Fixed Block1 validation, allowing Logical terminal without the A, B, C identifier (11 characters length) Bugfix. Field validation was not accepting 999 as a valid MT number (example field 11R) 2014 February Bugfix. Affected MTs:n92, n95, n96, n98. Fixed isolation of fields copied from original message from the fields of the message being validated Bugfix semantic rule 31 that was throwing false positives when field 79 was included in the appended original message's fields Initial addition of FieldFilter and FieldFilterUtils API Maintenance review of semantic rule 71 Review and code clean of semantic rule 211, 221, 262 Added API to BaseTestCase Review and code clean of semantic rule 209 Review and code clean of semantic rule 201, 202, 206 Bugfix. Affected MTs: 564. Fixed semantic rule 71 that was throwing IOB exceptions for some valid combinations of fields 93B Bugfix. Affected MTs: 568, 569, 574, 575, 576, 578, 586, 670, 671. Fixed xml schemes, changing the invalid scripting method conditionalQualifiers to conditionalQualifier Review and code clean of semantic rule 203, 206, 209, 221 Review and code clean of semantic rule 201, 202 Bugfix. Affected MTs: 305. Fixed false positive missing field errors when the message ends with nested optional subsequences with inner mandatory fields Review and code clean of semantic rule 192, 72, 199 Review and code clean of semantic rule 71 Review and code clean of semantic rules impacting MT305 Added a code generation tool that can be run from command line to create custom version of Field and MT classes Added a command line application to use the messages validation in standalone mode, validating messages from file system 2014 January Added validation rules for fields belonging to system messages (i.e. 451) Adding constants to Literals class to avoid usage of hardcoded strings and cleaner code with static imports Bugfix. Affected MTs: 207. Fixed maximum repetitions of sequence B from 1 to unlimited Maintenance(Review and performance updates) semantic rule #167, #54, #55 Maintenance(Review and performance updates) semantic rule #161 Maintenance(Review and performance updates) semantic rule #168, #246, #254 Added filter() to AbstractSemanticValidationRule Maintenance(Review and performance updates) semantic rule #162, #166 Added BaseTestCase.assertValid(String) Fixed issue in semantic rule 154 which did not consider properly B sequences Maintenance(Review and performance updates) semantic rule #160, #164 2014-01-15 Fixed issue in semantic rule 77 affecting MTs 730, 768 and 769 2013 October Maintenance(Review and performance updates) semantic rule #44, #45, #46, $47, #48, #51, #53 Maintenance(Review and performance updates) semantic rule #106, #108, #30, #40, #42 Review and performance updates on S102 Refactored max msg length validation to use enum in structure problem for reporting errors Review and performance updates on S79 2013 September SRU 2013 update Fixed incomplete validation for field 77E 2013 March Bugfix: fixed typo at field 22H in MT380, BUYI->BUY1 2012 June Added API to specify locale on ValidationProblem.getMessage method","title":"Prowide Integrator Validation"},{"location":"release-notes/changelog-validation/#prowide-integrator-validation-changelog","text":"","title":"Prowide Integrator Validation - CHANGELOG"},{"location":"release-notes/changelog-validation/#9242-september-2022","text":"Added support for MUG validations (CLSB and AU/PDS)","title":"9.2.42 - September 2022"},{"location":"release-notes/changelog-validation/#9241-september-2022","text":"MT structure validation: enhanced report of missing required fields, adding the path of sequences when applicable MT structure validation: enhanced report of unexpected fields, when the possible cause is the fields ordering","title":"9.2.41 - September 2022"},{"location":"release-notes/changelog-validation/#9240-august-2022","text":"MT structure validation refactor to decommission the need for the Rhino dependency","title":"9.2.40 - August 2022"},{"location":"release-notes/changelog-validation/#9239-august-2022","text":"(PW-1015) Added validation for submessage types 700, 701 and 774 (SCORE)","title":"9.2.39 - August 2022"},{"location":"release-notes/changelog-validation/#9238-august-2022","text":"(PW-1007) Changed the AppHdr message definition against Document namespace validation to be more flexible, allowing subtypes such as \"CORE\"","title":"9.2.38 - August 2022"},{"location":"release-notes/changelog-validation/#9237-july-2022","text":"Implemented cross-element rules for pacs.004.001.10 and 11 Implemented cross-element rules for pain.001.001.10 and 11 Implemented cross-element rules for pain.002.001.10, 11 and 12 Implemented cross-element rules for camt.029.001.10 and 11","title":"9.2.37 - July 2022"},{"location":"release-notes/changelog-validation/#9236-july-2022","text":"Added internal loops API to MTs: 110, 201, 203, 210, 410, 412, 420, 422, 450, 456, 604, 605, 801, 920, 973","title":"9.2.36 - July 2022"},{"location":"release-notes/changelog-validation/#9235-july-2022","text":"(PW-968) Field 72: fixed validation of optional text after INSTR codes, that cannot be a complete set of blanks","title":"9.2.35 - July 2022"},{"location":"release-notes/changelog-validation/#9234-june-2022","text":"(PW-963) Fixes message length validation rule to compute also CRLF characters (PW-867) Enhanced validation of party fields starting with /C/ or /D/ to avoid false negative errors on /D /C prefixes in the account Implemented cross-element rules for newer versions of camt.052 Implemented cross-element rules for newer versions of camt.053 Implemented cross-element rules for newer versions of camt.054 Implemented cross-element rules for newer versions of camt.056 Implemented cross-element rules for newer versions of camt.057 Implemented cross-element rules for newer versions of camt.060 Implemented cross-element rules for newer versions of pacs.010","title":"9.2.34 - June 2022"},{"location":"release-notes/changelog-validation/#9233-june-2022","text":"Implemented cross-element rules for: Pacs.008 v9 & v10 (standard and STP), pacs.009 v9 & v10 MT semantic validations minor fixes and enhancements","title":"9.2.33 - June 2022"},{"location":"release-notes/changelog-validation/#9232-may-2022","text":"(PW-931) Added a field check for unexpected slash separator, in fields having an optional second component separated by slash","title":"9.2.32 - May 2022"},{"location":"release-notes/changelog-validation/#9231-may-2022","text":"(PW-813) Internal enhancement to fix CVE Deprecation API review","title":"9.2.31 - May 2022"},{"location":"release-notes/changelog-validation/#9230-may-2022","text":"MT semantic rules review and minor fixes MX cross-element checks review and enhancements","title":"9.2.30 - May 2022"},{"location":"release-notes/changelog-validation/#9229-may-2022","text":"MX cross-element checks review and enhancements","title":"9.2.29 - May 2022"},{"location":"release-notes/changelog-validation/#9228-april-2022","text":"Fixed MX cross-element checks Changed the ValidationResult to have the valid flag as transient field, set dynamically depending on the problems list size Added missing validations for CBPR+ pacs.009","title":"9.2.28 - April 2022"},{"location":"release-notes/changelog-validation/#9227-april-2022","text":"CBPR+ UG validation fixes","title":"9.2.27 - April 2022"},{"location":"release-notes/changelog-validation/#9226-march-2022","text":"(PW-882) SCORE 798_760 fixed validation of sequence B which is optional if purpose of message is ICCO or ISCO MT104: Fixed validation problem description in semantic rule 96","title":"9.2.26 - March 2022"},{"location":"release-notes/changelog-validation/#9225-march-2022","text":"CBPR+ validation: apply schema from Document namespace when AppHdr message type does not match pacs.002.001.10: Implemented cross-element rules, and CBPR+ UG rules pain.002.001.10: Implemented cross-element rules, and CBPR+ UG rules","title":"9.2.25 - March 2022"},{"location":"release-notes/changelog-validation/#9224-march-2022","text":"pacs.010.001.03: Implemented cross-element rules, and CBPR+ UG rules camt.060.001.05: Implemented cross-element rules, and CBPR+ UG rules pain.001.001.09: Implemented cross-element rules, and CBPR+ UG rules","title":"9.2.24 - March 2022"},{"location":"release-notes/changelog-validation/#9223-march-2022","text":"Fixed error description in MX validation (cross element checks and CBPR+ rules) MX cross element validation fixes (X00420)","title":"9.2.23 - March 2022"},{"location":"release-notes/changelog-validation/#9222-march-2022","text":"Enhanced the CBPR+ AppHdr validation with constraints from CBPR+ restricted BAH v2 schema","title":"9.2.22 - March 2022"},{"location":"release-notes/changelog-validation/#9221-march-2022","text":"(PW-861) Fixed validation of fields 23X, 21H, 77B (MT734) and 98K that was too strict; slash character is allowed in the component using x character set","title":"9.2.21 - March 2022"},{"location":"release-notes/changelog-validation/#9220-february-2022","text":"(PW-856) GPI: Fixed misleading error description in field 111 validation (PW-835) GPI: Field 111 is optional in MT199 even for GPI members Fixed inconsistency in the ValidationResult valid flag returned by the CbprValidationEngine Fixed MX cross-element validations when too elements cannot be present together, but may both be absent","title":"9.2.20 - February 2022"},{"location":"release-notes/changelog-validation/#9219-february-2022","text":"Updated the default ISO 20022 external code set XSD to the February 2022 update camt.029.001.09: Implemented cross-element rules, and CBPR+ UG rules camt.052.001.08: Implemented cross-element rules, and CBPR+ UG rules camt.053._001.08: Implemented cross-element rules, and CBPR+ UG rules camt.056.001.08: Implemented cross-element rules, and CBPR+ UG rules camt.057.001.06: Implemented cross-element rules, and CBPR+ UG rules pacs.002.001.10: Implemented cross-element rules, and CBPR+ UG rules pacs.004.001.09: Implemented cross-element rules, and CBPR+ UG rules Completed UG rules for CBPR+ pacs.008 and pacs.009 variants (COV, STP, ADV)","title":"9.2.19 - February 2022"},{"location":"release-notes/changelog-validation/#9218-february-2022","text":"(PW-837) In MT message length validation, remove line CRLF when computing the message size","title":"9.2.18 - February 2022"},{"location":"release-notes/changelog-validation/#9217-january-2022","text":"(PW-835) Fixed validation of GPI field 111 (block3) expected values per message type","title":"9.2.17 - January 2022"},{"location":"release-notes/changelog-validation/#9216-january-2022","text":"(PW-833) Fixed mandatory field 77E in MTn98 Added UG implementation for CBPR+ pacs.008 STP and pacs.009 ADV/COV","title":"9.2.16 - January 2022"},{"location":"release-notes/changelog-validation/#9215-january-2022","text":"SCORE messages semantic validations review","title":"9.2.15 - January 2022"},{"location":"release-notes/changelog-validation/#9214-january-2022","text":"(PW-819-820) SCORE message MT798_760 validation fixes Added UG implementation for CBPR+ camt.054 Implemented cross-element rules for camt.054.001.08 Added validation for MX match between AppHdr message identifier and Document namespace","title":"9.2.14 - January 2022"},{"location":"release-notes/changelog-validation/#9213-january-2022","text":"(PW-815) Fixed validation of field 12H (SCORE) where narrative is optional MT530 validation: Fixed semantic 237 rule, where subsequence C1 is repetitive Added UG implementation for CBPR+ pacs.009 Implemented cross-element rules for pacs.009.001.08","title":"9.2.13 - January 2022"},{"location":"release-notes/changelog-validation/#9212-december-2021","text":"Added a specific CbprValidationEngine class to validate CBPR+ messages Added UG implementation for CBPR+ pacs.008 Implemented cross-element rules for pacs.008.001.08 Added com.prowidesoftware.integrator.validation as automatic module name in the MANIFEST for JPMS support","title":"9.2.12 - December 2021"},{"location":"release-notes/changelog-validation/#9211-december-2021","text":"(PW-799) fixed validation of semantic rule 199 in MT564","title":"9.2.11 - December 2021"},{"location":"release-notes/changelog-validation/#9210-december-2021","text":"(PW-780) Added ValidationConfiguration#setGpiMember to override the general static SdkConfiguration#setGpiMember (PW-764) Fixed error description in field 119 (block 3) validation","title":"9.2.10 - December 2021"},{"location":"release-notes/changelog-validation/#929-november-2021","text":"(PW-772) Enable empty lines in MT568 field 70F as it is exceptionally allowed in the ISO 15022 usage guidelines In Mx IBAN validation added specific error code D00003","title":"9.2.9 - November 2021"},{"location":"release-notes/changelog-validation/#928-november-2021","text":"(PW-764) Reviewed validation of field 119 (block 3) (PW-703) Clearer validation results for MT block 2 with invalid identifier Added IBAN validation (including local account format) for MX elements containing IBAN numbers Added optional IBAN validation for MT messages, for specific fields where IBAN validation is explicitly requested by configuration MX validation: renamed proprietary error codes for invalid currency and country codes by standard codes D00004 and D00005 Fixed validation of letter options in B/98a","title":"9.2.8 - November 2021"},{"location":"release-notes/changelog-validation/#927-october-2021","text":"Added validation of block 2 Output (only Input was validated before, while Output was ignored) Fixed validation of value for Field 26A ( )","title":"9.2.7 - October 2021"},{"location":"release-notes/changelog-validation/#926-october-2021","text":"(PW-705) Added validation of mandatory CHK in block 5 when the trailer block is present (PW-703) More verbose MT headers validation (PW-677) MT670, MT671: fixed implementation of semantic check 112 (D12)","title":"9.2.6 - October 2021"},{"location":"release-notes/changelog-validation/#924-september-2021","text":"(PW-664) Parser enhancement to detect LF before block identifier as validation problem (not exception)","title":"9.2.4 - September 2021"},{"location":"release-notes/changelog-validation/#923-august-2021","text":"Added german translation for validation problems","title":"9.2.3 - August 2021"},{"location":"release-notes/changelog-validation/#922-august-2021","text":"(PW-599) MT564: Minor scheme fix, 92a TAXR and WITL can be repeated in CASHMOVE (E2) MT548: Minor scheme fix, added letter option \"C\" in field \"98C:SCTS\" in sequence \"C1a1B1\" (PW-578) Fixed SAX logging with misleading parse errors","title":"9.2.2 - August 2021"},{"location":"release-notes/changelog-validation/#921-june-2021","text":"(PW-536) Replaced deprecated API in the MX validation (PW-536) Fixed misleading typo in semantic E94 error description (PW-517) Removed the actual licensed BICs information from the unlicensed error description in the validator","title":"9.2.1 - June 2021"},{"location":"release-notes/changelog-validation/#920-may-2021","text":"SWIFT Standard release update 2021 (live 21 November 2021) Yearly revision of deprecation phase (see http://www.prowidesoftware.com/resources/deprecation-policy) More accurate structure problems reporting, with a customizable lookahead for sequence resynchronization after a field partial match Enhanced unexpected fields problem reporting, in some situations it used to trigger also misleading errors about the unexpected field repetitions","title":"9.2.0 - May 2021"},{"location":"release-notes/changelog-validation/#9116-april-2021","text":"Added support for ISO 20022 external code set validations Externalized the validation engine configuration into a ValidationConfiguration class (PW-517) Removed the actual licensed BICs information from the unlicensed error description in the validator","title":"9.1.16 - April 2021"},{"location":"release-notes/changelog-validation/#9115-april-2021","text":"(PW-460) Divided the internal schemas package into packages by category to allow trimming the jar by use","title":"9.1.15 - April 2021"},{"location":"release-notes/changelog-validation/#9114-april-2021","text":"(PW-500) Fixed validation of qualifiers when the component is optional Fixed qualifier error reporting in fields 41A and 41D Replaced generic error code KNN with specific code for each field, such as K41, K23, K92","title":"9.1.14 - April 2021"},{"location":"release-notes/changelog-validation/#9113-april-2021","text":"(PW-508) Fixed validator pattern in field 98K","title":"9.1.13 - April 2021"},{"location":"release-notes/changelog-validation/#9112-april-2021","text":"Enhanced MT structure error detection and reporting (missing and unexpected fields) Fixed validation of fields 12 and 27A in MT SCORE messages","title":"9.1.12 - April 2021"},{"location":"release-notes/changelog-validation/#9111-march-2021","text":"Added semantic validation for available SCORE messages (PW-499) Fixed schemes for MT513, MT564 and MT566: invalid qualifier in field 69D","title":"9.1.11 - March 2021"},{"location":"release-notes/changelog-validation/#9110-march-2021","text":"(PW-494) Fixed schemes for MT565 (sequence B can be repeated up to 1) and MT568 (sequence B is optional, not mandatory)","title":"9.1.10 - March 2021"},{"location":"release-notes/changelog-validation/#919-march-2021","text":"(PW-493) Fixed scheme for MT671, missing :22H::PRCD//PREF in Other Details sequence Added mtInSequenceResyncLookAhead parameter in the ValidationEngine#Configuration to control the error reporting accuracy Added mtEnhancedRepetitionProblemReportingMode parameter in the ValidationEngine#Configuration to switch off redundant field repetition related errors Removed T13 rule from MTn98 proprietary messages validation (only kept for n92, n95 and n96) Changed default toString in ValidationProblem to use the human-friendly error description","title":"9.1.9 - March 2021"},{"location":"release-notes/changelog-validation/#918-december-2020","text":"(PW-424) Fixed validation of mandatory field 111 (PW-398) Added check for expected values in field 111 (U14 error code)","title":"9.1.8 - December 2020"},{"location":"release-notes/changelog-validation/#917-december-2020","text":"License check review","title":"9.1.7 - December 2020"},{"location":"release-notes/changelog-validation/#916-november-2020","text":"Field validation changes in 83J, 86J, 50F and 59F are now parked until SRU2021 (only cat 5 changes are in force in SRU2020)","title":"9.1.6 - November 2020"},{"location":"release-notes/changelog-validation/#915-november-2020","text":"(PW-413) 564 added qualifier option SRDC in field 17B in sequence D 530 added qualifiers options BYIY and BDEF in field 22 in sequence B 530 added optional fields 90[A,B] and 19A BCAM in sequence C 565 minor fix in conditional qualifier check in field 92K in sequence C","title":"9.1.5 - November 2020"},{"location":"release-notes/changelog-validation/#914-september-2020","text":"In MTs 300, 305, 306, 320, 330, 340, 341 and 350 added a missing network rule validating the reference number in fields 22 and 22C against the message rate field Added internal BIC validation skip for SWIFT special BIC codes such as: TRCKCHZZ (GPI) and TRGTXEPM (Target) Fixed semantic check 254 to handle 23E field repetitions properly","title":"9.1.4 - September 2020"},{"location":"release-notes/changelog-validation/#913-september-2020","text":"Minor fix in semantic 204, 209 and 210 checks when the party identifier is only slashes","title":"9.1.3 - September 2020"},{"location":"release-notes/changelog-validation/#912-august-2020","text":"(PW-325) Added ValidationEngine.Configuration#addRegisteredBic to programmatically register valid BICs not available in the embedded BIC directory (PW-325) Enhanced de BIC directory validation to avoid false error for Test & Training BIC codes (query will match any equivalent production BIC)","title":"9.1.2 - August 2020"},{"location":"release-notes/changelog-validation/#911-jun-2020","text":"Removed a false positive deprecation warning when configuring ignored validation codes","title":"9.1.1 - Jun 2020"},{"location":"release-notes/changelog-validation/#910-may-2020","text":"SWIFT Standard release update 2020 (live 22 November 2020) Yearly revision of deprecation phase (see http://www.prowidesoftware.com/resources/deprecation-policy)","title":"9.1.0 - May 2020"},{"location":"release-notes/changelog-validation/#902-may-2020","text":"Added validation of ISO business header version 2 (head.001.001.02) when found in a message Added a configuration in the ValidationEngine.Configuration to optionally disable ERI validation Added validation for ERI in fields 61, 72, 77A, 79 and 86, when ERI is present and depending on the message type Fixed amount validation when the whole number part is not present","title":"9.0.2 - May 2020"},{"location":"release-notes/changelog-validation/#901-may-2020","text":"Fixed validation of field 72 in MT760","title":"9.0.1 - May 2020"},{"location":"release-notes/changelog-validation/#900-may-2020","text":"Validation module extracted to its own jar in the distribution, with its own version from now on","title":"9.0.0 - May 2020"},{"location":"release-notes/changelog-validation/#809-may-2020","text":"Fixed scheme for 564, typo in MET2 and MET3 qualifiers","title":"8.0.9 - May 2020"},{"location":"release-notes/changelog-validation/#808-april-2020","text":"Fixed validation of field 50F party line, was accepting up to 34 characters instead of the 35 allowed limit for the field Enabled presence of field 121 in all payment messages (category 1 and 2) Added support to validate restricted ISO20022 for CBPR+ (PW-259) Fixed semantic 157 check, when amount is zero with decimals Fixed schemes for MT537 adn 458, in sequence PENDET required field is 99A and not 99B Enhanced error reporting for semantic checks: 41, 131, 132, 146 and 147","title":"8.0.8 - April 2020"},{"location":"release-notes/changelog-validation/#807-march-2020","text":"Added support to validate restricted ISO20022 for SIC (Swiss RTGS) MT548: Fixed repetitions of field 94 in sequence C1a1A1 MT537: Fixed structure for D1a1A1 MT537: Fixed sequence B2b where field 98 option EXSE is mandatory Fixed semantic check 256 affecting validation for message 535 and 536","title":"8.0.7 - March 2020"},{"location":"release-notes/changelog-validation/#806-february-2020","text":"Fixed T96 check in SB-LC function (affecting fields 22 and 22C) where alphanumeric order must give precedence to letters over numbers","title":"8.0.6 - February 2020"},{"location":"release-notes/changelog-validation/#804-december-2019","text":"Fixed resource bundle for MX messages when retrieved for specific locale Added convenient toJson with preformatted validaiton problem messages, to the ValidationResult DTO Fixed detection of invalid trailing empty lines in MT field values","title":"8.0.4 - December 2019"},{"location":"release-notes/changelog-validation/#803-september-2019","text":"(PW-185) Replaced custom error codes with SWIFT standard FIN error codes such as Hnn and Tnn Added new validation entry points for MX messages to use specific XSD schemas (useful to validate SEPA messages) Added missing field validations: T14, T49, T70, T75, T88 Fixed validation of conditional qualifier in field 93C in MT566","title":"8.0.3 - September 2019"},{"location":"release-notes/changelog-validation/#802-august-2019","text":"Fixed validation of conditional qualifier in field 93C in MT566 Fixed bin/validator CLI app that stopped reading input on the first line break Fixed occasional BIC truncation validating large MX messages","title":"8.0.2 - August 2019"},{"location":"release-notes/changelog-validation/#801-july-2019","text":"Enhanced the configuration to enable ignoring validation problems by specific key, by name or by type Fixed validation of BIC codes in MX when the BIC directory is disabled Fixed BIC not registered error reporting when validating MX messages Fixed semantic check 196 affecting MTs 362","title":"8.0.1 - July 2019"},{"location":"release-notes/changelog-validation/#800-may-2019","text":"JRE requirement increased to Java 1.8 SWIFT Standard release update 2019 (live 17 November 2019) Yearly revision of deprecation phase (see http://www.prowidesoftware.com/resources/deprecation-policy) Fixed semantic check 157 affecting MTs 320, 330 adn 620","title":"8.0.0 - May 2019"},{"location":"release-notes/changelog-validation/#7109-may-2019","text":"Fixed SB-LC validation, affecting fields 22 and 22C (common reference); added the missing alphabetic sort check in the parties code and location Fixed lines count check in multiline fields with optional party identifier in first line (ex: 58D)","title":"7.10.9 - May 2019"},{"location":"release-notes/changelog-validation/#7108-march-2019","text":"Updated dependencies: apache-commons-lang 3.7 -> 3.8.1 Updated dependencies: apache-text 1.3 -> 1.6 Fixed obfuscation to keep directories in jar","title":"7.10.8 - March 2019"},{"location":"release-notes/changelog-validation/#7107-january-2019","text":"Added missing path when reporting invalid country code in MX Fixed duplicated error reporting when validating MX messages Added the XsdRegistry interface to allow overwriting the default schemas when validating MX messages Enhanced the MX error reporting to include the repetitive element index in the validation problem xPath Added support for custom MX validation rules Enhanced validation and error reporting for fields 50F and 59F Minor performance enhancement for validation process with exit on first error Added support in MX validation to optionally ignore XSD ERROR","title":"7.10.7 - January 2019"},{"location":"release-notes/changelog-validation/#7106-november-2018","text":"Added ISO country code validation for CountryCode elements in MX messages Fixed GPI validation to NAK non-GPI messages with fields 121 or 111 Fixed GPI validation to NAK GPI-message with field 111 when the institution is not a GPI member Fixed error description for structure validation problem TOO_BIG Enabled the UETR validation for any message type, it is still mandatory for GPI messages only though (PW-103) Activated the UETR format validation also for output messages (received from SWIFT) Fixed semantic validation 201 affecting MT564","title":"7.10.6 - November 2018"},{"location":"release-notes/changelog-validation/#7104-september-2018","text":"Bugfix validating empty first line in fields value Enhanced error reporting in BIC validation, including details of the BIC subfield where the validation problem is found Enhanced the BIC validation checking the country code within the BIC is a valid ISO country MX: Added BIC validation using the BIC directory (optional by configuration) for elements containing BIC codes MT: Added BIC validation using the BIC directory (optional by configuration) for the sender and receiver address in the headers","title":"7.10.4 - September 2018"},{"location":"release-notes/changelog-validation/#7103-july-2018","text":"Added a specific PARSE_ERROR validation problem to report when the message has an invalid block structure Prevention of IllegalArgumentException when the hyphen is missing in the closing bracket of block 4 Added MX currency validation using ISO currencies from ISOUtils","title":"7.10.3 - July 2018"},{"location":"release-notes/changelog-validation/#7102-july-2018","text":"Fixed spanish description of semantic E45 check Fixed component size check in validation of Field 59F","title":"7.10.2 - July 2018"},{"location":"release-notes/changelog-validation/#7101-may-2018","text":"Added field 434 in block 3 validation","title":"7.10.1 - May 2018"},{"location":"release-notes/changelog-validation/#7100-april-2018","text":"SWIFT Standard release update 2018 JRE requirement increased to Java 1.7 Dependencies: updated apache commons-lang from 2.6 to 3.7 Yearly revision of deprecation phase (see http://www.prowidesoftware.com/resources/deprecation-policy)","title":"7.10.0 - April 2018"},{"location":"release-notes/changelog-validation/#798-april-2018","text":"Enhanced validation of IBAN numbers verifying the check digits and the custom account number per country (BBAN) MT306: message scheme fix, added the missing 57 ADJ optional field at the end of sequence L Minor fixes in semantic validation rule 40 and rule 122","title":"7.9.8 - April 2018"},{"location":"release-notes/changelog-validation/#797-january-2018","text":"Changes in the distribution package: Command line tools in the bic directory changed from jar files to wrapper scripts Dependencies directory renamed to lib Removed the BUILD id timestamp from the jar files Removed the BaseTestCase class from the public API to avoid Junit dependency Added ValidationProblem#printout to generate a human friendly printout of a validation problem list Updated dependency: org.mozilla:rhino:1.7R4 -> org.mozilla:rhino:1.7.7.2","title":"7.9.7 - January 2018"},{"location":"release-notes/changelog-validation/#796-december-2017","text":"Minor fix in semantic27 affecting malformed MT942","title":"7.9.6 - December 2017"},{"location":"release-notes/changelog-validation/#794-november-2017","text":"JRE requirement backported to Java 1.6 Fixed validation for field 77J: 50x[\u2019CRLF\u201950x]0-69","title":"7.9.4 - November 2017"},{"location":"release-notes/changelog-validation/#793-october-2017","text":"Added support to validate MX system messages (xsys category) Fixed currency validation (T52) in fields 60F, 62F, 64, 65 and 33B","title":"7.9.3 - October 2017"},{"location":"release-notes/changelog-validation/#792-august-2017","text":"Fixed T26 validation in fields 13B, 22W, 94B, 95a and 98K MT537 fixed qualifier validation for field 98a in transaction details sequence (C2) MT524 fixed implementation for rule 208 when several LINK sequences are present in the message MT545 and MT547: fixed validation for field set 98a in Trade Details sequence (B), qualifier ESET is mandatory while SETT is optional Fixed error code and message throw by semantic rule 267 Added more details when reporting semantic rule 266 errors. Added IsoUtils singleton to allow customization and exceptions for currency and country codes validation Currency and Country codes validation is now implemented using data from Java Currency and Locale Validation of maximum fraction digits per currency (semantic rule 3) is now implemented using data from Java Currency","title":"7.9.2 - August 2017"},{"location":"release-notes/changelog-validation/#791-june-2017","text":"Fixed semantic 167 for MT103 plan (not STP and not REMIT) MT801 first loop can be repeated Fixed semantic 282 affecting MT535 Fixed scheme for MT940 field 60[F,M] is now required","title":"7.9.1 - June 2017"},{"location":"release-notes/changelog-validation/#79-may-2017","text":"SWIFT Standard release update 2017 (live 19 November 2017 for MT and 18 November for MX) MT536: fixed false positive semantic 252 check, fixed qualifiers check in field 98a (sequence B1a2) MT575: transaction details sequence C2, field 98 with SETT or TRAD set as optional MT537: fixed false positive semantic 285 check MT576: additional information sequence C set as optional Fixed semantic rule 259 affecting MT517 link sequence check MT569: fixed incorrect definitions in sequence C1a1 (valuation details) MT506, 569 and 575: field 28E mandatory MT513; sequence A added TRAD qualifier to field 22F, sequence B1 (partial fill details) fields 98 and 94 are optional MT513 and 514: fixed letter option from H to F in field 22F:SETR in settlement details","title":"7.9 - May 2017"},{"location":"release-notes/changelog-validation/#789-may-2017","text":"Yearly revision of deprecation phase (see http://www.prowidesoftware.com/resources/deprecation-policy) Fixed validation of fields 72 and 79 of a Rejected/Return message Renamed FieldProblem.REJT_RETN_0n to more specific errors: REJT_RETN_LINE_n, REJT_RETN_REASON_CODE, REJT_RETN_MREF, REJT_RETN_TREF, REJT_RETN_CHGS, REJT_RETN_TEXT Enhanced validation of user block 3, checking all fields are expected for the message type and checking fields order. Fixed NPE in semantic 119 affecting MTs 102 and 103 STP when IBAN component was not present Added a common type ValidationProblemKey implemented by all problem key enumerations Fixed false positive error validating field 59F when multiple address lines (line label 2) are defined Fixed false positive restriction field 37a second component Fixed scheme for MT505, added missing field 98A:AGRE in sequence A1 Enhanced MX validation to allow MX messages with bank-to-bank namespace declaration Fixed false positive semantic 293 validation for MT507 when sequence B1a1 was not present Fixed letter option in scheme for MT506, sequence D (Collateral Details) field 19 A -> B Fixed qualifier in scheme for MT506, sequence D (Collateral Details) DEAL-> COLL Fixed scheme for MT506, sequence B (Summary) field 95 is mandatory and field 19B only mandatory with qualifier COVA Fixed Semantic 82 implementation affecting MT104 and MT107 Fixed false positive case in Semantic 75, affecting MT104 Fixed validation of leading characters, colon (':') not allowed in second and subsequent lines except for fields 77E and 77T Fixed semantic 103 affecting MT535","title":"7.8.9 - May 2017"},{"location":"release-notes/changelog-validation/#788-march-2017","text":"Added support for nested Document elements when validating MX messages Removed invalid fields following linkages in GENL sequence Cleaner log in semantic rule 3 validation","title":"7.8.8 - March 2017"},{"location":"release-notes/changelog-validation/#787-december-2016","text":"Added check for validation flag (STP, REMIT, COV) in user header block Fixed missing semantic associations to MTs 700, 705, 707, 710, 720, 730, 732, 734, 740, 742, 747, 750, 752, 754, 756, 768, 768, 769, 800, 801, 802, 824 MT518 fixed fieldset for Field 70 MT330 fixed qualifier in Field 22 MT513 and MT514 Field 11 moved outside previous fieldset MT541 to MT547 Field 90[A,B] changed to fieldset. MT564 fixed fieldset items in Field93[B,C] MT565 to MT567 Sequence D, fixed field 13 MT609 and MT798_763 fixed qualifiers in Field 29","title":"7.8.7 - December 2016"},{"location":"release-notes/changelog-validation/#786-november-2016","text":"JRE requirement increased to Java 1.7 (only for Integrator SDK and modules, Core still works on 1.5) semantic 175 minnor fix affecting MT104 and MT107 when multiple sequence B are present","title":"7.8.6 - November 2016"},{"location":"release-notes/changelog-validation/#785-october-2016","text":"Minor fixes in semantic validations: 206 (used in MTs: 103, 564, 566), 279 (used in MTs: 549, 564, 565) MT564: Minor fixes in semantic validations: 199, 211, 224 MT564: field 93 UNBA instead of UMBA MT564: CAOPT sequence, field 92 INTP, missing conditional qualifier NILP MT564: SECMOVE sequence, field 90 PRPP, missing letter option K MT564: SECMOVE sequence, field 92 NEWO, missing letter option M MT564: CASHMOVE sequence, field 92 ESOF, missing letter options F and M MT564: CASHMOVE sequence, field 92 TXIN, missing letter option F MT564: CASHMOVE sequence, field 92 WITL, missing letter option R and its conditional qualifier eval MT564: fixed field 92J subfield ACTU INDI validation MT565: CAINST sequence, field 90 OFFR, missing letter option L MT566: CADETL sequence, field 92 BIDI missing letter option P MT566:CACONF sequence, field 69, removed invalid letter option J MT566: Fixed qualifier in field 13a to allow UNS MT566:SECMOVE sequence, field 90 OFFR, missing letter option L MT566:SECMOVE sequence, field 90 PRPP, missing letter option K MT566:SECMOVE sequence, field 92 NEWO, missing letter option M MT566:SECMOVE sequence, field 92 TAXC, removed invalid letter option K MT566:CASHMOVE sequence, field 92 TXIN, missing letter option F MT566:CASHMOVE sequence, field 90 PRPP, missing letter option K MT566:fixed field 92J subfield ACTU INDI validation MT567: CADETL sequence, field 35B, removed invalid qualifier check SAFE MT567: field19 changed to fieldset","title":"7.8.5 - October 2016"},{"location":"release-notes/changelog-validation/#784-oct-2016","text":"Fixed JS expression in schemes for 564, 565, 566 and 620 Important enhancement in MX validation problem reporting, including full XPATH, line and column of errors. Fixed semantic 291 (affecting 540, 541, 544, 545) Fixed semantic 112 (affecting MTs 670 and 671) Fixed semantic 113 (affecting MTs 380, 381, 503, 504, 506, 670, 671)","title":"7.8.4 - Oct 2016"},{"location":"release-notes/changelog-validation/#783-jul-2016","text":"Added support for changed currency in Belorussia from 974 (BYR) to 933 (BYN). Fixed semantic 210 affecting messages 103, 102, 104 and 107","title":"7.8.3 - Jul 2016"},{"location":"release-notes/changelog-validation/#782-jul-2016","text":"Fixed schemes: definition of field 12A in FIA subsequences of MTs 54x Semantic 283 bugfix (used in MTs 307,503,504,505,506,536,537,548,578,586)","title":"7.8.2 - Jul 2016"},{"location":"release-notes/changelog-validation/#2016-june","text":"Added field repetition validation in block 3","title":"2016 June"},{"location":"release-notes/changelog-validation/#2016-april","text":"Added detection of extra data in message content or blocks when validating a message","title":"2016 April"},{"location":"release-notes/changelog-validation/#2016-february","text":"Fixed validation of min and max repetition in fieldsets, when the attributes are set only in the items","title":"2016 February"},{"location":"release-notes/changelog-validation/#2016-january","text":"Fixed scheme 307, typo in semantic rules attribute Added API in SchemeField to retrieve qualifiers information from parsed scripting expressions","title":"2016 January"},{"location":"release-notes/changelog-validation/#2015-december","text":"Fixed schemes for 600, 601, 604, 605, 606, 607, 608, 609, 620, wrong qualifier for field 26C","title":"2015 December"},{"location":"release-notes/changelog-validation/#2015-november","text":"Fixed validation of repetitive sequence in MT940","title":"2015 November"},{"location":"release-notes/changelog-validation/#2015-october","text":"Fixed validation for fields 129, 12A, 13B, 20E, 23A, 26N, 26P, 92C and 94D; removed restriction on amount of slashes because components use charset x where slash is allowed Fixed validation for fields 14G, 27A, 27, 28[D,E], 29[L,N], 38[G,H], 39[A,P], 68C, 69C, 70[C,D,E,G], 90F, 92R, 93B, 94E, 94G 95[Q,T,U,V] and 98F; added restriction on amount of slashes","title":"2015 October"},{"location":"release-notes/changelog-validation/#2015-september","text":"Fixed scheme for MT567, removed invalid 25D field in sequence A","title":"2015 September"},{"location":"release-notes/changelog-validation/#2015-august","text":"Fixed qualifiers validation scripting in xml schemas for MTs: 306, 360, 361, 362, 364, 365, 500, 501, 535, 564, 565, 566 Enhanced validation patterns naming for better consistency","title":"2015 August"},{"location":"release-notes/changelog-validation/#2015-april","text":"Enhanced structure validation error reporting, when JS expressions are used to check conditional qualifiers. The new scheme validation rule generates a proper message indicating the expected and found qualifiers instead of a generic fail expression error.","title":"2015 April"},{"location":"release-notes/changelog-validation/#2015-march","text":"Bugfix Field validations, new restriction, start of line character cannot be '-'. Bugfix MT535 subsequence B1a, it can be at most one and the scheme was allowing multiple repetitions","title":"2015 March"},{"location":"release-notes/changelog-validation/#2015-february","text":"ValidationEngine enhancement in the default scheme to use, detecting automatically if a 102/103 is STP or if a 202/205 is COV Fixed validation for field 22S, was requiring a 35 characters fixed length for component 2, while the correct validation is up to 35 characters (not fixed) Added more restrictive party field validation when a slash is followed by a blank content, affecting fields 42a, 50a, 51a, 52a, 53a, 54a, 55a, 56a, 57a, 58a, 59a, 81a, 82a 83a, 84a, 85a, 86a, 87a, 88a, 89a, 91a, 96a SchemeValidationRule version 2: new version of structure validation for MT, with several enhancements and bug fixes over the previous version. Important performance enhancement in MT structure validation (30% in average, reaching a 60% for some message structures). Important enhancement in structure error reporting, errors are now more specific and detailed with more details. Better error localization, avoiding duplicated error field validation in some situations. Improvement in scheme's scripting validations, isolating script compile errors from unsatisfied logic conditions. Fixed scheme validation for MT300 that was throwing a false problems for some combination of subsequences E, E1 and E1a.","title":"2015 February"},{"location":"release-notes/changelog-validation/#2015-january","text":"RuleManager: fixed loading of field rules, that was skipping incorrectly field validation to fields derived from fieldsets","title":"2015 January"},{"location":"release-notes/changelog-validation/#2014-december","text":"Better error message format in BaseTestCase Fixed error message for E73 Review of semantic rules 85,86,198 ValidationEngine: Added API to validate from AbstractMT ValidationEngine: Added exclusive API to use when validating messages in strings or files (with swift format, not parsed objects) therefore detecting more error conditions AbstractTagValidationRule: Fixed validation that had a bug in special conditions, Output messages (received from swift) and with sender and receiver within the same institution","title":"2014 December"},{"location":"release-notes/changelog-validation/#2014-november","text":"Bugfix in schemas 515, 536 Enhanced MT expression validation reporting, diferenciating invalid expressions, from runtime errors or failed expression evaluation. Bugfix. Fixed expressions in schemes xml for MT576 and MT568, replacing deprecated function call addQuaifiers by qualifier Bugfix. Added validation of T13 rule to MTs n98","title":"2014 November"},{"location":"release-notes/changelog-validation/#2014-september","text":"Bugfix. Missing resource bundle for invalid BIC validation problem Added addVariable method to ValidationProblem Bugfix. Fields 95Q and 70C were restricted to maximum 3 lines, while 4 lines are compliant as well. Bugfix. Fixed XML for MT537, field 22H conditional qualifier STAN changed to STAT","title":"2014 September"},{"location":"release-notes/changelog-validation/#2014-july","text":"Enhanced structure validation incorporating special field exceptions and required code words (standard PIII Fields Chapter 4) directly into the xml schemes configurations. Affected MTs: 102 STP, 103, 103 STP, 300, 303, 304, 305, 306, 320, 340, 341, 350, 360, 361, 362, 364, 365, 600, 601, 620, 920, 973 Enhanced structure validation error messages to separate unexpected fields problems reporting, from field qualifier problems or expression evaluation problems Enhanced field validation to avoid repetitive checks for empty content and/or empty lines Bugfix. MT306 optional field 12G changed to 12D and added missing field class Bugfix. SchemeXmlReader to properly set fieldset items' qualifiers and letter options when inherited from container fieldset Bugfix. Added null controls to several semantic validations to prevent NPE that would previously arise when applying semantic checks to messages with specific invalid structures Bugfix. Fixed XML for MT540, field 90 changed to fieldset 90 to allow qualifier validation for items Review and code clean of semantic rule 24, 52 SRU 2014. Affected MTs: 300, 304, 305, 306, 340, 341, 360, 361, 380, 381, 502, 506, 508, 509, 513, 514, 515, 518, 527, 530, 536, 537, 538, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 558, 564, 565, 566, 567, 568, 569, 575, 600, 601, 942 Added description and release attributes to Scheme Minor fix in MT300 sequences structure, B1 and B2 inside B, and named D's subsequence as D1 Bugfix. MT300 optional field 17A changed to optional field 77A (field number was wrong) Bugfix. MT514 fixed missing mandatory fields 36B and 35B between end of sequence B1 and start of sequence B2 Bugfix. MT515 fixed field 90[A,B] with qualifier DEAL at sequence C, changed from optional to mandatory (minRepetition was wrong)","title":"2014 July"},{"location":"release-notes/changelog-validation/#2014-may","text":"Review and code clean of semantic rule 184 Review and code clean of semantic rule 176 Review and code clean of semantic rule 152, 153, 154 Performance enhancements: execution speed reduced by approx 71% measured in global test suite","title":"2014 May"},{"location":"release-notes/changelog-validation/#2014-april","text":"Review and code clean of semantic rule 131, 253, 133, 135 Fixed semantic 116 rule incorrectly interpreting sequence C absence for MT306","title":"2014 April"},{"location":"release-notes/changelog-validation/#2014-march","text":"MT564: Added missing option K to field 90 in sequence E2 cash movements Review and code clean of semantic rule 92, 95 Review and code clean of semantic rule 66, 67, 68 ,78, 84, 93 Review and code clean of semantic rule 61, 57, 58, 62 Added validation problems translation to Italian. Bugfix. Fixed invalid check for X in 8th position for logical terminals without A, B, C identifier Bugfix. Fixed Block1 validation, allowing Logical terminal without the A, B, C identifier (11 characters length) Bugfix. Field validation was not accepting 999 as a valid MT number (example field 11R)","title":"2014 March"},{"location":"release-notes/changelog-validation/#2014-february","text":"Bugfix. Affected MTs:n92, n95, n96, n98. Fixed isolation of fields copied from original message from the fields of the message being validated Bugfix semantic rule 31 that was throwing false positives when field 79 was included in the appended original message's fields Initial addition of FieldFilter and FieldFilterUtils API Maintenance review of semantic rule 71 Review and code clean of semantic rule 211, 221, 262 Added API to BaseTestCase Review and code clean of semantic rule 209 Review and code clean of semantic rule 201, 202, 206 Bugfix. Affected MTs: 564. Fixed semantic rule 71 that was throwing IOB exceptions for some valid combinations of fields 93B Bugfix. Affected MTs: 568, 569, 574, 575, 576, 578, 586, 670, 671. Fixed xml schemes, changing the invalid scripting method conditionalQualifiers to conditionalQualifier Review and code clean of semantic rule 203, 206, 209, 221 Review and code clean of semantic rule 201, 202 Bugfix. Affected MTs: 305. Fixed false positive missing field errors when the message ends with nested optional subsequences with inner mandatory fields Review and code clean of semantic rule 192, 72, 199 Review and code clean of semantic rule 71 Review and code clean of semantic rules impacting MT305 Added a code generation tool that can be run from command line to create custom version of Field and MT classes Added a command line application to use the messages validation in standalone mode, validating messages from file system","title":"2014 February"},{"location":"release-notes/changelog-validation/#2014-january","text":"Added validation rules for fields belonging to system messages (i.e. 451) Adding constants to Literals class to avoid usage of hardcoded strings and cleaner code with static imports Bugfix. Affected MTs: 207. Fixed maximum repetitions of sequence B from 1 to unlimited Maintenance(Review and performance updates) semantic rule #167, #54, #55 Maintenance(Review and performance updates) semantic rule #161 Maintenance(Review and performance updates) semantic rule #168, #246, #254 Added filter() to AbstractSemanticValidationRule Maintenance(Review and performance updates) semantic rule #162, #166 Added BaseTestCase.assertValid(String) Fixed issue in semantic rule 154 which did not consider properly B sequences Maintenance(Review and performance updates) semantic rule #160, #164","title":"2014 January"},{"location":"release-notes/changelog-validation/#2014-01-15","text":"Fixed issue in semantic rule 77 affecting MTs 730, 768 and 769","title":"2014-01-15"},{"location":"release-notes/changelog-validation/#2013-october","text":"Maintenance(Review and performance updates) semantic rule #44, #45, #46, $47, #48, #51, #53 Maintenance(Review and performance updates) semantic rule #106, #108, #30, #40, #42 Review and performance updates on S102 Refactored max msg length validation to use enum in structure problem for reporting errors Review and performance updates on S79","title":"2013 October"},{"location":"release-notes/changelog-validation/#2013-september","text":"SRU 2013 update Fixed incomplete validation for field 77E","title":"2013 September"},{"location":"release-notes/changelog-validation/#2013-march","text":"Bugfix: fixed typo at field 22H in MT380, BUYI->BUY1","title":"2013 March"},{"location":"release-notes/changelog-validation/#2012-june","text":"Added API to specify locale on ValidationProblem.getMessage method","title":"2012 June"},{"location":"release-notes/mule/","text":"Prowide MULE connector The Prowide Mule connector is hosted in Mule Exchange and facilitates the integration and usage of the Prowide libraries for MT, ISO 20022 and CBPR+ in Mule applications. https://www.anypoint.mulesoft.com/exchange/ 1.0.0 - September 2020 (Not released yet) Mule Runtime compatibility: 4.1.0+ Initial version including operations for validation and translation for MT, ISO 20022 and CBPR+","title":"Prowide Mule connector"},{"location":"release-notes/mule/#prowide-mule-connector","text":"The Prowide Mule connector is hosted in Mule Exchange and facilitates the integration and usage of the Prowide libraries for MT, ISO 20022 and CBPR+ in Mule applications. https://www.anypoint.mulesoft.com/exchange/","title":"Prowide MULE connector"},{"location":"release-notes/mule/#100-september-2020-not-released-yet","text":"Mule Runtime compatibility: 4.1.0+ Initial version including operations for validation and translation for MT, ISO 20022 and CBPR+","title":"1.0.0 - September 2020 (Not released yet)"}]}